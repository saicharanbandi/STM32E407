ARM GAS  /tmp/ccwbeIhm.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB126:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccwbeIhm.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** TIM_HandleTypeDef htim2;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* start_timer variable designates first external interrupt */
  55:Src/main.c    **** unsigned char start_timer = 0;
  56:Src/main.c    **** /* this variable used to measure the ticks of timer2 */
  57:Src/main.c    **** int tick_count = 0;
  58:Src/main.c    **** /* array initialization for receive buffer */
  59:Src/main.c    **** volatile unsigned char dali_slave_array_receive_buffer[9];
  60:Src/main.c    **** /* bit_count variable used in dali_decoding */
  61:Src/main.c    **** unsigned char bit_count = 0;
  62:Src/main.c    **** /*Address and Command byte received variables */
  63:Src/main.c    **** volatile unsigned char slave_addr_byte_received;
  64:Src/main.c    **** volatile unsigned char slave_cmd_byte_received;
  65:Src/main.c    **** 
  66:Src/main.c    **** 
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PV */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  71:Src/main.c    **** void SystemClock_Config(void);
  72:Src/main.c    **** static void MX_GPIO_Init(void);
  73:Src/main.c    **** static void MX_TIM2_Init(void);
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN PFP */
  76:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  77:Src/main.c    **** void Forward_Frame_Received(void);
  78:Src/main.c    **** /* USER CODE END PFP */
  79:Src/main.c    **** 
  80:Src/main.c    **** /* USER CODE BEGIN 0 */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* USER CODE END 0 */
  83:Src/main.c    **** 
  84:Src/main.c    **** int main(void)
  85:Src/main.c    **** {
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN 1 */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END 1 */
ARM GAS  /tmp/ccwbeIhm.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  94:Src/main.c    ****   HAL_Init();
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE BEGIN Init */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END Init */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Configure the system clock */
 101:Src/main.c    ****   SystemClock_Config();
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE END SysInit */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* Initialize all configured peripherals */
 108:Src/main.c    ****   MX_GPIO_Init();
 109:Src/main.c    ****   MX_TIM2_Init();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE BEGIN 2 */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* Wait for the first external interrupt */
 114:Src/main.c    ****   while(start_timer == 0)
 115:Src/main.c    ****     {
 116:Src/main.c    ****     }
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* Start the timer time base in interrupt mode */
 119:Src/main.c    ****   if(HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 120:Src/main.c    ****     {
 121:Src/main.c    ****       _Error_Handler(__FILE__, __LINE__);
 122:Src/main.c    ****     }
 123:Src/main.c    ****   /* USER CODE END 2 */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* Infinite loop */
 126:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 127:Src/main.c    ****   while (1)
 128:Src/main.c    ****   {
 129:Src/main.c    ****   /* USER CODE END WHILE */
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* USER CODE BEGIN 3 */
 132:Src/main.c    **** 
 133:Src/main.c    ****   }
 134:Src/main.c    ****   /* USER CODE END 3 */
 135:Src/main.c    **** 
 136:Src/main.c    **** }
 137:Src/main.c    **** 
 138:Src/main.c    **** /** System Clock Configuration
 139:Src/main.c    **** */
 140:Src/main.c    **** void SystemClock_Config(void)
 141:Src/main.c    **** {
 142:Src/main.c    **** 
 143:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 144:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 145:Src/main.c    **** 
 146:Src/main.c    ****     /**Configure the main internal regulator output voltage 
ARM GAS  /tmp/ccwbeIhm.s 			page 4


 147:Src/main.c    ****     */
 148:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 149:Src/main.c    **** 
 150:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 151:Src/main.c    **** 
 152:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 153:Src/main.c    ****     */
 154:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 155:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 156:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 163:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 164:Src/main.c    ****   {
 165:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 166:Src/main.c    ****   }
 167:Src/main.c    **** 
 168:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 169:Src/main.c    ****     */
 170:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 171:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 172:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 173:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 174:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 175:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 176:Src/main.c    **** 
 177:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 178:Src/main.c    ****   {
 179:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 180:Src/main.c    ****   }
 181:Src/main.c    **** 
 182:Src/main.c    ****     /**Configure the Systick interrupt time 
 183:Src/main.c    ****     */
 184:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 185:Src/main.c    **** 
 186:Src/main.c    ****     /**Configure the Systick 
 187:Src/main.c    ****     */
 188:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 191:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 192:Src/main.c    **** }
 193:Src/main.c    **** 
 194:Src/main.c    **** /* TIM2 init function */
 195:Src/main.c    **** static void MX_TIM2_Init(void)
 196:Src/main.c    **** {
 197:Src/main.c    **** 
 198:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 199:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 200:Src/main.c    **** 
 201:Src/main.c    ****   htim2.Instance = TIM2;
 202:Src/main.c    ****   htim2.Init.Prescaler = 83;
 203:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
ARM GAS  /tmp/ccwbeIhm.s 			page 5


 204:Src/main.c    ****   htim2.Init.Period = 103;
 205:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 206:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 207:Src/main.c    ****   {
 208:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 209:Src/main.c    ****   }
 210:Src/main.c    **** 
 211:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 212:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 213:Src/main.c    ****   {
 214:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 215:Src/main.c    ****   }
 216:Src/main.c    **** 
 217:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 218:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 219:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 220:Src/main.c    ****   {
 221:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 222:Src/main.c    ****   }
 223:Src/main.c    **** 
 224:Src/main.c    **** }
 225:Src/main.c    **** 
 226:Src/main.c    **** /** Configure pins as 
 227:Src/main.c    ****         * Analog 
 228:Src/main.c    ****         * Input 
 229:Src/main.c    ****         * Output
 230:Src/main.c    ****         * EVENT_OUT
 231:Src/main.c    ****         * EXTI
 232:Src/main.c    **** */
 233:Src/main.c    **** static void MX_GPIO_Init(void)
 234:Src/main.c    **** {
  27              		.loc 1 234 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 87B0     		sub	sp, sp, #28
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
  42              	.LBB2:
 235:Src/main.c    **** 
 236:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 237:Src/main.c    **** 
 238:Src/main.c    ****   /* GPIO Ports Clock Enable */
 239:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  43              		.loc 1 239 0
  44 0004 0024     		movs	r4, #0
  45 0006 0094     		str	r4, [sp]
  46 0008 164B     		ldr	r3, .L3
  47 000a 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccwbeIhm.s 			page 6


  48 000c 42F02002 		orr	r2, r2, #32
  49 0010 1A63     		str	r2, [r3, #48]
  50 0012 1B6B     		ldr	r3, [r3, #48]
  51 0014 03F02003 		and	r3, r3, #32
  52 0018 0093     		str	r3, [sp]
  53 001a 009B     		ldr	r3, [sp]
  54              	.LBE2:
 240:Src/main.c    **** 
 241:Src/main.c    ****   /*Configure GPIO pin Output Level */
 242:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, LED_Green_Pin|LED_Blue_Pin|LED_Yellow_Pin|LED_Red_Pin, GPIO_PIN_RESET);
  55              		.loc 1 242 0
  56 001c 124D     		ldr	r5, .L3+4
  57 001e 2246     		mov	r2, r4
  58 0020 3C21     		movs	r1, #60
  59 0022 2846     		mov	r0, r5
  60 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
  61              	.LVL0:
 243:Src/main.c    **** 
 244:Src/main.c    ****   /*Configure GPIO pins : LED_Green_Pin LED_Blue_Pin LED_Yellow_Pin LED_Red_Pin */
 245:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Green_Pin|LED_Blue_Pin|LED_Yellow_Pin|LED_Red_Pin;
  62              		.loc 1 245 0
  63 0028 3C23     		movs	r3, #60
  64 002a 0193     		str	r3, [sp, #4]
 246:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  65              		.loc 1 246 0
  66 002c 0126     		movs	r6, #1
  67 002e 0296     		str	r6, [sp, #8]
 247:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  68              		.loc 1 247 0
  69 0030 0227     		movs	r7, #2
  70 0032 0397     		str	r7, [sp, #12]
 248:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  71              		.loc 1 248 0
  72 0034 0494     		str	r4, [sp, #16]
 249:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
  73              		.loc 1 249 0
  74 0036 01A9     		add	r1, sp, #4
  75 0038 2846     		mov	r0, r5
  76 003a FFF7FEFF 		bl	HAL_GPIO_Init
  77              	.LVL1:
 250:Src/main.c    **** 
 251:Src/main.c    ****   /*Configure GPIO pin : Manch_Rx_Pin */
 252:Src/main.c    ****   GPIO_InitStruct.Pin = Manch_Rx_Pin;
  78              		.loc 1 252 0
  79 003e 4023     		movs	r3, #64
  80 0040 0193     		str	r3, [sp, #4]
 253:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  81              		.loc 1 253 0
  82 0042 0A4B     		ldr	r3, .L3+8
  83 0044 0293     		str	r3, [sp, #8]
 254:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  84              		.loc 1 254 0
  85 0046 0397     		str	r7, [sp, #12]
 255:Src/main.c    ****   HAL_GPIO_Init(Manch_Rx_GPIO_Port, &GPIO_InitStruct);
  86              		.loc 1 255 0
  87 0048 01A9     		add	r1, sp, #4
  88 004a 2846     		mov	r0, r5
ARM GAS  /tmp/ccwbeIhm.s 			page 7


  89 004c FFF7FEFF 		bl	HAL_GPIO_Init
  90              	.LVL2:
 256:Src/main.c    **** 
 257:Src/main.c    ****   /* EXTI interrupt init*/
 258:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 1, 0);
  91              		.loc 1 258 0
  92 0050 2246     		mov	r2, r4
  93 0052 3146     		mov	r1, r6
  94 0054 1720     		movs	r0, #23
  95 0056 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  96              	.LVL3:
 259:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
  97              		.loc 1 259 0
  98 005a 1720     		movs	r0, #23
  99 005c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 100              	.LVL4:
 260:Src/main.c    **** 
 261:Src/main.c    **** }
 101              		.loc 1 261 0
 102 0060 07B0     		add	sp, sp, #28
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 20
 105              		@ sp needed
 106 0062 F0BD     		pop	{r4, r5, r6, r7, pc}
 107              	.L4:
 108              		.align	2
 109              	.L3:
 110 0064 00380240 		.word	1073887232
 111 0068 00140240 		.word	1073878016
 112 006c 00001110 		.word	269549568
 113              		.cfi_endproc
 114              	.LFE126:
 116              		.section	.text.Forward_Frame_Received,"ax",%progbits
 117              		.align	1
 118              		.global	Forward_Frame_Received
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	Forward_Frame_Received:
 125              	.LFB128:
 262:Src/main.c    **** 
 263:Src/main.c    **** /* USER CODE BEGIN 4 */
 264:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 265:Src/main.c    **** {
 266:Src/main.c    **** 
 267:Src/main.c    ****   /* Wait for the settling time to be over */
 268:Src/main.c    ****   if(tick_count >= 41)
 269:Src/main.c    ****     {
 270:Src/main.c    ****       if(tick_count == bit_count * 8 + 42)
 271:Src/main.c    **** 	{
 272:Src/main.c    **** 	  if(HAL_GPIO_ReadPin(Manch_Rx_GPIO_Port, Manch_Rx_Pin) == GPIO_PIN_SET)
 273:Src/main.c    **** 	    {
 274:Src/main.c    **** 	      dali_slave_array_receive_buffer[bit_count] = 0;
 275:Src/main.c    **** 	    }
 276:Src/main.c    **** 	  else if(HAL_GPIO_ReadPin(Manch_Rx_GPIO_Port, Manch_Rx_Pin) == GPIO_PIN_RESET)
 277:Src/main.c    **** 	    {
ARM GAS  /tmp/ccwbeIhm.s 			page 8


 278:Src/main.c    **** 	      dali_slave_array_receive_buffer[bit_count] = 1;
 279:Src/main.c    **** 	    }
 280:Src/main.c    **** 	}
 281:Src/main.c    ****       
 282:Src/main.c    ****       if(tick_count % 8  == 0)
 283:Src/main.c    ****       	{
 284:Src/main.c    ****       	  bit_count++;
 285:Src/main.c    ****       	}
 286:Src/main.c    **** 
 287:Src/main.c    ****       // transfer completed
 288:Src/main.c    ****       if(bit_count > 8)
 289:Src/main.c    ****       	{
 290:Src/main.c    ****       	  if(HAL_TIM_Base_Stop_IT(&htim2) != HAL_OK)
 291:Src/main.c    ****       	    {
 292:Src/main.c    ****       	      _Error_Handler(__FILE__, __LINE__);
 293:Src/main.c    ****       	    }
 294:Src/main.c    ****           Forward_Frame_Received();
 295:Src/main.c    ****       	}
 296:Src/main.c    ****       
 297:Src/main.c    ****       
 298:Src/main.c    ****     }
 299:Src/main.c    **** 
 300:Src/main.c    ****   // increment ticks
 301:Src/main.c    ****   tick_count++;
 302:Src/main.c    **** 
 303:Src/main.c    ****   
 304:Src/main.c    **** }
 305:Src/main.c    **** 
 306:Src/main.c    **** void Forward_Frame_Received(void)
 307:Src/main.c    **** {
 126              		.loc 1 307 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130 0000 08B5     		push	{r3, lr}
 131              	.LCFI3:
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 3, -8
 134              		.cfi_offset 14, -4
 135              	.LVL5:
 308:Src/main.c    ****   unsigned char i = 0;
 309:Src/main.c    ****   for (i = 1; i<9; i++)
 136              		.loc 1 309 0
 137 0002 0123     		movs	r3, #1
 138 0004 01E0     		b	.L6
 139              	.LVL6:
 140              	.L7:
 141              		.loc 1 309 0 is_stmt 0 discriminator 2
 142 0006 0133     		adds	r3, r3, #1
 143              	.LVL7:
 144 0008 DBB2     		uxtb	r3, r3
 145              	.LVL8:
 146              	.L6:
 147              		.loc 1 309 0 discriminator 1
 148 000a 082B     		cmp	r3, #8
 149 000c 0ED8     		bhi	.L12
 310:Src/main.c    ****     {
ARM GAS  /tmp/ccwbeIhm.s 			page 9


 311:Src/main.c    ****       if(dali_slave_array_receive_buffer[i] == 1)
 150              		.loc 1 311 0 is_stmt 1
 151 000e 104A     		ldr	r2, .L14
 152 0010 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 153 0012 D2B2     		uxtb	r2, r2
 154 0014 012A     		cmp	r2, #1
 155 0016 F6D1     		bne	.L7
 312:Src/main.c    **** 	{
 313:Src/main.c    **** 	  slave_addr_byte_received |= (1 << (8-i));
 156              		.loc 1 313 0
 157 0018 C3F10801 		rsb	r1, r3, #8
 158 001c 02FA01F1 		lsl	r1, r2, r1
 159 0020 0C48     		ldr	r0, .L14+4
 160 0022 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 161 0024 0A43     		orrs	r2, r2, r1
 162 0026 D2B2     		uxtb	r2, r2
 163 0028 0270     		strb	r2, [r0]
 164 002a ECE7     		b	.L7
 165              	.L12:
 314:Src/main.c    **** 	}
 315:Src/main.c    ****     }
 316:Src/main.c    **** 
 317:Src/main.c    ****   if(slave_addr_byte_received == 0xD4)
 166              		.loc 1 317 0
 167 002c 094B     		ldr	r3, .L14+4
 168              	.LVL9:
 169 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 0030 DBB2     		uxtb	r3, r3
 171 0032 D42B     		cmp	r3, #212
 172 0034 05D0     		beq	.L13
 318:Src/main.c    ****     {
 319:Src/main.c    ****       HAL_GPIO_WritePin(LED_Green_GPIO_Port, LED_Green_Pin, GPIO_PIN_SET);
 320:Src/main.c    ****     }
 321:Src/main.c    ****   else
 322:Src/main.c    ****     {
 323:Src/main.c    ****       HAL_GPIO_WritePin(LED_Red_GPIO_Port, LED_Red_Pin, GPIO_PIN_SET);
 173              		.loc 1 323 0
 174 0036 0122     		movs	r2, #1
 175 0038 2021     		movs	r1, #32
 176 003a 0748     		ldr	r0, .L14+8
 177 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 178              	.LVL10:
 179 0040 08BD     		pop	{r3, pc}
 180              	.L13:
 319:Src/main.c    ****     }
 181              		.loc 1 319 0
 182 0042 0122     		movs	r2, #1
 183 0044 0421     		movs	r1, #4
 184 0046 0448     		ldr	r0, .L14+8
 185 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 186              	.LVL11:
 187 004c 08BD     		pop	{r3, pc}
 188              	.L15:
 189 004e 00BF     		.align	2
 190              	.L14:
 191 0050 00000000 		.word	dali_slave_array_receive_buffer
 192 0054 00000000 		.word	slave_addr_byte_received
ARM GAS  /tmp/ccwbeIhm.s 			page 10


 193 0058 00140240 		.word	1073878016
 194              		.cfi_endproc
 195              	.LFE128:
 197              		.section	.text._Error_Handler,"ax",%progbits
 198              		.align	1
 199              		.global	_Error_Handler
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 203              		.fpu fpv4-sp-d16
 205              	_Error_Handler:
 206              	.LFB129:
 324:Src/main.c    ****     }
 325:Src/main.c    **** 	 
 326:Src/main.c    ****   
 327:Src/main.c    ****   
 328:Src/main.c    **** }
 329:Src/main.c    **** /* USER CODE END 4 */
 330:Src/main.c    **** 
 331:Src/main.c    **** /**
 332:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 333:Src/main.c    ****   * @param  None
 334:Src/main.c    ****   * @retval None
 335:Src/main.c    ****   */
 336:Src/main.c    **** void _Error_Handler(char * file, int line)
 337:Src/main.c    **** {
 207              		.loc 1 337 0
 208              		.cfi_startproc
 209              		@ Volatile: function does not return.
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              	.LVL12:
 213 0000 08B5     		push	{r3, lr}
 214              	.LCFI4:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 3, -8
 217              		.cfi_offset 14, -4
 338:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 339:Src/main.c    **** 
 340:Src/main.c    ****   /* Turn LED_Yellow ON */
 341:Src/main.c    ****   HAL_GPIO_WritePin(LED_Yellow_GPIO_Port, LED_Yellow_Pin, GPIO_PIN_SET);
 218              		.loc 1 341 0
 219 0002 0122     		movs	r2, #1
 220 0004 1021     		movs	r1, #16
 221              	.LVL13:
 222 0006 0248     		ldr	r0, .L19
 223              	.LVL14:
 224 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 225              	.LVL15:
 226              	.L17:
 227 000c FEE7     		b	.L17
 228              	.L20:
 229 000e 00BF     		.align	2
 230              	.L19:
 231 0010 00140240 		.word	1073878016
 232              		.cfi_endproc
 233              	.LFE129:
ARM GAS  /tmp/ccwbeIhm.s 			page 11


 235              		.section	.text.MX_TIM2_Init,"ax",%progbits
 236              		.align	1
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 240              		.fpu fpv4-sp-d16
 242              	MX_TIM2_Init:
 243              	.LFB125:
 196:Src/main.c    **** 
 244              		.loc 1 196 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 24
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0000 00B5     		push	{lr}
 249              	.LCFI5:
 250              		.cfi_def_cfa_offset 4
 251              		.cfi_offset 14, -4
 252 0002 87B0     		sub	sp, sp, #28
 253              	.LCFI6:
 254              		.cfi_def_cfa_offset 32
 201:Src/main.c    ****   htim2.Init.Prescaler = 83;
 255              		.loc 1 201 0
 256 0004 1648     		ldr	r0, .L29
 257 0006 4FF08043 		mov	r3, #1073741824
 258 000a 0360     		str	r3, [r0]
 202:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 259              		.loc 1 202 0
 260 000c 5323     		movs	r3, #83
 261 000e 4360     		str	r3, [r0, #4]
 203:Src/main.c    ****   htim2.Init.Period = 103;
 262              		.loc 1 203 0
 263 0010 0023     		movs	r3, #0
 264 0012 8360     		str	r3, [r0, #8]
 204:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 265              		.loc 1 204 0
 266 0014 6722     		movs	r2, #103
 267 0016 C260     		str	r2, [r0, #12]
 205:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 268              		.loc 1 205 0
 269 0018 0361     		str	r3, [r0, #16]
 206:Src/main.c    ****   {
 270              		.loc 1 206 0
 271 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 272              	.LVL16:
 273 001e 98B9     		cbnz	r0, .L26
 211:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 274              		.loc 1 211 0
 275 0020 06A9     		add	r1, sp, #24
 276 0022 4FF48053 		mov	r3, #4096
 277 0026 41F8103D 		str	r3, [r1, #-16]!
 212:Src/main.c    ****   {
 278              		.loc 1 212 0
 279 002a 0D48     		ldr	r0, .L29
 280 002c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 281              	.LVL17:
 282 0030 70B9     		cbnz	r0, .L27
 217:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
ARM GAS  /tmp/ccwbeIhm.s 			page 12


 283              		.loc 1 217 0
 284 0032 0023     		movs	r3, #0
 285 0034 0093     		str	r3, [sp]
 218:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 286              		.loc 1 218 0
 287 0036 0193     		str	r3, [sp, #4]
 219:Src/main.c    ****   {
 288              		.loc 1 219 0
 289 0038 6946     		mov	r1, sp
 290 003a 0948     		ldr	r0, .L29
 291 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 292              	.LVL18:
 293 0040 50B9     		cbnz	r0, .L28
 224:Src/main.c    **** 
 294              		.loc 1 224 0
 295 0042 07B0     		add	sp, sp, #28
 296              	.LCFI7:
 297              		.cfi_remember_state
 298              		.cfi_def_cfa_offset 4
 299              		@ sp needed
 300 0044 5DF804FB 		ldr	pc, [sp], #4
 301              	.L26:
 302              	.LCFI8:
 303              		.cfi_restore_state
 208:Src/main.c    ****   }
 304              		.loc 1 208 0
 305 0048 D021     		movs	r1, #208
 306 004a 0648     		ldr	r0, .L29+4
 307 004c FFF7FEFF 		bl	_Error_Handler
 308              	.LVL19:
 309              	.L27:
 214:Src/main.c    ****   }
 310              		.loc 1 214 0
 311 0050 D621     		movs	r1, #214
 312 0052 0448     		ldr	r0, .L29+4
 313 0054 FFF7FEFF 		bl	_Error_Handler
 314              	.LVL20:
 315              	.L28:
 221:Src/main.c    ****   }
 316              		.loc 1 221 0
 317 0058 DD21     		movs	r1, #221
 318 005a 0248     		ldr	r0, .L29+4
 319 005c FFF7FEFF 		bl	_Error_Handler
 320              	.LVL21:
 321              	.L30:
 322              		.align	2
 323              	.L29:
 324 0060 00000000 		.word	htim2
 325 0064 00000000 		.word	.LC0
 326              		.cfi_endproc
 327              	.LFE125:
 329              		.section	.text.SystemClock_Config,"ax",%progbits
 330              		.align	1
 331              		.global	SystemClock_Config
 332              		.syntax unified
 333              		.thumb
 334              		.thumb_func
ARM GAS  /tmp/ccwbeIhm.s 			page 13


 335              		.fpu fpv4-sp-d16
 337              	SystemClock_Config:
 338              	.LFB124:
 141:Src/main.c    **** 
 339              		.loc 1 141 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 80
 342              		@ frame_needed = 0, uses_anonymous_args = 0
 343 0000 00B5     		push	{lr}
 344              	.LCFI9:
 345              		.cfi_def_cfa_offset 4
 346              		.cfi_offset 14, -4
 347 0002 95B0     		sub	sp, sp, #84
 348              	.LCFI10:
 349              		.cfi_def_cfa_offset 88
 350              	.LBB3:
 148:Src/main.c    **** 
 351              		.loc 1 148 0
 352 0004 0023     		movs	r3, #0
 353 0006 0193     		str	r3, [sp, #4]
 354 0008 284A     		ldr	r2, .L37
 355 000a 116C     		ldr	r1, [r2, #64]
 356 000c 41F08051 		orr	r1, r1, #268435456
 357 0010 1164     		str	r1, [r2, #64]
 358 0012 126C     		ldr	r2, [r2, #64]
 359 0014 02F08052 		and	r2, r2, #268435456
 360 0018 0192     		str	r2, [sp, #4]
 361 001a 019A     		ldr	r2, [sp, #4]
 362              	.LBE3:
 363              	.LBB4:
 150:Src/main.c    **** 
 364              		.loc 1 150 0
 365 001c 0293     		str	r3, [sp, #8]
 366 001e 244A     		ldr	r2, .L37+4
 367 0020 1168     		ldr	r1, [r2]
 368 0022 41F48041 		orr	r1, r1, #16384
 369 0026 1160     		str	r1, [r2]
 370 0028 1268     		ldr	r2, [r2]
 371 002a 02F48042 		and	r2, r2, #16384
 372 002e 0292     		str	r2, [sp, #8]
 373 0030 029A     		ldr	r2, [sp, #8]
 374              	.LBE4:
 154:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 375              		.loc 1 154 0
 376 0032 0221     		movs	r1, #2
 377 0034 0891     		str	r1, [sp, #32]
 155:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 378              		.loc 1 155 0
 379 0036 0122     		movs	r2, #1
 380 0038 0B92     		str	r2, [sp, #44]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 381              		.loc 1 156 0
 382 003a 1022     		movs	r2, #16
 383 003c 0C92     		str	r2, [sp, #48]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 384              		.loc 1 157 0
 385 003e 0E91     		str	r1, [sp, #56]
ARM GAS  /tmp/ccwbeIhm.s 			page 14


 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 386              		.loc 1 158 0
 387 0040 0F93     		str	r3, [sp, #60]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 388              		.loc 1 159 0
 389 0042 1092     		str	r2, [sp, #64]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 390              		.loc 1 160 0
 391 0044 4FF4A873 		mov	r3, #336
 392 0048 1193     		str	r3, [sp, #68]
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 393              		.loc 1 161 0
 394 004a 0423     		movs	r3, #4
 395 004c 1293     		str	r3, [sp, #72]
 162:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 396              		.loc 1 162 0
 397 004e 1393     		str	r3, [sp, #76]
 163:Src/main.c    ****   {
 398              		.loc 1 163 0
 399 0050 08A8     		add	r0, sp, #32
 400 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 401              	.LVL22:
 402 0056 08BB     		cbnz	r0, .L35
 170:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 403              		.loc 1 170 0
 404 0058 0F23     		movs	r3, #15
 405 005a 0393     		str	r3, [sp, #12]
 172:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 406              		.loc 1 172 0
 407 005c 0221     		movs	r1, #2
 408 005e 0491     		str	r1, [sp, #16]
 173:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 409              		.loc 1 173 0
 410 0060 0023     		movs	r3, #0
 411 0062 0593     		str	r3, [sp, #20]
 174:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 412              		.loc 1 174 0
 413 0064 4FF48052 		mov	r2, #4096
 414 0068 0692     		str	r2, [sp, #24]
 175:Src/main.c    **** 
 415              		.loc 1 175 0
 416 006a 0793     		str	r3, [sp, #28]
 177:Src/main.c    ****   {
 417              		.loc 1 177 0
 418 006c 03A8     		add	r0, sp, #12
 419 006e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 420              	.LVL23:
 421 0072 B8B9     		cbnz	r0, .L36
 184:Src/main.c    **** 
 422              		.loc 1 184 0
 423 0074 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 424              	.LVL24:
 425 0078 0E4B     		ldr	r3, .L37+8
 426 007a A3FB0030 		umull	r3, r0, r3, r0
 427 007e 8009     		lsrs	r0, r0, #6
 428 0080 FFF7FEFF 		bl	HAL_SYSTICK_Config
 429              	.LVL25:
ARM GAS  /tmp/ccwbeIhm.s 			page 15


 188:Src/main.c    **** 
 430              		.loc 1 188 0
 431 0084 0420     		movs	r0, #4
 432 0086 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 433              	.LVL26:
 191:Src/main.c    **** }
 434              		.loc 1 191 0
 435 008a 0022     		movs	r2, #0
 436 008c 1146     		mov	r1, r2
 437 008e 4FF0FF30 		mov	r0, #-1
 438 0092 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 439              	.LVL27:
 192:Src/main.c    **** 
 440              		.loc 1 192 0
 441 0096 15B0     		add	sp, sp, #84
 442              	.LCFI11:
 443              		.cfi_remember_state
 444              		.cfi_def_cfa_offset 4
 445              		@ sp needed
 446 0098 5DF804FB 		ldr	pc, [sp], #4
 447              	.L35:
 448              	.LCFI12:
 449              		.cfi_restore_state
 165:Src/main.c    ****   }
 450              		.loc 1 165 0
 451 009c A521     		movs	r1, #165
 452 009e 0648     		ldr	r0, .L37+12
 453 00a0 FFF7FEFF 		bl	_Error_Handler
 454              	.LVL28:
 455              	.L36:
 179:Src/main.c    ****   }
 456              		.loc 1 179 0
 457 00a4 B321     		movs	r1, #179
 458 00a6 0448     		ldr	r0, .L37+12
 459 00a8 FFF7FEFF 		bl	_Error_Handler
 460              	.LVL29:
 461              	.L38:
 462              		.align	2
 463              	.L37:
 464 00ac 00380240 		.word	1073887232
 465 00b0 00700040 		.word	1073770496
 466 00b4 D34D6210 		.word	274877907
 467 00b8 00000000 		.word	.LC0
 468              		.cfi_endproc
 469              	.LFE124:
 471              		.section	.text.main,"ax",%progbits
 472              		.align	1
 473              		.global	main
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 477              		.fpu fpv4-sp-d16
 479              	main:
 480              	.LFB123:
  85:Src/main.c    **** 
 481              		.loc 1 85 0
 482              		.cfi_startproc
ARM GAS  /tmp/ccwbeIhm.s 			page 16


 483              		@ Volatile: function does not return.
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486 0000 08B5     		push	{r3, lr}
 487              	.LCFI13:
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 3, -8
 490              		.cfi_offset 14, -4
  94:Src/main.c    **** 
 491              		.loc 1 94 0
 492 0002 FFF7FEFF 		bl	HAL_Init
 493              	.LVL30:
 101:Src/main.c    **** 
 494              		.loc 1 101 0
 495 0006 FFF7FEFF 		bl	SystemClock_Config
 496              	.LVL31:
 108:Src/main.c    ****   MX_TIM2_Init();
 497              		.loc 1 108 0
 498 000a FFF7FEFF 		bl	MX_GPIO_Init
 499              	.LVL32:
 109:Src/main.c    **** 
 500              		.loc 1 109 0
 501 000e FFF7FEFF 		bl	MX_TIM2_Init
 502              	.LVL33:
 503              	.L40:
 114:Src/main.c    ****     {
 504              		.loc 1 114 0 discriminator 1
 505 0012 064B     		ldr	r3, .L44
 506 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 507 0016 002B     		cmp	r3, #0
 508 0018 FBD0     		beq	.L40
 119:Src/main.c    ****     {
 509              		.loc 1 119 0
 510 001a 0548     		ldr	r0, .L44+4
 511 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 512              	.LVL34:
 513 0020 00B9     		cbnz	r0, .L43
 514              	.L41:
 515 0022 FEE7     		b	.L41
 516              	.L43:
 121:Src/main.c    ****     }
 517              		.loc 1 121 0
 518 0024 7921     		movs	r1, #121
 519 0026 0348     		ldr	r0, .L44+8
 520 0028 FFF7FEFF 		bl	_Error_Handler
 521              	.LVL35:
 522              	.L45:
 523              		.align	2
 524              	.L44:
 525 002c 00000000 		.word	.LANCHOR0
 526 0030 00000000 		.word	htim2
 527 0034 00000000 		.word	.LC0
 528              		.cfi_endproc
 529              	.LFE123:
 531              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 532              		.align	1
 533              		.global	HAL_TIM_PeriodElapsedCallback
ARM GAS  /tmp/ccwbeIhm.s 			page 17


 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 537              		.fpu fpv4-sp-d16
 539              	HAL_TIM_PeriodElapsedCallback:
 540              	.LFB127:
 265:Src/main.c    **** 
 541              		.loc 1 265 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL36:
 546 0000 08B5     		push	{r3, lr}
 547              	.LCFI14:
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 3, -8
 550              		.cfi_offset 14, -4
 268:Src/main.c    ****     {
 551              		.loc 1 268 0
 552 0002 204B     		ldr	r3, .L57
 553 0004 1A68     		ldr	r2, [r3]
 554 0006 282A     		cmp	r2, #40
 555 0008 12DD     		ble	.L47
 270:Src/main.c    **** 	{
 556              		.loc 1 270 0
 557 000a 1F4B     		ldr	r3, .L57+4
 558 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 559 000e DB00     		lsls	r3, r3, #3
 560 0010 2A33     		adds	r3, r3, #42
 561 0012 9A42     		cmp	r2, r3
 562 0014 11D0     		beq	.L53
 563              	.LVL37:
 564              	.L48:
 282:Src/main.c    ****       	{
 565              		.loc 1 282 0
 566 0016 1B4B     		ldr	r3, .L57
 567 0018 1B68     		ldr	r3, [r3]
 568 001a 13F0070F 		tst	r3, #7
 569 001e 03D1     		bne	.L50
 284:Src/main.c    ****       	}
 570              		.loc 1 284 0
 571 0020 194A     		ldr	r2, .L57+4
 572 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 573 0024 0133     		adds	r3, r3, #1
 574 0026 1370     		strb	r3, [r2]
 575              	.L50:
 288:Src/main.c    ****       	{
 576              		.loc 1 288 0
 577 0028 174B     		ldr	r3, .L57+4
 578 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 579 002c 082B     		cmp	r3, #8
 580 002e 1CD8     		bhi	.L54
 581              	.L47:
 301:Src/main.c    **** 
 582              		.loc 1 301 0
 583 0030 144A     		ldr	r2, .L57
 584 0032 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccwbeIhm.s 			page 18


 585 0034 0133     		adds	r3, r3, #1
 586 0036 1360     		str	r3, [r2]
 587 0038 08BD     		pop	{r3, pc}
 588              	.LVL38:
 589              	.L53:
 272:Src/main.c    **** 	    {
 590              		.loc 1 272 0
 591 003a 4021     		movs	r1, #64
 592 003c 1348     		ldr	r0, .L57+8
 593              	.LVL39:
 594 003e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 595              	.LVL40:
 596 0042 0128     		cmp	r0, #1
 597 0044 0BD0     		beq	.L55
 276:Src/main.c    **** 	    {
 598              		.loc 1 276 0
 599 0046 4021     		movs	r1, #64
 600 0048 1048     		ldr	r0, .L57+8
 601 004a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 602              	.LVL41:
 603 004e 0028     		cmp	r0, #0
 604 0050 E1D1     		bne	.L48
 278:Src/main.c    **** 	    }
 605              		.loc 1 278 0
 606 0052 0D4B     		ldr	r3, .L57+4
 607 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 608 0056 0121     		movs	r1, #1
 609 0058 0D4A     		ldr	r2, .L57+12
 610 005a D154     		strb	r1, [r2, r3]
 611 005c DBE7     		b	.L48
 612              	.L55:
 274:Src/main.c    **** 	    }
 613              		.loc 1 274 0
 614 005e 0A4B     		ldr	r3, .L57+4
 615 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 616 0062 0021     		movs	r1, #0
 617 0064 0A4A     		ldr	r2, .L57+12
 618 0066 D154     		strb	r1, [r2, r3]
 619 0068 D5E7     		b	.L48
 620              	.L54:
 290:Src/main.c    ****       	    {
 621              		.loc 1 290 0
 622 006a 0A48     		ldr	r0, .L57+16
 623 006c FFF7FEFF 		bl	HAL_TIM_Base_Stop_IT
 624              	.LVL42:
 625 0070 10B9     		cbnz	r0, .L56
 294:Src/main.c    ****       	}
 626              		.loc 1 294 0
 627 0072 FFF7FEFF 		bl	Forward_Frame_Received
 628              	.LVL43:
 629 0076 DBE7     		b	.L47
 630              	.L56:
 292:Src/main.c    ****       	    }
 631              		.loc 1 292 0
 632 0078 4FF49271 		mov	r1, #292
 633 007c 0648     		ldr	r0, .L57+20
 634 007e FFF7FEFF 		bl	_Error_Handler
ARM GAS  /tmp/ccwbeIhm.s 			page 19


 635              	.LVL44:
 636              	.L58:
 637 0082 00BF     		.align	2
 638              	.L57:
 639 0084 00000000 		.word	.LANCHOR1
 640 0088 00000000 		.word	.LANCHOR2
 641 008c 00140240 		.word	1073878016
 642 0090 00000000 		.word	dali_slave_array_receive_buffer
 643 0094 00000000 		.word	htim2
 644 0098 00000000 		.word	.LC0
 645              		.cfi_endproc
 646              	.LFE127:
 648              		.section	.text.assert_failed,"ax",%progbits
 649              		.align	1
 650              		.global	assert_failed
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu fpv4-sp-d16
 656              	assert_failed:
 657              	.LFB130:
 342:Src/main.c    ****   
 343:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 344:Src/main.c    ****   while(1) 
 345:Src/main.c    ****   {
 346:Src/main.c    ****   }
 347:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 348:Src/main.c    **** }
 349:Src/main.c    **** 
 350:Src/main.c    **** #ifdef USE_FULL_ASSERT
 351:Src/main.c    **** 
 352:Src/main.c    **** /**
 353:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 354:Src/main.c    ****    * where the assert_param error has occurred.
 355:Src/main.c    ****    * @param file: pointer to the source file name
 356:Src/main.c    ****    * @param line: assert_param error line source number
 357:Src/main.c    ****    * @retval None
 358:Src/main.c    ****    */
 359:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 360:Src/main.c    **** {
 658              		.loc 1 360 0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		@ link register save eliminated.
 663              	.LVL45:
 664 0000 7047     		bx	lr
 665              		.cfi_endproc
 666              	.LFE130:
 668              		.comm	slave_cmd_byte_received,1,1
 669              		.comm	slave_addr_byte_received,1,1
 670              		.global	bit_count
 671              		.comm	dali_slave_array_receive_buffer,9,4
 672              		.global	tick_count
 673              		.global	start_timer
 674              		.comm	htim2,60,4
 675              		.section	.bss.bit_count,"aw",%nobits
ARM GAS  /tmp/ccwbeIhm.s 			page 20


 676              		.set	.LANCHOR2,. + 0
 679              	bit_count:
 680 0000 00       		.space	1
 681              		.section	.bss.start_timer,"aw",%nobits
 682              		.set	.LANCHOR0,. + 0
 685              	start_timer:
 686 0000 00       		.space	1
 687              		.section	.bss.tick_count,"aw",%nobits
 688              		.align	2
 689              		.set	.LANCHOR1,. + 0
 692              	tick_count:
 693 0000 00000000 		.space	4
 694              		.section	.rodata.MX_TIM2_Init.str1.4,"aMS",%progbits,1
 695              		.align	2
 696              	.LC0:
 697 0000 5372632F 		.ascii	"Src/main.c\000"
 697      6D61696E 
 697      2E6300
 698              		.text
 699              	.Letext0:
 700              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 701              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 702              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 703              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 704              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 705              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 706              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 707              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 708              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 709              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 710              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 711              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 712              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 713              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 714              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 715              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 716              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 717              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccwbeIhm.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccwbeIhm.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccwbeIhm.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccwbeIhm.s:110    .text.MX_GPIO_Init:0000000000000064 $d
     /tmp/ccwbeIhm.s:117    .text.Forward_Frame_Received:0000000000000000 $t
     /tmp/ccwbeIhm.s:124    .text.Forward_Frame_Received:0000000000000000 Forward_Frame_Received
     /tmp/ccwbeIhm.s:191    .text.Forward_Frame_Received:0000000000000050 $d
                            *COM*:0000000000000009 dali_slave_array_receive_buffer
                            *COM*:0000000000000001 slave_addr_byte_received
     /tmp/ccwbeIhm.s:198    .text._Error_Handler:0000000000000000 $t
     /tmp/ccwbeIhm.s:205    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccwbeIhm.s:231    .text._Error_Handler:0000000000000010 $d
     /tmp/ccwbeIhm.s:236    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccwbeIhm.s:242    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccwbeIhm.s:324    .text.MX_TIM2_Init:0000000000000060 $d
                            *COM*:000000000000003c htim2
     /tmp/ccwbeIhm.s:330    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccwbeIhm.s:337    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccwbeIhm.s:464    .text.SystemClock_Config:00000000000000ac $d
     /tmp/ccwbeIhm.s:472    .text.main:0000000000000000 $t
     /tmp/ccwbeIhm.s:479    .text.main:0000000000000000 main
     /tmp/ccwbeIhm.s:525    .text.main:000000000000002c $d
     /tmp/ccwbeIhm.s:532    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccwbeIhm.s:539    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccwbeIhm.s:639    .text.HAL_TIM_PeriodElapsedCallback:0000000000000084 $d
     /tmp/ccwbeIhm.s:649    .text.assert_failed:0000000000000000 $t
     /tmp/ccwbeIhm.s:656    .text.assert_failed:0000000000000000 assert_failed
                            *COM*:0000000000000001 slave_cmd_byte_received
     /tmp/ccwbeIhm.s:679    .bss.bit_count:0000000000000000 bit_count
     /tmp/ccwbeIhm.s:692    .bss.tick_count:0000000000000000 tick_count
     /tmp/ccwbeIhm.s:685    .bss.start_timer:0000000000000000 start_timer
     /tmp/ccwbeIhm.s:680    .bss.bit_count:0000000000000000 $d
     /tmp/ccwbeIhm.s:686    .bss.start_timer:0000000000000000 $d
     /tmp/ccwbeIhm.s:688    .bss.tick_count:0000000000000000 $d
     /tmp/ccwbeIhm.s:695    .rodata.MX_TIM2_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
HAL_TIM_Base_Start_IT
HAL_GPIO_ReadPin
HAL_TIM_Base_Stop_IT
