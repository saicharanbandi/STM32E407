ARM GAS  /tmp/ccCup0Mf.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB126:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccCup0Mf.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** TIM_HandleTypeDef htim2;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** unsigned char hardware_trigger = 0;
  53:Src/main.c    **** /* USER CODE END PV */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  56:Src/main.c    **** void SystemClock_Config(void);
  57:Src/main.c    **** static void MX_GPIO_Init(void);
  58:Src/main.c    **** static void MX_TIM2_Init(void);
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE BEGIN PFP */
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PFP */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE BEGIN 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* USER CODE END 1 */
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Src/main.c    ****   HAL_Init();
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE BEGIN Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE END Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* Configure the system clock */
  86:Src/main.c    ****   SystemClock_Config();
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  89:Src/main.c    **** 
ARM GAS  /tmp/ccCup0Mf.s 			page 3


  90:Src/main.c    ****   /* USER CODE END SysInit */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Initialize all configured peripherals */
  93:Src/main.c    ****   MX_GPIO_Init();
  94:Src/main.c    ****   MX_TIM2_Init();
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    ****   /* Wait for Hardware_Trigger */
  98:Src/main.c    ****   while(hardware_trigger == 0)
  99:Src/main.c    ****     {
 100:Src/main.c    ****     }
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Start timer2 in time base interrupt mode */
 103:Src/main.c    ****   if(HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 104:Src/main.c    ****     {
 105:Src/main.c    ****       _Error_Handler(__FILE__, __LINE__);
 106:Src/main.c    ****     }
 107:Src/main.c    ****   /* USER CODE END 2 */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Infinite loop */
 110:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 111:Src/main.c    ****   while (1)
 112:Src/main.c    ****   {
 113:Src/main.c    ****   /* USER CODE END WHILE */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE BEGIN 3 */
 116:Src/main.c    **** 
 117:Src/main.c    ****   }
 118:Src/main.c    ****   /* USER CODE END 3 */
 119:Src/main.c    **** 
 120:Src/main.c    **** }
 121:Src/main.c    **** 
 122:Src/main.c    **** /** System Clock Configuration
 123:Src/main.c    **** */
 124:Src/main.c    **** void SystemClock_Config(void)
 125:Src/main.c    **** {
 126:Src/main.c    **** 
 127:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 128:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 129:Src/main.c    **** 
 130:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 131:Src/main.c    ****     */
 132:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 133:Src/main.c    **** 
 134:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 135:Src/main.c    **** 
 136:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 137:Src/main.c    ****     */
 138:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
ARM GAS  /tmp/ccCup0Mf.s 			page 4


 147:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 148:Src/main.c    ****   {
 149:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 150:Src/main.c    ****   }
 151:Src/main.c    **** 
 152:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 153:Src/main.c    ****     */
 154:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 159:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Src/main.c    **** 
 161:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 162:Src/main.c    ****   {
 163:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 164:Src/main.c    ****   }
 165:Src/main.c    **** 
 166:Src/main.c    ****     /**Configure the Systick interrupt time 
 167:Src/main.c    ****     */
 168:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 169:Src/main.c    **** 
 170:Src/main.c    ****     /**Configure the Systick 
 171:Src/main.c    ****     */
 172:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 173:Src/main.c    **** 
 174:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 175:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 176:Src/main.c    **** }
 177:Src/main.c    **** 
 178:Src/main.c    **** /* TIM2 init function */
 179:Src/main.c    **** static void MX_TIM2_Init(void)
 180:Src/main.c    **** {
 181:Src/main.c    **** 
 182:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 183:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 184:Src/main.c    **** 
 185:Src/main.c    ****   htim2.Instance = TIM2;
 186:Src/main.c    ****   htim2.Init.Prescaler = 8400;
 187:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 188:Src/main.c    ****   htim2.Init.Period = 10400;
 189:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 190:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 191:Src/main.c    ****   {
 192:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 193:Src/main.c    ****   }
 194:Src/main.c    **** 
 195:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 196:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 197:Src/main.c    ****   {
 198:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 199:Src/main.c    ****   }
 200:Src/main.c    **** 
 201:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 202:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 203:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
ARM GAS  /tmp/ccCup0Mf.s 			page 5


 204:Src/main.c    ****   {
 205:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 206:Src/main.c    ****   }
 207:Src/main.c    **** 
 208:Src/main.c    **** }
 209:Src/main.c    **** 
 210:Src/main.c    **** /** Configure pins as 
 211:Src/main.c    ****         * Analog 
 212:Src/main.c    ****         * Input 
 213:Src/main.c    ****         * Output
 214:Src/main.c    ****         * EVENT_OUT
 215:Src/main.c    ****         * EXTI
 216:Src/main.c    **** */
 217:Src/main.c    **** static void MX_GPIO_Init(void)
 218:Src/main.c    **** {
  27              		.loc 1 218 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 87B0     		sub	sp, sp, #28
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
  42              	.LBB2:
 219:Src/main.c    **** 
 220:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* GPIO Ports Clock Enable */
 223:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  43              		.loc 1 223 0
  44 0004 0024     		movs	r4, #0
  45 0006 0094     		str	r4, [sp]
  46 0008 1F4B     		ldr	r3, .L3
  47 000a 1A6B     		ldr	r2, [r3, #48]
  48 000c 42F02002 		orr	r2, r2, #32
  49 0010 1A63     		str	r2, [r3, #48]
  50 0012 1B6B     		ldr	r3, [r3, #48]
  51 0014 03F02003 		and	r3, r3, #32
  52 0018 0093     		str	r3, [sp]
  53 001a 009B     		ldr	r3, [sp]
  54              	.LBE2:
 224:Src/main.c    **** 
 225:Src/main.c    ****   /*Configure GPIO pin Output Level */
 226:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, LED_Green_Pin|LED_Blue_Pin|LED_Yellow_Pin|LED_Red_Pin, GPIO_PIN_RESET);
  55              		.loc 1 226 0
  56 001c 1B4D     		ldr	r5, .L3+4
  57 001e 2246     		mov	r2, r4
  58 0020 3C21     		movs	r1, #60
  59 0022 2846     		mov	r0, r5
  60 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccCup0Mf.s 			page 6


  61              	.LVL0:
 227:Src/main.c    **** 
 228:Src/main.c    ****   /*Configure GPIO pins : LED_Green_Pin LED_Blue_Pin LED_Yellow_Pin LED_Red_Pin */
 229:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Green_Pin|LED_Blue_Pin|LED_Yellow_Pin|LED_Red_Pin;
  62              		.loc 1 229 0
  63 0028 3C23     		movs	r3, #60
  64 002a 0193     		str	r3, [sp, #4]
 230:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  65              		.loc 1 230 0
  66 002c 0126     		movs	r6, #1
  67 002e 0296     		str	r6, [sp, #8]
 231:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  68              		.loc 1 231 0
  69 0030 0227     		movs	r7, #2
  70 0032 0397     		str	r7, [sp, #12]
 232:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  71              		.loc 1 232 0
  72 0034 0494     		str	r4, [sp, #16]
 233:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
  73              		.loc 1 233 0
  74 0036 01A9     		add	r1, sp, #4
  75 0038 2846     		mov	r0, r5
  76 003a FFF7FEFF 		bl	HAL_GPIO_Init
  77              	.LVL1:
 234:Src/main.c    **** 
 235:Src/main.c    ****   /*Configure GPIO pin : Manch_Rx_Pin */
 236:Src/main.c    ****   GPIO_InitStruct.Pin = Manch_Rx_Pin;
  78              		.loc 1 236 0
  79 003e 4023     		movs	r3, #64
  80 0040 0193     		str	r3, [sp, #4]
 237:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
  81              		.loc 1 237 0
  82 0042 134B     		ldr	r3, .L3+8
  83 0044 0293     		str	r3, [sp, #8]
 238:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  84              		.loc 1 238 0
  85 0046 0397     		str	r7, [sp, #12]
 239:Src/main.c    ****   HAL_GPIO_Init(Manch_Rx_GPIO_Port, &GPIO_InitStruct);
  86              		.loc 1 239 0
  87 0048 01A9     		add	r1, sp, #4
  88 004a 2846     		mov	r0, r5
  89 004c FFF7FEFF 		bl	HAL_GPIO_Init
  90              	.LVL2:
 240:Src/main.c    **** 
 241:Src/main.c    ****   /*Configure GPIO pin : Hardware_Trigger_Pin */
 242:Src/main.c    ****   GPIO_InitStruct.Pin = Hardware_Trigger_Pin;
  91              		.loc 1 242 0
  92 0050 4FF48053 		mov	r3, #4096
  93 0054 0193     		str	r3, [sp, #4]
 243:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  94              		.loc 1 243 0
  95 0056 0F4B     		ldr	r3, .L3+12
  96 0058 0293     		str	r3, [sp, #8]
 244:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  97              		.loc 1 244 0
  98 005a 0397     		str	r7, [sp, #12]
 245:Src/main.c    ****   HAL_GPIO_Init(Hardware_Trigger_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/ccCup0Mf.s 			page 7


  99              		.loc 1 245 0
 100 005c 01A9     		add	r1, sp, #4
 101 005e 2846     		mov	r0, r5
 102 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 103              	.LVL3:
 246:Src/main.c    **** 
 247:Src/main.c    ****   /* EXTI interrupt init*/
 248:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 1, 0);
 104              		.loc 1 248 0
 105 0064 2246     		mov	r2, r4
 106 0066 3146     		mov	r1, r6
 107 0068 1720     		movs	r0, #23
 108 006a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 109              	.LVL4:
 249:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 110              		.loc 1 249 0
 111 006e 1720     		movs	r0, #23
 112 0070 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 113              	.LVL5:
 250:Src/main.c    **** 
 251:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 1, 0);
 114              		.loc 1 251 0
 115 0074 2246     		mov	r2, r4
 116 0076 3146     		mov	r1, r6
 117 0078 2820     		movs	r0, #40
 118 007a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 119              	.LVL6:
 252:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 120              		.loc 1 252 0
 121 007e 2820     		movs	r0, #40
 122 0080 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 123              	.LVL7:
 253:Src/main.c    **** 
 254:Src/main.c    **** }
 124              		.loc 1 254 0
 125 0084 07B0     		add	sp, sp, #28
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 20
 128              		@ sp needed
 129 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 130              	.L4:
 131              		.align	2
 132              	.L3:
 133 0088 00380240 		.word	1073887232
 134 008c 00140240 		.word	1073878016
 135 0090 00003110 		.word	271646720
 136 0094 00001110 		.word	269549568
 137              		.cfi_endproc
 138              	.LFE126:
 140              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 141              		.align	1
 142              		.global	HAL_TIM_PeriodElapsedCallback
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	HAL_TIM_PeriodElapsedCallback:
ARM GAS  /tmp/ccCup0Mf.s 			page 8


 149              	.LFB127:
 255:Src/main.c    **** 
 256:Src/main.c    **** /* USER CODE BEGIN 4 */
 257:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 258:Src/main.c    **** {
 150              		.loc 1 258 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL8:
 155 0000 08B5     		push	{r3, lr}
 156              	.LCFI3:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 3, -8
 159              		.cfi_offset 14, -4
 259:Src/main.c    ****   HAL_GPIO_TogglePin(LED_Green_GPIO_Port, LED_Green_Pin);
 160              		.loc 1 259 0
 161 0002 0421     		movs	r1, #4
 162 0004 0148     		ldr	r0, .L7
 163              	.LVL9:
 164 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 165              	.LVL10:
 166 000a 08BD     		pop	{r3, pc}
 167              	.L8:
 168              		.align	2
 169              	.L7:
 170 000c 00140240 		.word	1073878016
 171              		.cfi_endproc
 172              	.LFE127:
 174              		.section	.text._Error_Handler,"ax",%progbits
 175              		.align	1
 176              		.global	_Error_Handler
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	_Error_Handler:
 183              	.LFB128:
 260:Src/main.c    **** }
 261:Src/main.c    **** /* USER CODE END 4 */
 262:Src/main.c    **** 
 263:Src/main.c    **** /**
 264:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 265:Src/main.c    ****   * @param  None
 266:Src/main.c    ****   * @retval None
 267:Src/main.c    ****   */
 268:Src/main.c    **** void _Error_Handler(char * file, int line)
 269:Src/main.c    **** {
 184              		.loc 1 269 0
 185              		.cfi_startproc
 186              		@ Volatile: function does not return.
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL11:
 191              	.L10:
 192 0000 FEE7     		b	.L10
ARM GAS  /tmp/ccCup0Mf.s 			page 9


 193              		.cfi_endproc
 194              	.LFE128:
 196              		.section	.text.MX_TIM2_Init,"ax",%progbits
 197              		.align	1
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	MX_TIM2_Init:
 204              	.LFB125:
 180:Src/main.c    **** 
 205              		.loc 1 180 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 24
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 180:Src/main.c    **** 
 209              		.loc 1 180 0
 210 0000 00B5     		push	{lr}
 211              	.LCFI4:
 212              		.cfi_def_cfa_offset 4
 213              		.cfi_offset 14, -4
 214 0002 87B0     		sub	sp, sp, #28
 215              	.LCFI5:
 216              		.cfi_def_cfa_offset 32
 185:Src/main.c    ****   htim2.Init.Prescaler = 8400;
 217              		.loc 1 185 0
 218 0004 1748     		ldr	r0, .L19
 219 0006 4FF08043 		mov	r3, #1073741824
 220 000a 0360     		str	r3, [r0]
 186:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 221              		.loc 1 186 0
 222 000c 42F2D003 		movw	r3, #8400
 223 0010 4360     		str	r3, [r0, #4]
 187:Src/main.c    ****   htim2.Init.Period = 10400;
 224              		.loc 1 187 0
 225 0012 0023     		movs	r3, #0
 226 0014 8360     		str	r3, [r0, #8]
 188:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 227              		.loc 1 188 0
 228 0016 42F6A002 		movw	r2, #10400
 229 001a C260     		str	r2, [r0, #12]
 189:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 230              		.loc 1 189 0
 231 001c 0361     		str	r3, [r0, #16]
 190:Src/main.c    ****   {
 232              		.loc 1 190 0
 233 001e FFF7FEFF 		bl	HAL_TIM_Base_Init
 234              	.LVL12:
 235 0022 98B9     		cbnz	r0, .L16
 195:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 236              		.loc 1 195 0
 237 0024 06A9     		add	r1, sp, #24
 238 0026 4FF48053 		mov	r3, #4096
 239 002a 41F8103D 		str	r3, [r1, #-16]!
 196:Src/main.c    ****   {
 240              		.loc 1 196 0
 241 002e 0D48     		ldr	r0, .L19
ARM GAS  /tmp/ccCup0Mf.s 			page 10


 242 0030 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 243              	.LVL13:
 244 0034 70B9     		cbnz	r0, .L17
 201:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 245              		.loc 1 201 0
 246 0036 0023     		movs	r3, #0
 247 0038 0093     		str	r3, [sp]
 202:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 248              		.loc 1 202 0
 249 003a 0193     		str	r3, [sp, #4]
 203:Src/main.c    ****   {
 250              		.loc 1 203 0
 251 003c 6946     		mov	r1, sp
 252 003e 0948     		ldr	r0, .L19
 253 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 254              	.LVL14:
 255 0044 50B9     		cbnz	r0, .L18
 208:Src/main.c    **** 
 256              		.loc 1 208 0
 257 0046 07B0     		add	sp, sp, #28
 258              	.LCFI6:
 259              		.cfi_remember_state
 260              		.cfi_def_cfa_offset 4
 261              		@ sp needed
 262 0048 5DF804FB 		ldr	pc, [sp], #4
 263              	.L16:
 264              	.LCFI7:
 265              		.cfi_restore_state
 192:Src/main.c    ****   }
 266              		.loc 1 192 0
 267 004c C021     		movs	r1, #192
 268 004e 0648     		ldr	r0, .L19+4
 269 0050 FFF7FEFF 		bl	_Error_Handler
 270              	.LVL15:
 271              	.L17:
 198:Src/main.c    ****   }
 272              		.loc 1 198 0
 273 0054 C621     		movs	r1, #198
 274 0056 0448     		ldr	r0, .L19+4
 275 0058 FFF7FEFF 		bl	_Error_Handler
 276              	.LVL16:
 277              	.L18:
 205:Src/main.c    ****   }
 278              		.loc 1 205 0
 279 005c CD21     		movs	r1, #205
 280 005e 0248     		ldr	r0, .L19+4
 281 0060 FFF7FEFF 		bl	_Error_Handler
 282              	.LVL17:
 283              	.L20:
 284              		.align	2
 285              	.L19:
 286 0064 00000000 		.word	htim2
 287 0068 00000000 		.word	.LC0
 288              		.cfi_endproc
 289              	.LFE125:
 291              		.section	.text.SystemClock_Config,"ax",%progbits
 292              		.align	1
ARM GAS  /tmp/ccCup0Mf.s 			page 11


 293              		.global	SystemClock_Config
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 297              		.fpu fpv4-sp-d16
 299              	SystemClock_Config:
 300              	.LFB124:
 125:Src/main.c    **** 
 301              		.loc 1 125 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 80
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 0000 00B5     		push	{lr}
 306              	.LCFI8:
 307              		.cfi_def_cfa_offset 4
 308              		.cfi_offset 14, -4
 309 0002 95B0     		sub	sp, sp, #84
 310              	.LCFI9:
 311              		.cfi_def_cfa_offset 88
 312              	.LBB3:
 132:Src/main.c    **** 
 313              		.loc 1 132 0
 314 0004 0023     		movs	r3, #0
 315 0006 0193     		str	r3, [sp, #4]
 316 0008 284A     		ldr	r2, .L27
 317 000a 116C     		ldr	r1, [r2, #64]
 318 000c 41F08051 		orr	r1, r1, #268435456
 319 0010 1164     		str	r1, [r2, #64]
 320 0012 126C     		ldr	r2, [r2, #64]
 321 0014 02F08052 		and	r2, r2, #268435456
 322 0018 0192     		str	r2, [sp, #4]
 323 001a 019A     		ldr	r2, [sp, #4]
 324              	.LBE3:
 325              	.LBB4:
 134:Src/main.c    **** 
 326              		.loc 1 134 0
 327 001c 0293     		str	r3, [sp, #8]
 328 001e 244A     		ldr	r2, .L27+4
 329 0020 1168     		ldr	r1, [r2]
 330 0022 41F48041 		orr	r1, r1, #16384
 331 0026 1160     		str	r1, [r2]
 332 0028 1268     		ldr	r2, [r2]
 333 002a 02F48042 		and	r2, r2, #16384
 334 002e 0292     		str	r2, [sp, #8]
 335 0030 029A     		ldr	r2, [sp, #8]
 336              	.LBE4:
 138:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 337              		.loc 1 138 0
 338 0032 0221     		movs	r1, #2
 339 0034 0891     		str	r1, [sp, #32]
 139:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 340              		.loc 1 139 0
 341 0036 0122     		movs	r2, #1
 342 0038 0B92     		str	r2, [sp, #44]
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 343              		.loc 1 140 0
 344 003a 1022     		movs	r2, #16
ARM GAS  /tmp/ccCup0Mf.s 			page 12


 345 003c 0C92     		str	r2, [sp, #48]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 346              		.loc 1 141 0
 347 003e 0E91     		str	r1, [sp, #56]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 348              		.loc 1 142 0
 349 0040 0F93     		str	r3, [sp, #60]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 350              		.loc 1 143 0
 351 0042 1092     		str	r2, [sp, #64]
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 352              		.loc 1 144 0
 353 0044 4FF4A873 		mov	r3, #336
 354 0048 1193     		str	r3, [sp, #68]
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 355              		.loc 1 145 0
 356 004a 0423     		movs	r3, #4
 357 004c 1293     		str	r3, [sp, #72]
 146:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 358              		.loc 1 146 0
 359 004e 1393     		str	r3, [sp, #76]
 147:Src/main.c    ****   {
 360              		.loc 1 147 0
 361 0050 08A8     		add	r0, sp, #32
 362 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 363              	.LVL18:
 364 0056 08BB     		cbnz	r0, .L25
 154:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 365              		.loc 1 154 0
 366 0058 0F23     		movs	r3, #15
 367 005a 0393     		str	r3, [sp, #12]
 156:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 368              		.loc 1 156 0
 369 005c 0221     		movs	r1, #2
 370 005e 0491     		str	r1, [sp, #16]
 157:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 371              		.loc 1 157 0
 372 0060 0023     		movs	r3, #0
 373 0062 0593     		str	r3, [sp, #20]
 158:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 374              		.loc 1 158 0
 375 0064 4FF48052 		mov	r2, #4096
 376 0068 0692     		str	r2, [sp, #24]
 159:Src/main.c    **** 
 377              		.loc 1 159 0
 378 006a 0793     		str	r3, [sp, #28]
 161:Src/main.c    ****   {
 379              		.loc 1 161 0
 380 006c 03A8     		add	r0, sp, #12
 381 006e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 382              	.LVL19:
 383 0072 B8B9     		cbnz	r0, .L26
 168:Src/main.c    **** 
 384              		.loc 1 168 0
 385 0074 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 386              	.LVL20:
 387 0078 0E4B     		ldr	r3, .L27+8
ARM GAS  /tmp/ccCup0Mf.s 			page 13


 388 007a A3FB0030 		umull	r3, r0, r3, r0
 389 007e 8009     		lsrs	r0, r0, #6
 390 0080 FFF7FEFF 		bl	HAL_SYSTICK_Config
 391              	.LVL21:
 172:Src/main.c    **** 
 392              		.loc 1 172 0
 393 0084 0420     		movs	r0, #4
 394 0086 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 395              	.LVL22:
 175:Src/main.c    **** }
 396              		.loc 1 175 0
 397 008a 0022     		movs	r2, #0
 398 008c 1146     		mov	r1, r2
 399 008e 4FF0FF30 		mov	r0, #-1
 400 0092 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 401              	.LVL23:
 176:Src/main.c    **** 
 402              		.loc 1 176 0
 403 0096 15B0     		add	sp, sp, #84
 404              	.LCFI10:
 405              		.cfi_remember_state
 406              		.cfi_def_cfa_offset 4
 407              		@ sp needed
 408 0098 5DF804FB 		ldr	pc, [sp], #4
 409              	.L25:
 410              	.LCFI11:
 411              		.cfi_restore_state
 149:Src/main.c    ****   }
 412              		.loc 1 149 0
 413 009c 9521     		movs	r1, #149
 414 009e 0648     		ldr	r0, .L27+12
 415 00a0 FFF7FEFF 		bl	_Error_Handler
 416              	.LVL24:
 417              	.L26:
 163:Src/main.c    ****   }
 418              		.loc 1 163 0
 419 00a4 A321     		movs	r1, #163
 420 00a6 0448     		ldr	r0, .L27+12
 421 00a8 FFF7FEFF 		bl	_Error_Handler
 422              	.LVL25:
 423              	.L28:
 424              		.align	2
 425              	.L27:
 426 00ac 00380240 		.word	1073887232
 427 00b0 00700040 		.word	1073770496
 428 00b4 D34D6210 		.word	274877907
 429 00b8 00000000 		.word	.LC0
 430              		.cfi_endproc
 431              	.LFE124:
 433              		.section	.text.main,"ax",%progbits
 434              		.align	1
 435              		.global	main
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	main:
ARM GAS  /tmp/ccCup0Mf.s 			page 14


 442              	.LFB123:
  70:Src/main.c    **** 
 443              		.loc 1 70 0
 444              		.cfi_startproc
 445              		@ Volatile: function does not return.
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 08B5     		push	{r3, lr}
 449              	.LCFI12:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 3, -8
 452              		.cfi_offset 14, -4
  79:Src/main.c    **** 
 453              		.loc 1 79 0
 454 0002 FFF7FEFF 		bl	HAL_Init
 455              	.LVL26:
  86:Src/main.c    **** 
 456              		.loc 1 86 0
 457 0006 FFF7FEFF 		bl	SystemClock_Config
 458              	.LVL27:
  93:Src/main.c    ****   MX_TIM2_Init();
 459              		.loc 1 93 0
 460 000a FFF7FEFF 		bl	MX_GPIO_Init
 461              	.LVL28:
  94:Src/main.c    **** 
 462              		.loc 1 94 0
 463 000e FFF7FEFF 		bl	MX_TIM2_Init
 464              	.LVL29:
 465              	.L30:
  98:Src/main.c    ****     {
 466              		.loc 1 98 0 discriminator 1
 467 0012 064B     		ldr	r3, .L34
 468 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 469 0016 002B     		cmp	r3, #0
 470 0018 FBD0     		beq	.L30
 103:Src/main.c    ****     {
 471              		.loc 1 103 0
 472 001a 0548     		ldr	r0, .L34+4
 473 001c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 474              	.LVL30:
 475 0020 00B9     		cbnz	r0, .L33
 476              	.L31:
 477 0022 FEE7     		b	.L31
 478              	.L33:
 105:Src/main.c    ****     }
 479              		.loc 1 105 0
 480 0024 6921     		movs	r1, #105
 481 0026 0348     		ldr	r0, .L34+8
 482 0028 FFF7FEFF 		bl	_Error_Handler
 483              	.LVL31:
 484              	.L35:
 485              		.align	2
 486              	.L34:
 487 002c 00000000 		.word	.LANCHOR0
 488 0030 00000000 		.word	htim2
 489 0034 00000000 		.word	.LC0
 490              		.cfi_endproc
ARM GAS  /tmp/ccCup0Mf.s 			page 15


 491              	.LFE123:
 493              		.section	.text.assert_failed,"ax",%progbits
 494              		.align	1
 495              		.global	assert_failed
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	assert_failed:
 502              	.LFB129:
 270:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 271:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 272:Src/main.c    ****   while(1) 
 273:Src/main.c    ****   {
 274:Src/main.c    ****   }
 275:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 276:Src/main.c    **** }
 277:Src/main.c    **** 
 278:Src/main.c    **** #ifdef USE_FULL_ASSERT
 279:Src/main.c    **** 
 280:Src/main.c    **** /**
 281:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 282:Src/main.c    ****    * where the assert_param error has occurred.
 283:Src/main.c    ****    * @param file: pointer to the source file name
 284:Src/main.c    ****    * @param line: assert_param error line source number
 285:Src/main.c    ****    * @retval None
 286:Src/main.c    ****    */
 287:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 288:Src/main.c    **** {
 503              		.loc 1 288 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508              	.LVL32:
 509 0000 7047     		bx	lr
 510              		.cfi_endproc
 511              	.LFE129:
 513              		.global	hardware_trigger
 514              		.comm	htim2,60,4
 515              		.section	.bss.hardware_trigger,"aw",%nobits
 516              		.set	.LANCHOR0,. + 0
 519              	hardware_trigger:
 520 0000 00       		.space	1
 521              		.section	.rodata.MX_TIM2_Init.str1.4,"aMS",%progbits,1
 522              		.align	2
 523              	.LC0:
 524 0000 5372632F 		.ascii	"Src/main.c\000"
 524      6D61696E 
 524      2E6300
 525              		.text
 526              	.Letext0:
 527              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 528              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 529              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 530              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 531              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
ARM GAS  /tmp/ccCup0Mf.s 			page 16


 532              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 533              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 534              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 535              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 536              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 537              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 538              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 539              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 540              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 541              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 542              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 543              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 544              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccCup0Mf.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccCup0Mf.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccCup0Mf.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccCup0Mf.s:133    .text.MX_GPIO_Init:0000000000000088 $d
     /tmp/ccCup0Mf.s:141    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccCup0Mf.s:148    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccCup0Mf.s:170    .text.HAL_TIM_PeriodElapsedCallback:000000000000000c $d
     /tmp/ccCup0Mf.s:175    .text._Error_Handler:0000000000000000 $t
     /tmp/ccCup0Mf.s:182    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccCup0Mf.s:197    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccCup0Mf.s:203    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccCup0Mf.s:286    .text.MX_TIM2_Init:0000000000000064 $d
                            *COM*:000000000000003c htim2
     /tmp/ccCup0Mf.s:292    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccCup0Mf.s:299    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccCup0Mf.s:426    .text.SystemClock_Config:00000000000000ac $d
     /tmp/ccCup0Mf.s:434    .text.main:0000000000000000 $t
     /tmp/ccCup0Mf.s:441    .text.main:0000000000000000 main
     /tmp/ccCup0Mf.s:487    .text.main:000000000000002c $d
     /tmp/ccCup0Mf.s:494    .text.assert_failed:0000000000000000 $t
     /tmp/ccCup0Mf.s:501    .text.assert_failed:0000000000000000 assert_failed
     /tmp/ccCup0Mf.s:519    .bss.hardware_trigger:0000000000000000 hardware_trigger
     /tmp/ccCup0Mf.s:520    .bss.hardware_trigger:0000000000000000 $d
     /tmp/ccCup0Mf.s:522    .rodata.MX_TIM2_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_TogglePin
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
HAL_TIM_Base_Start_IT
