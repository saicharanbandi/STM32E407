ARM GAS  /tmp/cc6Zumgp.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB123:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/cc6Zumgp.s 			page 2


  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** /* Hardware_Trigger interrupt variable */
  40:Src/stm32f4xx_it.c **** extern unsigned char hardware_trigger;
  41:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  42:Src/stm32f4xx_it.c **** 
  43:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  44:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim2;
  45:Src/stm32f4xx_it.c **** 
  46:Src/stm32f4xx_it.c **** /******************************************************************************/
  47:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  48:Src/stm32f4xx_it.c **** /******************************************************************************/
  49:Src/stm32f4xx_it.c **** 
  50:Src/stm32f4xx_it.c **** /**
  51:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  52:Src/stm32f4xx_it.c **** */
  53:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  54:Src/stm32f4xx_it.c **** {
  28              		.loc 1 54 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE123:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB124:
  55:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  56:Src/stm32f4xx_it.c **** 
  57:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  58:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  59:Src/stm32f4xx_it.c **** 
  60:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  61:Src/stm32f4xx_it.c **** }
  62:Src/stm32f4xx_it.c **** 
  63:Src/stm32f4xx_it.c **** /**
  64:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  65:Src/stm32f4xx_it.c **** */
  66:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  67:Src/stm32f4xx_it.c **** {
  47              		.loc 1 67 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc6Zumgp.s 			page 3


  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE124:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB125:
  68:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  69:Src/stm32f4xx_it.c **** 
  70:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  71:Src/stm32f4xx_it.c ****   while (1)
  72:Src/stm32f4xx_it.c ****   {
  73:Src/stm32f4xx_it.c ****   }
  74:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  75:Src/stm32f4xx_it.c **** 
  76:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  77:Src/stm32f4xx_it.c **** }
  78:Src/stm32f4xx_it.c **** 
  79:Src/stm32f4xx_it.c **** /**
  80:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  81:Src/stm32f4xx_it.c **** */
  82:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  83:Src/stm32f4xx_it.c **** {
  68              		.loc 1 83 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE125:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB126:
  84:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  85:Src/stm32f4xx_it.c **** 
  86:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  87:Src/stm32f4xx_it.c ****   while (1)
  88:Src/stm32f4xx_it.c ****   {
  89:Src/stm32f4xx_it.c ****   }
  90:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
ARM GAS  /tmp/cc6Zumgp.s 			page 4


  91:Src/stm32f4xx_it.c **** 
  92:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  93:Src/stm32f4xx_it.c **** }
  94:Src/stm32f4xx_it.c **** 
  95:Src/stm32f4xx_it.c **** /**
  96:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
  97:Src/stm32f4xx_it.c **** */
  98:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
  99:Src/stm32f4xx_it.c **** {
  89              		.loc 1 99 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE126:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB127:
 100:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 101:Src/stm32f4xx_it.c **** 
 102:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 103:Src/stm32f4xx_it.c ****   while (1)
 104:Src/stm32f4xx_it.c ****   {
 105:Src/stm32f4xx_it.c ****   }
 106:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 107:Src/stm32f4xx_it.c **** 
 108:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 109:Src/stm32f4xx_it.c **** }
 110:Src/stm32f4xx_it.c **** 
 111:Src/stm32f4xx_it.c **** /**
 112:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 113:Src/stm32f4xx_it.c **** */
 114:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 115:Src/stm32f4xx_it.c **** {
 110              		.loc 1 115 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE127:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
ARM GAS  /tmp/cc6Zumgp.s 			page 5


 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB128:
 116:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 117:Src/stm32f4xx_it.c **** 
 118:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 119:Src/stm32f4xx_it.c ****   while (1)
 120:Src/stm32f4xx_it.c ****   {
 121:Src/stm32f4xx_it.c ****   }
 122:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 123:Src/stm32f4xx_it.c **** 
 124:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 125:Src/stm32f4xx_it.c **** }
 126:Src/stm32f4xx_it.c **** 
 127:Src/stm32f4xx_it.c **** /**
 128:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 129:Src/stm32f4xx_it.c **** */
 130:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 131:Src/stm32f4xx_it.c **** {
 131              		.loc 1 131 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE128:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB129:
 132:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 133:Src/stm32f4xx_it.c **** 
 134:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 135:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 136:Src/stm32f4xx_it.c **** 
 137:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 138:Src/stm32f4xx_it.c **** }
 139:Src/stm32f4xx_it.c **** 
 140:Src/stm32f4xx_it.c **** /**
 141:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 142:Src/stm32f4xx_it.c **** */
 143:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 144:Src/stm32f4xx_it.c **** {
 150              		.loc 1 144 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
ARM GAS  /tmp/cc6Zumgp.s 			page 6


 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE129:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB130:
 145:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 146:Src/stm32f4xx_it.c **** 
 147:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 148:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 149:Src/stm32f4xx_it.c **** 
 150:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 151:Src/stm32f4xx_it.c **** }
 152:Src/stm32f4xx_it.c **** 
 153:Src/stm32f4xx_it.c **** /**
 154:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 155:Src/stm32f4xx_it.c **** */
 156:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 157:Src/stm32f4xx_it.c **** {
 169              		.loc 1 157 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE130:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB131:
 158:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 159:Src/stm32f4xx_it.c **** 
 160:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 161:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 162:Src/stm32f4xx_it.c **** 
 163:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 164:Src/stm32f4xx_it.c **** }
 165:Src/stm32f4xx_it.c **** 
 166:Src/stm32f4xx_it.c **** /**
 167:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 168:Src/stm32f4xx_it.c **** */
 169:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 170:Src/stm32f4xx_it.c **** {
 188              		.loc 1 170 0
 189              		.cfi_startproc
ARM GAS  /tmp/cc6Zumgp.s 			page 7


 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 170 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 171:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 172:Src/stm32f4xx_it.c **** 
 173:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 174:Src/stm32f4xx_it.c ****   HAL_IncTick();
 198              		.loc 1 174 0
 199 0002 FFF7FEFF 		bl	HAL_IncTick
 200              	.LVL0:
 175:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 201              		.loc 1 175 0
 202 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 203              	.LVL1:
 204 000a 08BD     		pop	{r3, pc}
 205              		.cfi_endproc
 206              	.LFE131:
 208              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 209              		.align	1
 210              		.global	EXTI9_5_IRQHandler
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	EXTI9_5_IRQHandler:
 217              	.LFB132:
 176:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 177:Src/stm32f4xx_it.c **** 
 178:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 179:Src/stm32f4xx_it.c **** }
 180:Src/stm32f4xx_it.c **** 
 181:Src/stm32f4xx_it.c **** /******************************************************************************/
 182:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 183:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 184:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 185:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 186:Src/stm32f4xx_it.c **** /******************************************************************************/
 187:Src/stm32f4xx_it.c **** 
 188:Src/stm32f4xx_it.c **** /**
 189:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line[9:5] interrupts.
 190:Src/stm32f4xx_it.c **** */
 191:Src/stm32f4xx_it.c **** void EXTI9_5_IRQHandler(void)
 192:Src/stm32f4xx_it.c **** {
 218              		.loc 1 192 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222 0000 08B5     		push	{r3, lr}
 223              	.LCFI1:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 3, -8
 226              		.cfi_offset 14, -4
ARM GAS  /tmp/cc6Zumgp.s 			page 8


 193:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 194:Src/stm32f4xx_it.c **** 
 195:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 196:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 227              		.loc 1 196 0
 228 0002 4020     		movs	r0, #64
 229 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 230              	.LVL2:
 231 0008 08BD     		pop	{r3, pc}
 232              		.cfi_endproc
 233              	.LFE132:
 235              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 236              		.align	1
 237              		.global	TIM2_IRQHandler
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu fpv4-sp-d16
 243              	TIM2_IRQHandler:
 244              	.LFB133:
 197:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 198:Src/stm32f4xx_it.c **** 
 199:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 200:Src/stm32f4xx_it.c **** }
 201:Src/stm32f4xx_it.c **** 
 202:Src/stm32f4xx_it.c **** /**
 203:Src/stm32f4xx_it.c **** * @brief This function handles TIM2 global interrupt.
 204:Src/stm32f4xx_it.c **** */
 205:Src/stm32f4xx_it.c **** void TIM2_IRQHandler(void)
 206:Src/stm32f4xx_it.c **** {
 245              		.loc 1 206 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 08B5     		push	{r3, lr}
 250              	.LCFI2:
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 3, -8
 253              		.cfi_offset 14, -4
 207:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 208:Src/stm32f4xx_it.c **** 
 209:Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 210:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 254              		.loc 1 210 0
 255 0002 0248     		ldr	r0, .L19
 256 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 257              	.LVL3:
 258 0008 08BD     		pop	{r3, pc}
 259              	.L20:
 260 000a 00BF     		.align	2
 261              	.L19:
 262 000c 00000000 		.word	htim2
 263              		.cfi_endproc
 264              	.LFE133:
 266              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 267              		.align	1
 268              		.global	EXTI15_10_IRQHandler
ARM GAS  /tmp/cc6Zumgp.s 			page 9


 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 272              		.fpu fpv4-sp-d16
 274              	EXTI15_10_IRQHandler:
 275              	.LFB134:
 211:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 212:Src/stm32f4xx_it.c **** 
 213:Src/stm32f4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 214:Src/stm32f4xx_it.c **** }
 215:Src/stm32f4xx_it.c **** 
 216:Src/stm32f4xx_it.c **** /**
 217:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line[15:10] interrupts.
 218:Src/stm32f4xx_it.c **** */
 219:Src/stm32f4xx_it.c **** void EXTI15_10_IRQHandler(void)
 220:Src/stm32f4xx_it.c **** {
 276              		.loc 1 220 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280 0000 08B5     		push	{r3, lr}
 281              	.LCFI3:
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 3, -8
 284              		.cfi_offset 14, -4
 221:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 222:Src/stm32f4xx_it.c **** 
 223:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 224:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_12);
 285              		.loc 1 224 0
 286 0002 4FF48050 		mov	r0, #4096
 287 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 288              	.LVL4:
 225:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 226:Src/stm32f4xx_it.c ****   hardware_trigger = 1;
 289              		.loc 1 226 0
 290 000a 0122     		movs	r2, #1
 291 000c 014B     		ldr	r3, .L23
 292 000e 1A70     		strb	r2, [r3]
 293 0010 08BD     		pop	{r3, pc}
 294              	.L24:
 295 0012 00BF     		.align	2
 296              	.L23:
 297 0014 00000000 		.word	hardware_trigger
 298              		.cfi_endproc
 299              	.LFE134:
 301              		.text
 302              	.Letext0:
 303              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 304              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 305              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 306              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 307              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 308              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 309              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 310              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 311              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
ARM GAS  /tmp/cc6Zumgp.s 			page 10


 312              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 313              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 314              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 315              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 316              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 317              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/cc6Zumgp.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/cc6Zumgp.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc6Zumgp.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc6Zumgp.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc6Zumgp.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc6Zumgp.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc6Zumgp.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc6Zumgp.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc6Zumgp.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc6Zumgp.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc6Zumgp.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc6Zumgp.s:122    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc6Zumgp.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc6Zumgp.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc6Zumgp.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc6Zumgp.s:160    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc6Zumgp.s:167    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc6Zumgp.s:179    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc6Zumgp.s:186    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cc6Zumgp.s:209    .text.EXTI9_5_IRQHandler:0000000000000000 $t
     /tmp/cc6Zumgp.s:216    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
     /tmp/cc6Zumgp.s:236    .text.TIM2_IRQHandler:0000000000000000 $t
     /tmp/cc6Zumgp.s:243    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
     /tmp/cc6Zumgp.s:262    .text.TIM2_IRQHandler:000000000000000c $d
     /tmp/cc6Zumgp.s:267    .text.EXTI15_10_IRQHandler:0000000000000000 $t
     /tmp/cc6Zumgp.s:274    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
     /tmp/cc6Zumgp.s:297    .text.EXTI15_10_IRQHandler:0000000000000014 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
htim2
hardware_trigger
