ARM GAS  /tmp/ccgk4x4x.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB123:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccgk4x4x.s 			page 2


  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** 
  40:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /* TIM handler declared in "main.c" file */
  45:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim5;
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** extern __IO uint32_t uwPeriodValue;
  48:Src/stm32f4xx_it.c **** extern __IO uint32_t uwCaptureNumber;
  49:Src/stm32f4xx_it.c **** extern __IO uint32_t uwMeasurementDone;
  50:Src/stm32f4xx_it.c **** uint16_t tmpCC4[2] = {0,0};
  51:Src/stm32f4xx_it.c **** 
  52:Src/stm32f4xx_it.c **** /******************************************************************************/
  53:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  54:Src/stm32f4xx_it.c **** /******************************************************************************/
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c **** /**
  57:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  58:Src/stm32f4xx_it.c **** */
  59:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  60:Src/stm32f4xx_it.c **** {
  28              		.loc 1 60 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE123:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB124:
  61:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  62:Src/stm32f4xx_it.c **** 
  63:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  64:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  67:Src/stm32f4xx_it.c **** }
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c **** /**
  70:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  71:Src/stm32f4xx_it.c **** */
ARM GAS  /tmp/ccgk4x4x.s 			page 3


  72:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  73:Src/stm32f4xx_it.c **** {
  47              		.loc 1 73 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE124:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB125:
  74:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  75:Src/stm32f4xx_it.c **** 
  76:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  77:Src/stm32f4xx_it.c ****   while (1)
  78:Src/stm32f4xx_it.c ****   {
  79:Src/stm32f4xx_it.c ****   }
  80:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  81:Src/stm32f4xx_it.c **** 
  82:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  83:Src/stm32f4xx_it.c **** }
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c **** /**
  86:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  87:Src/stm32f4xx_it.c **** */
  88:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  89:Src/stm32f4xx_it.c **** {
  68              		.loc 1 89 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE125:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB126:
  90:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
ARM GAS  /tmp/ccgk4x4x.s 			page 4


  91:Src/stm32f4xx_it.c **** 
  92:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  93:Src/stm32f4xx_it.c ****   while (1)
  94:Src/stm32f4xx_it.c ****   {
  95:Src/stm32f4xx_it.c ****   }
  96:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  97:Src/stm32f4xx_it.c **** 
  98:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  99:Src/stm32f4xx_it.c **** }
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c **** /**
 102:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 103:Src/stm32f4xx_it.c **** */
 104:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 105:Src/stm32f4xx_it.c **** {
  89              		.loc 1 105 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE126:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB127:
 106:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 107:Src/stm32f4xx_it.c **** 
 108:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 109:Src/stm32f4xx_it.c ****   while (1)
 110:Src/stm32f4xx_it.c ****   {
 111:Src/stm32f4xx_it.c ****   }
 112:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 113:Src/stm32f4xx_it.c **** 
 114:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 115:Src/stm32f4xx_it.c **** }
 116:Src/stm32f4xx_it.c **** 
 117:Src/stm32f4xx_it.c **** /**
 118:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 119:Src/stm32f4xx_it.c **** */
 120:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 121:Src/stm32f4xx_it.c **** {
 110              		.loc 1 121 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
ARM GAS  /tmp/ccgk4x4x.s 			page 5


 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE127:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB128:
 122:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 123:Src/stm32f4xx_it.c **** 
 124:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 125:Src/stm32f4xx_it.c ****   while (1)
 126:Src/stm32f4xx_it.c ****   {
 127:Src/stm32f4xx_it.c ****   }
 128:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 129:Src/stm32f4xx_it.c **** 
 130:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 131:Src/stm32f4xx_it.c **** }
 132:Src/stm32f4xx_it.c **** 
 133:Src/stm32f4xx_it.c **** /**
 134:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 135:Src/stm32f4xx_it.c **** */
 136:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 137:Src/stm32f4xx_it.c **** {
 131              		.loc 1 137 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE128:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB129:
 138:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 139:Src/stm32f4xx_it.c **** 
 140:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 141:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 142:Src/stm32f4xx_it.c **** 
 143:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 144:Src/stm32f4xx_it.c **** }
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c **** /**
 147:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 148:Src/stm32f4xx_it.c **** */
 149:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
ARM GAS  /tmp/ccgk4x4x.s 			page 6


 150:Src/stm32f4xx_it.c **** {
 150              		.loc 1 150 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE129:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB130:
 151:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 152:Src/stm32f4xx_it.c **** 
 153:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 154:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 155:Src/stm32f4xx_it.c **** 
 156:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 157:Src/stm32f4xx_it.c **** }
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c **** /**
 160:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 161:Src/stm32f4xx_it.c **** */
 162:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 163:Src/stm32f4xx_it.c **** {
 169              		.loc 1 163 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE130:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB131:
 164:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 165:Src/stm32f4xx_it.c **** 
 166:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 167:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 168:Src/stm32f4xx_it.c **** 
 169:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 170:Src/stm32f4xx_it.c **** }
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/ccgk4x4x.s 			page 7


 173:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 174:Src/stm32f4xx_it.c **** */
 175:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 176:Src/stm32f4xx_it.c **** {
 188              		.loc 1 176 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 176 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 177:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 178:Src/stm32f4xx_it.c **** 
 179:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 180:Src/stm32f4xx_it.c ****   HAL_IncTick();
 198              		.loc 1 180 0
 199 0002 FFF7FEFF 		bl	HAL_IncTick
 200              	.LVL0:
 181:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 201              		.loc 1 181 0
 202 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 203              	.LVL1:
 204 000a 08BD     		pop	{r3, pc}
 205              		.cfi_endproc
 206              	.LFE131:
 208              		.section	.text.RCC_IRQHandler,"ax",%progbits
 209              		.align	1
 210              		.global	RCC_IRQHandler
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	RCC_IRQHandler:
 217              	.LFB132:
 182:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 183:Src/stm32f4xx_it.c **** 
 184:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 185:Src/stm32f4xx_it.c **** }
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c **** /******************************************************************************/
 188:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 189:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 190:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 191:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 192:Src/stm32f4xx_it.c **** /******************************************************************************/
 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c **** /**
 195:Src/stm32f4xx_it.c **** * @brief This function handles RCC global interrupt.
 196:Src/stm32f4xx_it.c **** */
 197:Src/stm32f4xx_it.c **** void RCC_IRQHandler(void)
 198:Src/stm32f4xx_it.c **** {
 218              		.loc 1 198 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccgk4x4x.s 			page 8


 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223 0000 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE132:
 227              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 228              		.align	1
 229              		.global	EXTI0_IRQHandler
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	EXTI0_IRQHandler:
 236              	.LFB133:
 199:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 0 */
 200:Src/stm32f4xx_it.c **** 
 201:Src/stm32f4xx_it.c ****   /* USER CODE END RCC_IRQn 0 */
 202:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN RCC_IRQn 1 */
 203:Src/stm32f4xx_it.c **** 
 204:Src/stm32f4xx_it.c ****   /* USER CODE END RCC_IRQn 1 */
 205:Src/stm32f4xx_it.c **** }
 206:Src/stm32f4xx_it.c **** 
 207:Src/stm32f4xx_it.c **** /**
 208:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line0 interrupt.
 209:Src/stm32f4xx_it.c **** */
 210:Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 211:Src/stm32f4xx_it.c **** {
 237              		.loc 1 211 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		.loc 1 211 0
 242 0000 08B5     		push	{r3, lr}
 243              	.LCFI1:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 3, -8
 246              		.cfi_offset 14, -4
 212:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
 213:Src/stm32f4xx_it.c **** 
 214:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 215:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 247              		.loc 1 215 0
 248 0002 0120     		movs	r0, #1
 249 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 250              	.LVL2:
 251 0008 08BD     		pop	{r3, pc}
 252              		.cfi_endproc
 253              	.LFE133:
 255              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 256              		.align	1
 257              		.global	EXTI1_IRQHandler
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu fpv4-sp-d16
 263              	EXTI1_IRQHandler:
 264              	.LFB134:
ARM GAS  /tmp/ccgk4x4x.s 			page 9


 216:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 217:Src/stm32f4xx_it.c **** 
 218:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 219:Src/stm32f4xx_it.c **** }
 220:Src/stm32f4xx_it.c **** 
 221:Src/stm32f4xx_it.c **** /**
 222:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line1 interrupt.
 223:Src/stm32f4xx_it.c **** */
 224:Src/stm32f4xx_it.c **** void EXTI1_IRQHandler(void)
 225:Src/stm32f4xx_it.c **** {
 265              		.loc 1 225 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269 0000 08B5     		push	{r3, lr}
 270              	.LCFI2:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 3, -8
 273              		.cfi_offset 14, -4
 226:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 227:Src/stm32f4xx_it.c **** 
 228:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
 229:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
 274              		.loc 1 229 0
 275 0002 0220     		movs	r0, #2
 276 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 277              	.LVL3:
 278 0008 08BD     		pop	{r3, pc}
 279              		.cfi_endproc
 280              	.LFE134:
 282              		.section	.text.TIM5_IRQHandler,"ax",%progbits
 283              		.align	1
 284              		.global	TIM5_IRQHandler
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	TIM5_IRQHandler:
 291              	.LFB135:
 230:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 231:Src/stm32f4xx_it.c **** 
 232:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
 233:Src/stm32f4xx_it.c **** }
 234:Src/stm32f4xx_it.c **** 
 235:Src/stm32f4xx_it.c **** /**
 236:Src/stm32f4xx_it.c **** * @brief This function handles TIM5 global interrupt.
 237:Src/stm32f4xx_it.c **** */
 238:Src/stm32f4xx_it.c **** void TIM5_IRQHandler(void)
 239:Src/stm32f4xx_it.c **** {
 292              		.loc 1 239 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 70B5     		push	{r4, r5, r6, lr}
 297              	.LCFI3:
 298              		.cfi_def_cfa_offset 16
 299              		.cfi_offset 4, -16
ARM GAS  /tmp/ccgk4x4x.s 			page 10


 300              		.cfi_offset 5, -12
 301              		.cfi_offset 6, -8
 302              		.cfi_offset 14, -4
 240:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 0 */
 241:Src/stm32f4xx_it.c ****   
 242:Src/stm32f4xx_it.c ****   /* USER CODE END TIM5_IRQn 0 */
 243:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim5);
 303              		.loc 1 243 0
 304 0002 0F4E     		ldr	r6, .L23
 305 0004 3046     		mov	r0, r6
 306 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 307              	.LVL4:
 244:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM5_IRQn 1 */
 245:Src/stm32f4xx_it.c ****   {
 246:Src/stm32f4xx_it.c ****   /* Get the Input Capture value */
 247:Src/stm32f4xx_it.c ****     tmpCC4[uwCaptureNumber++] = HAL_TIM_ReadCapturedValue(&htim5, TIM_CHANNEL_4);
 308              		.loc 1 247 0
 309 000a 0E4C     		ldr	r4, .L23+4
 310 000c 2568     		ldr	r5, [r4]
 311 000e 6B1C     		adds	r3, r5, #1
 312 0010 2360     		str	r3, [r4]
 313 0012 0C21     		movs	r1, #12
 314 0014 3046     		mov	r0, r6
 315 0016 FFF7FEFF 		bl	HAL_TIM_ReadCapturedValue
 316              	.LVL5:
 317 001a 0B4B     		ldr	r3, .L23+8
 318 001c 23F81500 		strh	r0, [r3, r5, lsl #1]	@ movhi
 248:Src/stm32f4xx_it.c **** 
 249:Src/stm32f4xx_it.c ****     if (uwCaptureNumber >= 2)
 319              		.loc 1 249 0
 320 0020 2368     		ldr	r3, [r4]
 321 0022 012B     		cmp	r3, #1
 322 0024 0BD9     		bls	.L20
 250:Src/stm32f4xx_it.c ****       {
 251:Src/stm32f4xx_it.c **** 	/* Compute the period length */
 252:Src/stm32f4xx_it.c **** 	uwPeriodValue = (uint16_t)(0xFFFF - tmpCC4[0] + tmpCC4[1] +1);
 323              		.loc 1 252 0
 324 0026 084A     		ldr	r2, .L23+8
 325 0028 5388     		ldrh	r3, [r2, #2]
 326 002a 1288     		ldrh	r2, [r2]
 327 002c 9B1A     		subs	r3, r3, r2
 328 002e 9BB2     		uxth	r3, r3
 329 0030 064A     		ldr	r2, .L23+12
 330 0032 1360     		str	r3, [r2]
 253:Src/stm32f4xx_it.c **** 	uwMeasurementDone = 1;
 331              		.loc 1 253 0
 332 0034 0122     		movs	r2, #1
 333 0036 064B     		ldr	r3, .L23+16
 334 0038 1A60     		str	r2, [r3]
 254:Src/stm32f4xx_it.c **** 	uwCaptureNumber = 0;
 335              		.loc 1 254 0
 336 003a 0022     		movs	r2, #0
 337 003c 2260     		str	r2, [r4]
 338              	.L20:
 339 003e 70BD     		pop	{r4, r5, r6, pc}
 340              	.L24:
 341              		.align	2
ARM GAS  /tmp/ccgk4x4x.s 			page 11


 342              	.L23:
 343 0040 00000000 		.word	htim5
 344 0044 00000000 		.word	uwCaptureNumber
 345 0048 00000000 		.word	.LANCHOR0
 346 004c 00000000 		.word	uwPeriodValue
 347 0050 00000000 		.word	uwMeasurementDone
 348              		.cfi_endproc
 349              	.LFE135:
 351              		.global	tmpCC4
 352              		.section	.bss.tmpCC4,"aw",%nobits
 353              		.align	2
 354              		.set	.LANCHOR0,. + 0
 357              	tmpCC4:
 358 0000 00000000 		.space	4
 359              		.text
 360              	.Letext0:
 361              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 362              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 363              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 364              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 365              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 366              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 367              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 368              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 369              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 370              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 371              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 372              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 373              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 374              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 375              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccgk4x4x.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccgk4x4x.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccgk4x4x.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccgk4x4x.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccgk4x4x.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccgk4x4x.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccgk4x4x.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccgk4x4x.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccgk4x4x.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccgk4x4x.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccgk4x4x.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccgk4x4x.s:122    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccgk4x4x.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccgk4x4x.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccgk4x4x.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccgk4x4x.s:160    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccgk4x4x.s:167    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccgk4x4x.s:179    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccgk4x4x.s:186    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccgk4x4x.s:209    .text.RCC_IRQHandler:0000000000000000 $t
     /tmp/ccgk4x4x.s:216    .text.RCC_IRQHandler:0000000000000000 RCC_IRQHandler
     /tmp/ccgk4x4x.s:228    .text.EXTI0_IRQHandler:0000000000000000 $t
     /tmp/ccgk4x4x.s:235    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
     /tmp/ccgk4x4x.s:256    .text.EXTI1_IRQHandler:0000000000000000 $t
     /tmp/ccgk4x4x.s:263    .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
     /tmp/ccgk4x4x.s:283    .text.TIM5_IRQHandler:0000000000000000 $t
     /tmp/ccgk4x4x.s:290    .text.TIM5_IRQHandler:0000000000000000 TIM5_IRQHandler
     /tmp/ccgk4x4x.s:343    .text.TIM5_IRQHandler:0000000000000040 $d
     /tmp/ccgk4x4x.s:357    .bss.tmpCC4:0000000000000000 tmpCC4
     /tmp/ccgk4x4x.s:353    .bss.tmpCC4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
HAL_TIM_ReadCapturedValue
htim5
uwCaptureNumber
uwPeriodValue
uwMeasurementDone
