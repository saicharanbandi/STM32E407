ARM GAS  /tmp/ccs3dBSp.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB127:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccs3dBSp.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f4xx_hal.h"
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE BEGIN Includes */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END Includes */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** IWDG_HandleTypeDef hiwdg;
  48:Src/main.c    **** 
  49:Src/main.c    **** TIM_HandleTypeDef htim5;
  50:Src/main.c    **** 
  51:Src/main.c    **** 
  52:Src/main.c    **** static __IO uint32_t uwLsiFreq = 0;
  53:Src/main.c    **** __IO uint32_t uwCaptureNumber = 0;
  54:Src/main.c    **** __IO uint32_t uwPeriodValue = 0;
  55:Src/main.c    **** __IO uint32_t uwMeasurementDone = 0;
  56:Src/main.c    **** /* USER CODE BEGIN PV */
  57:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PV */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  62:Src/main.c    **** void SystemClock_Config(void);
  63:Src/main.c    **** static void MX_GPIO_Init(void);
  64:Src/main.c    **** /*static void MX_IWDG_Init(void);*/
  65:Src/main.c    **** static void MX_TIM5_Init(void);
  66:Src/main.c    **** static uint32_t GetLSIFrequency(void);
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN PFP */
  69:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE END PFP */
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE BEGIN 0 */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE END 0 */
  76:Src/main.c    **** 
  77:Src/main.c    **** int main(void)
  78:Src/main.c    **** {
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE BEGIN 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE END 1 */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Src/main.c    ****   HAL_Init();
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/ccs3dBSp.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE END Init */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* Configure the system clock */
  94:Src/main.c    ****   SystemClock_Config();
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE END SysInit */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* Initialize all configured peripherals */
 101:Src/main.c    ****   MX_GPIO_Init();
 102:Src/main.c    ****   /*MX_IWDG_Init();*/
 103:Src/main.c    ****   /* MX_TIM5_Init();*/
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN 2 */
 106:Src/main.c    ****   /*##-1- Check if the system has resumed from IWDG reset ######################*/
 107:Src/main.c    ****   if (__HAL_RCC_GET_FLAG(RCC_FLAG_IWDGRST) != RESET)
 108:Src/main.c    ****   {
 109:Src/main.c    ****     HAL_GPIO_WritePin(LED_Blue_GPIO_Port, LED_Blue_Pin, GPIO_PIN_SET);
 110:Src/main.c    **** 
 111:Src/main.c    ****     /* clear reset flags */
 112:Src/main.c    ****     __HAL_RCC_CLEAR_RESET_FLAGS();
 113:Src/main.c    ****   }
 114:Src/main.c    ****   else
 115:Src/main.c    ****   {
 116:Src/main.c    ****     HAL_GPIO_WritePin(LED_Blue_GPIO_Port, LED_Blue_Pin, GPIO_PIN_RESET);
 117:Src/main.c    ****   }
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* Get the LSI frequency; TIM5 is used to measure the LSI frequency */
 120:Src/main.c    ****   uwLsiFreq = GetLSIFrequency();
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Configure the IWDG Peripheral */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* Set counter reload value to obtain 250ms IWDG Timeout. */
 125:Src/main.c    ****   /* IWDG counter clock frequency = LsiFreq/32 */
 126:Src/main.c    ****   /* Counter Reload Value = 250ms / IWDG counter clock Period */
 127:Src/main.c    ****   /*                      = 0.25s / (32/LsiFreq) */
 128:Src/main.c    ****   /*                      = LsiFreq / 128 */
 129:Src/main.c    ****   hiwdg.Instance = IWDG;
 130:Src/main.c    ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_32;
 131:Src/main.c    ****   hiwdg.Init.Reload = uwLsiFreq / 128;
 132:Src/main.c    **** 
 133:Src/main.c    ****   if(HAL_IWDG_Init(&hiwdg) != HAL_OK)
 134:Src/main.c    ****   {
 135:Src/main.c    ****      _Error_Handler(__FILE__, __LINE__);
 136:Src/main.c    ****   }  
 137:Src/main.c    **** 
 138:Src/main.c    ****   /*##-4- Start the IWDG ###################################################*/
 139:Src/main.c    ****   /* if(HAL_IWDG_Start(&hiwdg) != HAL_OK) */
 140:Src/main.c    ****   /* { */
 141:Src/main.c    ****   /*    _Error_Handler(__FILE__, __LINE__); */
 142:Src/main.c    ****   /* } */
 143:Src/main.c    ****   /* USER CODE END 2 */
 144:Src/main.c    **** 
 145:Src/main.c    ****     
 146:Src/main.c    ****   /* USER CODE BEGIN 3 */
ARM GAS  /tmp/ccs3dBSp.s 			page 4


 147:Src/main.c    ****   /* Infinite loop */
 148:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 149:Src/main.c    ****   while (1)
 150:Src/main.c    ****   {
 151:Src/main.c    ****   /* USER CODE END WHILE */
 152:Src/main.c    **** 
 153:Src/main.c    ****     /* Toggle LED GREEN */
 154:Src/main.c    ****     HAL_GPIO_TogglePin(LED_Green_GPIO_Port, LED_Green_Pin);
 155:Src/main.c    **** 
 156:Src/main.c    ****     /* Insert 240ms delay */
 157:Src/main.c    ****     HAL_Delay(240);
 158:Src/main.c    **** 
 159:Src/main.c    ****     /* Refresh IWDG: reload counter */
 160:Src/main.c    ****     if(HAL_IWDG_Refresh(&hiwdg))
 161:Src/main.c    ****     {
 162:Src/main.c    ****        _Error_Handler(__FILE__, __LINE__);
 163:Src/main.c    ****     }  
 164:Src/main.c    ****   }
 165:Src/main.c    ****   /* USER CODE END 3 */
 166:Src/main.c    **** 
 167:Src/main.c    **** }
 168:Src/main.c    **** 
 169:Src/main.c    **** /**
 170:Src/main.c    ****   * @brief  Configures TIM5 to measure the LSI oscillator frequency.
 171:Src/main.c    ****   * @parm   None
 172:Src/main.c    ****   * @retval LSI Frequency
 173:Src/main.c    ****   */
 174:Src/main.c    **** static uint32_t GetLSIFrequency(void)
 175:Src/main.c    **** {
 176:Src/main.c    ****   uint32_t pclk1 = 0;
 177:Src/main.c    **** 
 178:Src/main.c    ****   /* Wait till LSI is ready */
 179:Src/main.c    ****   while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 180:Src/main.c    ****   {
 181:Src/main.c    ****   }
 182:Src/main.c    ****   
 183:Src/main.c    ****   /* Initialization of TIM peripheral */
 184:Src/main.c    ****   MX_TIM5_Init();
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* Wait until the TIM5 get 2 LSI edges (refer to TIM5_IRQHandler()
 187:Src/main.c    ****      in stm32f4xx_it.c file */
 188:Src/main.c    ****   while(uwMeasurementDone == 0)
 189:Src/main.c    ****   {
 190:Src/main.c    ****   }
 191:Src/main.c    ****   uwCaptureNumber = 0;
 192:Src/main.c    **** 
 193:Src/main.c    ****   /* Deinitialize the TIM5 peripheral registers to their default reset
 194:Src/main.c    ****      values */
 195:Src/main.c    ****   HAL_TIM_IC_DeInit(&htim5);
 196:Src/main.c    **** 
 197:Src/main.c    ****   /* Compute the LSI frequency, depending on TIM5 input clock
 198:Src/main.c    ****      frequency(PCLK1) */
 199:Src/main.c    **** 
 200:Src/main.c    ****   /* Get PCLK1 frequency */
 201:Src/main.c    ****   pclk1 = HAL_RCC_GetPCLK1Freq();
 202:Src/main.c    **** 
 203:Src/main.c    ****   /* PCLK1 prescaler equal to 1 => TIMCLK = PCLK1 */
ARM GAS  /tmp/ccs3dBSp.s 			page 5


 204:Src/main.c    ****   return (pclk1/uwPeriodValue);
 205:Src/main.c    **** }
 206:Src/main.c    **** /** System Clock Configuration
 207:Src/main.c    **** */
 208:Src/main.c    **** void SystemClock_Config(void)
 209:Src/main.c    **** {
 210:Src/main.c    **** 
 211:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 212:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 213:Src/main.c    **** 
 214:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 215:Src/main.c    ****     */
 216:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 217:Src/main.c    **** 
 218:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 219:Src/main.c    **** 
 220:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 221:Src/main.c    ****     */
 222:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 223:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 224:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 225:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 227:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 228:Src/main.c    ****   {
 229:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 230:Src/main.c    ****   }
 231:Src/main.c    **** 
 232:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 233:Src/main.c    ****     */
 234:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 235:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 236:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 237:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 238:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 239:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 240:Src/main.c    **** 
 241:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 242:Src/main.c    ****   {
 243:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 244:Src/main.c    ****   }
 245:Src/main.c    **** 
 246:Src/main.c    ****     /**Configure the Systick interrupt time 
 247:Src/main.c    ****     */
 248:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 249:Src/main.c    **** 
 250:Src/main.c    ****     /**Configure the Systick 
 251:Src/main.c    ****     */
 252:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 253:Src/main.c    **** 
 254:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 255:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 256:Src/main.c    **** }
 257:Src/main.c    **** 
 258:Src/main.c    **** /* IWDG init function */
 259:Src/main.c    **** /* static void MX_IWDG_Init(void)
 260:Src/main.c    **** {
ARM GAS  /tmp/ccs3dBSp.s 			page 6


 261:Src/main.c    **** 
 262:Src/main.c    ****   hiwdg.Instance = IWDG;
 263:Src/main.c    ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_32;
 264:Src/main.c    ****   hiwdg.Init.Reload = 4095;
 265:Src/main.c    ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 266:Src/main.c    ****   {
 267:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 268:Src/main.c    ****   }
 269:Src/main.c    **** 
 270:Src/main.c    **** } */
 271:Src/main.c    **** /* TIM5 init function */
 272:Src/main.c    **** static void MX_TIM5_Init(void)
 273:Src/main.c    **** {
 274:Src/main.c    **** 
 275:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig;
 276:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 277:Src/main.c    ****   TIM_IC_InitTypeDef sConfigIC;
 278:Src/main.c    **** 
 279:Src/main.c    ****   htim5.Instance = TIM5;
 280:Src/main.c    ****   htim5.Init.Prescaler = 0;
 281:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 282:Src/main.c    ****   htim5.Init.Period = 0xFFFF;
 283:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 284:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
 285:Src/main.c    ****   {
 286:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 287:Src/main.c    ****   }
 288:Src/main.c    **** 
 289:Src/main.c    ****    sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 290:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 291:Src/main.c    ****   {
 292:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 293:Src/main.c    ****   }
 294:Src/main.c    **** 
 295:Src/main.c    ****   if (HAL_TIM_IC_Init(&htim5) != HAL_OK)
 296:Src/main.c    ****   {
 297:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 298:Src/main.c    ****   }
 299:Src/main.c    **** 
 300:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 301:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 302:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 303:Src/main.c    ****   {
 304:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 305:Src/main.c    ****   }
 306:Src/main.c    **** 
 307:Src/main.c    ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 308:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 309:Src/main.c    ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 310:Src/main.c    ****   sConfigIC.ICFilter = 0;
 311:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim5, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 312:Src/main.c    ****   {
 313:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 314:Src/main.c    ****   }
 315:Src/main.c    **** 
 316:Src/main.c    ****   if (HAL_TIMEx_RemapConfig(&htim5, TIM_TIM5_LSI) != HAL_OK)
 317:Src/main.c    ****   {
ARM GAS  /tmp/ccs3dBSp.s 			page 7


 318:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 319:Src/main.c    ****   }
 320:Src/main.c    **** 
 321:Src/main.c    **** }
 322:Src/main.c    **** 
 323:Src/main.c    **** /** Configure pins as 
 324:Src/main.c    ****         * Analog 
 325:Src/main.c    ****         * Input 
 326:Src/main.c    ****         * Output
 327:Src/main.c    ****         * EVENT_OUT
 328:Src/main.c    ****         * EXTI
 329:Src/main.c    **** */
 330:Src/main.c    **** static void MX_GPIO_Init(void)
 331:Src/main.c    **** {
  27              		.loc 1 331 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  40              	.LBB2:
 332:Src/main.c    **** 
 333:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 334:Src/main.c    **** 
 335:Src/main.c    ****   /* GPIO Ports Clock Enable */
 336:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  41              		.loc 1 336 0
  42 0004 0024     		movs	r4, #0
  43 0006 0094     		str	r4, [sp]
  44 0008 1A4B     		ldr	r3, .L3
  45 000a 1A6B     		ldr	r2, [r3, #48]
  46 000c 42F02002 		orr	r2, r2, #32
  47 0010 1A63     		str	r2, [r3, #48]
  48 0012 1B6B     		ldr	r3, [r3, #48]
  49 0014 03F02003 		and	r3, r3, #32
  50 0018 0093     		str	r3, [sp]
  51 001a 009B     		ldr	r3, [sp]
  52              	.LBE2:
 337:Src/main.c    **** 
 338:Src/main.c    ****   /*Configure GPIO pin Output Level */
 339:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, LED_Green_Pin|LED_Blue_Pin|LED_Yellow_Pin|LED_Red_Pin, GPIO_PIN_RESET);
  53              		.loc 1 339 0
  54 001c 164D     		ldr	r5, .L3+4
  55 001e 2246     		mov	r2, r4
  56 0020 3C21     		movs	r1, #60
  57 0022 2846     		mov	r0, r5
  58 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
  59              	.LVL0:
 340:Src/main.c    **** 
 341:Src/main.c    ****   /*Configure GPIO pins : User_Button_1_Pin User_Button_2_Pin */
ARM GAS  /tmp/ccs3dBSp.s 			page 8


 342:Src/main.c    ****   GPIO_InitStruct.Pin = User_Button_1_Pin|User_Button_2_Pin;
  60              		.loc 1 342 0
  61 0028 0323     		movs	r3, #3
  62 002a 0193     		str	r3, [sp, #4]
 343:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  63              		.loc 1 343 0
  64 002c 134B     		ldr	r3, .L3+8
  65 002e 0293     		str	r3, [sp, #8]
 344:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  66              		.loc 1 344 0
  67 0030 0394     		str	r4, [sp, #12]
 345:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
  68              		.loc 1 345 0
  69 0032 01A9     		add	r1, sp, #4
  70 0034 2846     		mov	r0, r5
  71 0036 FFF7FEFF 		bl	HAL_GPIO_Init
  72              	.LVL1:
 346:Src/main.c    **** 
 347:Src/main.c    ****   /*Configure GPIO pins : LED_Green_Pin LED_Blue_Pin LED_Yellow_Pin LED_Red_Pin */
 348:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Green_Pin|LED_Blue_Pin|LED_Yellow_Pin|LED_Red_Pin;
  73              		.loc 1 348 0
  74 003a 3C23     		movs	r3, #60
  75 003c 0193     		str	r3, [sp, #4]
 349:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  76              		.loc 1 349 0
  77 003e 0123     		movs	r3, #1
  78 0040 0293     		str	r3, [sp, #8]
 350:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  79              		.loc 1 350 0
  80 0042 0394     		str	r4, [sp, #12]
 351:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  81              		.loc 1 351 0
  82 0044 0494     		str	r4, [sp, #16]
 352:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
  83              		.loc 1 352 0
  84 0046 01A9     		add	r1, sp, #4
  85 0048 2846     		mov	r0, r5
  86 004a FFF7FEFF 		bl	HAL_GPIO_Init
  87              	.LVL2:
 353:Src/main.c    **** 
 354:Src/main.c    ****   /* EXTI interrupt init*/
 355:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
  88              		.loc 1 355 0
  89 004e 2246     		mov	r2, r4
  90 0050 2146     		mov	r1, r4
  91 0052 0620     		movs	r0, #6
  92 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  93              	.LVL3:
 356:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
  94              		.loc 1 356 0
  95 0058 0620     		movs	r0, #6
  96 005a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  97              	.LVL4:
 357:Src/main.c    **** 
 358:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
  98              		.loc 1 358 0
  99 005e 2246     		mov	r2, r4
ARM GAS  /tmp/ccs3dBSp.s 			page 9


 100 0060 2146     		mov	r1, r4
 101 0062 0720     		movs	r0, #7
 102 0064 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 103              	.LVL5:
 359:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 104              		.loc 1 359 0
 105 0068 0720     		movs	r0, #7
 106 006a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 107              	.LVL6:
 360:Src/main.c    **** 
 361:Src/main.c    **** }
 108              		.loc 1 361 0
 109 006e 07B0     		add	sp, sp, #28
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 0070 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 0072 00BF     		.align	2
 116              	.L3:
 117 0074 00380240 		.word	1073887232
 118 0078 00140240 		.word	1073878016
 119 007c 00001110 		.word	269549568
 120              		.cfi_endproc
 121              	.LFE127:
 123              		.section	.text._Error_Handler,"ax",%progbits
 124              		.align	1
 125              		.global	_Error_Handler
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu fpv4-sp-d16
 131              	_Error_Handler:
 132              	.LFB128:
 362:Src/main.c    **** 
 363:Src/main.c    **** /* USER CODE BEGIN 4 */
 364:Src/main.c    **** 
 365:Src/main.c    **** /* USER CODE END 4 */
 366:Src/main.c    **** 
 367:Src/main.c    **** /**
 368:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 369:Src/main.c    ****   * @param  None
 370:Src/main.c    ****   * @retval None
 371:Src/main.c    ****   */
 372:Src/main.c    **** void _Error_Handler(char * file, int line)
 373:Src/main.c    **** {
 133              		.loc 1 373 0
 134              		.cfi_startproc
 135              		@ Volatile: function does not return.
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL7:
 139 0000 08B5     		push	{r3, lr}
 140              	.LCFI3:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 3, -8
 143              		.cfi_offset 14, -4
ARM GAS  /tmp/ccs3dBSp.s 			page 10


 374:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 375:Src/main.c    **** 
 376:Src/main.c    ****   /* Turn LED_Red_Pin on */
 377:Src/main.c    ****   HAL_GPIO_WritePin(LED_Red_GPIO_Port, LED_Red_Pin, GPIO_PIN_SET);
 144              		.loc 1 377 0
 145 0002 0122     		movs	r2, #1
 146 0004 2021     		movs	r1, #32
 147              	.LVL8:
 148 0006 0248     		ldr	r0, .L8
 149              	.LVL9:
 150 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 151              	.LVL10:
 152              	.L6:
 153 000c FEE7     		b	.L6
 154              	.L9:
 155 000e 00BF     		.align	2
 156              	.L8:
 157 0010 00140240 		.word	1073878016
 158              		.cfi_endproc
 159              	.LFE128:
 161              		.section	.text.MX_TIM5_Init,"ax",%progbits
 162              		.align	1
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv4-sp-d16
 168              	MX_TIM5_Init:
 169              	.LFB126:
 273:Src/main.c    **** 
 170              		.loc 1 273 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 40
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 00B5     		push	{lr}
 175              	.LCFI4:
 176              		.cfi_def_cfa_offset 4
 177              		.cfi_offset 14, -4
 178 0002 8BB0     		sub	sp, sp, #44
 179              	.LCFI5:
 180              		.cfi_def_cfa_offset 48
 279:Src/main.c    ****   htim5.Init.Prescaler = 0;
 181              		.loc 1 279 0
 182 0004 2948     		ldr	r0, .L24
 183 0006 2A4B     		ldr	r3, .L24+4
 184 0008 0360     		str	r3, [r0]
 280:Src/main.c    ****   htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 185              		.loc 1 280 0
 186 000a 0023     		movs	r3, #0
 187 000c 4360     		str	r3, [r0, #4]
 281:Src/main.c    ****   htim5.Init.Period = 0xFFFF;
 188              		.loc 1 281 0
 189 000e 8360     		str	r3, [r0, #8]
 282:Src/main.c    ****   htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 190              		.loc 1 282 0
 191 0010 4FF6FF72 		movw	r2, #65535
 192 0014 C260     		str	r2, [r0, #12]
 283:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim5) != HAL_OK)
ARM GAS  /tmp/ccs3dBSp.s 			page 11


 193              		.loc 1 283 0
 194 0016 0361     		str	r3, [r0, #16]
 284:Src/main.c    ****   {
 195              		.loc 1 284 0
 196 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 197              	.LVL11:
 198 001c 40BB     		cbnz	r0, .L18
 289:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim5, &sClockSourceConfig) != HAL_OK)
 199              		.loc 1 289 0
 200 001e 0AA9     		add	r1, sp, #40
 201 0020 4FF48053 		mov	r3, #4096
 202 0024 41F8103D 		str	r3, [r1, #-16]!
 290:Src/main.c    ****   {
 203              		.loc 1 290 0
 204 0028 2048     		ldr	r0, .L24
 205 002a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 206              	.LVL12:
 207 002e 20BB     		cbnz	r0, .L19
 295:Src/main.c    ****   {
 208              		.loc 1 295 0
 209 0030 1E48     		ldr	r0, .L24
 210 0032 FFF7FEFF 		bl	HAL_TIM_IC_Init
 211              	.LVL13:
 212 0036 28BB     		cbnz	r0, .L20
 300:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 213              		.loc 1 300 0
 214 0038 0023     		movs	r3, #0
 215 003a 0493     		str	r3, [sp, #16]
 301:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 216              		.loc 1 301 0
 217 003c 0593     		str	r3, [sp, #20]
 302:Src/main.c    ****   {
 218              		.loc 1 302 0
 219 003e 04A9     		add	r1, sp, #16
 220 0040 1A48     		ldr	r0, .L24
 221 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 222              	.LVL14:
 223 0046 10BB     		cbnz	r0, .L21
 307:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 224              		.loc 1 307 0
 225 0048 0023     		movs	r3, #0
 226 004a 0093     		str	r3, [sp]
 308:Src/main.c    ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 227              		.loc 1 308 0
 228 004c 0122     		movs	r2, #1
 229 004e 0192     		str	r2, [sp, #4]
 309:Src/main.c    ****   sConfigIC.ICFilter = 0;
 230              		.loc 1 309 0
 231 0050 0293     		str	r3, [sp, #8]
 310:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim5, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 232              		.loc 1 310 0
 233 0052 0393     		str	r3, [sp, #12]
 311:Src/main.c    ****   {
 234              		.loc 1 311 0
 235 0054 0C22     		movs	r2, #12
 236 0056 6946     		mov	r1, sp
 237 0058 1448     		ldr	r0, .L24
ARM GAS  /tmp/ccs3dBSp.s 			page 12


 238 005a FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 239              	.LVL15:
 240 005e D8B9     		cbnz	r0, .L22
 316:Src/main.c    ****   {
 241              		.loc 1 316 0
 242 0060 4021     		movs	r1, #64
 243 0062 1248     		ldr	r0, .L24
 244 0064 FFF7FEFF 		bl	HAL_TIMEx_RemapConfig
 245              	.LVL16:
 246 0068 D8B9     		cbnz	r0, .L23
 321:Src/main.c    **** 
 247              		.loc 1 321 0
 248 006a 0BB0     		add	sp, sp, #44
 249              	.LCFI6:
 250              		.cfi_remember_state
 251              		.cfi_def_cfa_offset 4
 252              		@ sp needed
 253 006c 5DF804FB 		ldr	pc, [sp], #4
 254              	.L18:
 255              	.LCFI7:
 256              		.cfi_restore_state
 286:Src/main.c    ****   }
 257              		.loc 1 286 0
 258 0070 4FF48F71 		mov	r1, #286
 259 0074 0F48     		ldr	r0, .L24+8
 260 0076 FFF7FEFF 		bl	_Error_Handler
 261              	.LVL17:
 262              	.L19:
 292:Src/main.c    ****   }
 263              		.loc 1 292 0
 264 007a 4FF49271 		mov	r1, #292
 265 007e 0D48     		ldr	r0, .L24+8
 266 0080 FFF7FEFF 		bl	_Error_Handler
 267              	.LVL18:
 268              	.L20:
 297:Src/main.c    ****   }
 269              		.loc 1 297 0
 270 0084 40F22911 		movw	r1, #297
 271 0088 0A48     		ldr	r0, .L24+8
 272 008a FFF7FEFF 		bl	_Error_Handler
 273              	.LVL19:
 274              	.L21:
 304:Src/main.c    ****   }
 275              		.loc 1 304 0
 276 008e 4FF49871 		mov	r1, #304
 277 0092 0848     		ldr	r0, .L24+8
 278 0094 FFF7FEFF 		bl	_Error_Handler
 279              	.LVL20:
 280              	.L22:
 313:Src/main.c    ****   }
 281              		.loc 1 313 0
 282 0098 40F23911 		movw	r1, #313
 283 009c 0548     		ldr	r0, .L24+8
 284 009e FFF7FEFF 		bl	_Error_Handler
 285              	.LVL21:
 286              	.L23:
 318:Src/main.c    ****   }
ARM GAS  /tmp/ccs3dBSp.s 			page 13


 287              		.loc 1 318 0
 288 00a2 4FF49F71 		mov	r1, #318
 289 00a6 0348     		ldr	r0, .L24+8
 290 00a8 FFF7FEFF 		bl	_Error_Handler
 291              	.LVL22:
 292              	.L25:
 293              		.align	2
 294              	.L24:
 295 00ac 00000000 		.word	htim5
 296 00b0 000C0040 		.word	1073744896
 297 00b4 00000000 		.word	.LC0
 298              		.cfi_endproc
 299              	.LFE126:
 301              		.section	.text.GetLSIFrequency,"ax",%progbits
 302              		.align	1
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 306              		.fpu fpv4-sp-d16
 308              	GetLSIFrequency:
 309              	.LFB124:
 175:Src/main.c    ****   uint32_t pclk1 = 0;
 310              		.loc 1 175 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 08B5     		push	{r3, lr}
 315              	.LCFI8:
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 3, -8
 318              		.cfi_offset 14, -4
 319              	.L27:
 179:Src/main.c    ****   {
 320              		.loc 1 179 0 discriminator 1
 321 0002 0C4B     		ldr	r3, .L30
 322 0004 5B6F     		ldr	r3, [r3, #116]
 323 0006 13F0020F 		tst	r3, #2
 324 000a FAD0     		beq	.L27
 184:Src/main.c    **** 
 325              		.loc 1 184 0
 326 000c FFF7FEFF 		bl	MX_TIM5_Init
 327              	.LVL23:
 328              	.L28:
 188:Src/main.c    ****   {
 329              		.loc 1 188 0 discriminator 1
 330 0010 094B     		ldr	r3, .L30+4
 331 0012 1B68     		ldr	r3, [r3]
 332 0014 002B     		cmp	r3, #0
 333 0016 FBD0     		beq	.L28
 191:Src/main.c    **** 
 334              		.loc 1 191 0
 335 0018 0022     		movs	r2, #0
 336 001a 084B     		ldr	r3, .L30+8
 337 001c 1A60     		str	r2, [r3]
 195:Src/main.c    **** 
 338              		.loc 1 195 0
 339 001e 0848     		ldr	r0, .L30+12
ARM GAS  /tmp/ccs3dBSp.s 			page 14


 340 0020 FFF7FEFF 		bl	HAL_TIM_IC_DeInit
 341              	.LVL24:
 201:Src/main.c    **** 
 342              		.loc 1 201 0
 343 0024 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 344              	.LVL25:
 204:Src/main.c    **** }
 345              		.loc 1 204 0
 346 0028 064B     		ldr	r3, .L30+16
 347 002a 1B68     		ldr	r3, [r3]
 205:Src/main.c    **** /** System Clock Configuration
 348              		.loc 1 205 0
 349 002c B0FBF3F0 		udiv	r0, r0, r3
 350              	.LVL26:
 351 0030 08BD     		pop	{r3, pc}
 352              	.L31:
 353 0032 00BF     		.align	2
 354              	.L30:
 355 0034 00380240 		.word	1073887232
 356 0038 00000000 		.word	.LANCHOR0
 357 003c 00000000 		.word	.LANCHOR1
 358 0040 00000000 		.word	htim5
 359 0044 00000000 		.word	.LANCHOR2
 360              		.cfi_endproc
 361              	.LFE124:
 363              		.section	.text.SystemClock_Config,"ax",%progbits
 364              		.align	1
 365              		.global	SystemClock_Config
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	SystemClock_Config:
 372              	.LFB125:
 209:Src/main.c    **** 
 373              		.loc 1 209 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 80
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377 0000 00B5     		push	{lr}
 378              	.LCFI9:
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 14, -4
 381 0002 95B0     		sub	sp, sp, #84
 382              	.LCFI10:
 383              		.cfi_def_cfa_offset 88
 384              	.LBB3:
 216:Src/main.c    **** 
 385              		.loc 1 216 0
 386 0004 0023     		movs	r3, #0
 387 0006 0193     		str	r3, [sp, #4]
 388 0008 234A     		ldr	r2, .L38
 389 000a 116C     		ldr	r1, [r2, #64]
 390 000c 41F08051 		orr	r1, r1, #268435456
 391 0010 1164     		str	r1, [r2, #64]
 392 0012 126C     		ldr	r2, [r2, #64]
 393 0014 02F08052 		and	r2, r2, #268435456
ARM GAS  /tmp/ccs3dBSp.s 			page 15


 394 0018 0192     		str	r2, [sp, #4]
 395 001a 019A     		ldr	r2, [sp, #4]
 396              	.LBE3:
 397              	.LBB4:
 218:Src/main.c    **** 
 398              		.loc 1 218 0
 399 001c 0293     		str	r3, [sp, #8]
 400 001e 1F4A     		ldr	r2, .L38+4
 401 0020 1168     		ldr	r1, [r2]
 402 0022 41F48041 		orr	r1, r1, #16384
 403 0026 1160     		str	r1, [r2]
 404 0028 1268     		ldr	r2, [r2]
 405 002a 02F48042 		and	r2, r2, #16384
 406 002e 0292     		str	r2, [sp, #8]
 407 0030 029A     		ldr	r2, [sp, #8]
 408              	.LBE4:
 222:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 409              		.loc 1 222 0
 410 0032 0A22     		movs	r2, #10
 411 0034 0892     		str	r2, [sp, #32]
 223:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 412              		.loc 1 223 0
 413 0036 0122     		movs	r2, #1
 414 0038 0B92     		str	r2, [sp, #44]
 224:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 415              		.loc 1 224 0
 416 003a 1021     		movs	r1, #16
 417 003c 0C91     		str	r1, [sp, #48]
 225:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 418              		.loc 1 225 0
 419 003e 0D92     		str	r2, [sp, #52]
 226:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 420              		.loc 1 226 0
 421 0040 0E93     		str	r3, [sp, #56]
 227:Src/main.c    ****   {
 422              		.loc 1 227 0
 423 0042 08A8     		add	r0, sp, #32
 424 0044 FFF7FEFF 		bl	HAL_RCC_OscConfig
 425              	.LVL27:
 426 0048 F0B9     		cbnz	r0, .L36
 234:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 427              		.loc 1 234 0
 428 004a 0F23     		movs	r3, #15
 429 004c 0393     		str	r3, [sp, #12]
 236:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 430              		.loc 1 236 0
 431 004e 0021     		movs	r1, #0
 432 0050 0491     		str	r1, [sp, #16]
 237:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 433              		.loc 1 237 0
 434 0052 0591     		str	r1, [sp, #20]
 238:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 435              		.loc 1 238 0
 436 0054 0691     		str	r1, [sp, #24]
 239:Src/main.c    **** 
 437              		.loc 1 239 0
 438 0056 0791     		str	r1, [sp, #28]
ARM GAS  /tmp/ccs3dBSp.s 			page 16


 241:Src/main.c    ****   {
 439              		.loc 1 241 0
 440 0058 03A8     		add	r0, sp, #12
 441 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 442              	.LVL28:
 443 005e B8B9     		cbnz	r0, .L37
 248:Src/main.c    **** 
 444              		.loc 1 248 0
 445 0060 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 446              	.LVL29:
 447 0064 0E4B     		ldr	r3, .L38+8
 448 0066 A3FB0030 		umull	r3, r0, r3, r0
 449 006a 8009     		lsrs	r0, r0, #6
 450 006c FFF7FEFF 		bl	HAL_SYSTICK_Config
 451              	.LVL30:
 252:Src/main.c    **** 
 452              		.loc 1 252 0
 453 0070 0420     		movs	r0, #4
 454 0072 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 455              	.LVL31:
 255:Src/main.c    **** }
 456              		.loc 1 255 0
 457 0076 0022     		movs	r2, #0
 458 0078 1146     		mov	r1, r2
 459 007a 4FF0FF30 		mov	r0, #-1
 460 007e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 461              	.LVL32:
 256:Src/main.c    **** 
 462              		.loc 1 256 0
 463 0082 15B0     		add	sp, sp, #84
 464              	.LCFI11:
 465              		.cfi_remember_state
 466              		.cfi_def_cfa_offset 4
 467              		@ sp needed
 468 0084 5DF804FB 		ldr	pc, [sp], #4
 469              	.L36:
 470              	.LCFI12:
 471              		.cfi_restore_state
 229:Src/main.c    ****   }
 472              		.loc 1 229 0
 473 0088 E521     		movs	r1, #229
 474 008a 0648     		ldr	r0, .L38+12
 475 008c FFF7FEFF 		bl	_Error_Handler
 476              	.LVL33:
 477              	.L37:
 243:Src/main.c    ****   }
 478              		.loc 1 243 0
 479 0090 F321     		movs	r1, #243
 480 0092 0448     		ldr	r0, .L38+12
 481 0094 FFF7FEFF 		bl	_Error_Handler
 482              	.LVL34:
 483              	.L39:
 484              		.align	2
 485              	.L38:
 486 0098 00380240 		.word	1073887232
 487 009c 00700040 		.word	1073770496
 488 00a0 D34D6210 		.word	274877907
ARM GAS  /tmp/ccs3dBSp.s 			page 17


 489 00a4 00000000 		.word	.LC0
 490              		.cfi_endproc
 491              	.LFE125:
 493              		.section	.text.main,"ax",%progbits
 494              		.align	1
 495              		.global	main
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu fpv4-sp-d16
 501              	main:
 502              	.LFB123:
  78:Src/main.c    **** 
 503              		.loc 1 78 0
 504              		.cfi_startproc
 505              		@ Volatile: function does not return.
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508 0000 08B5     		push	{r3, lr}
 509              	.LCFI13:
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 3, -8
 512              		.cfi_offset 14, -4
  87:Src/main.c    **** 
 513              		.loc 1 87 0
 514 0002 FFF7FEFF 		bl	HAL_Init
 515              	.LVL35:
  94:Src/main.c    **** 
 516              		.loc 1 94 0
 517 0006 FFF7FEFF 		bl	SystemClock_Config
 518              	.LVL36:
 101:Src/main.c    ****   /*MX_IWDG_Init();*/
 519              		.loc 1 101 0
 520 000a FFF7FEFF 		bl	MX_GPIO_Init
 521              	.LVL37:
 107:Src/main.c    ****   {
 522              		.loc 1 107 0
 523 000e 1C4B     		ldr	r3, .L46
 524 0010 5B6F     		ldr	r3, [r3, #116]
 525 0012 13F0005F 		tst	r3, #536870912
 526 0016 28D0     		beq	.L41
 109:Src/main.c    **** 
 527              		.loc 1 109 0
 528 0018 0122     		movs	r2, #1
 529 001a 0821     		movs	r1, #8
 530 001c 1948     		ldr	r0, .L46+4
 531 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 532              	.LVL38:
 112:Src/main.c    ****   }
 533              		.loc 1 112 0
 534 0022 174A     		ldr	r2, .L46
 535 0024 536F     		ldr	r3, [r2, #116]
 536 0026 43F08073 		orr	r3, r3, #16777216
 537 002a 5367     		str	r3, [r2, #116]
 538              	.L42:
 120:Src/main.c    **** 
 539              		.loc 1 120 0
ARM GAS  /tmp/ccs3dBSp.s 			page 18


 540 002c FFF7FEFF 		bl	GetLSIFrequency
 541              	.LVL39:
 542 0030 154B     		ldr	r3, .L46+8
 543 0032 1860     		str	r0, [r3]
 129:Src/main.c    ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_32;
 544              		.loc 1 129 0
 545 0034 1548     		ldr	r0, .L46+12
 546 0036 164A     		ldr	r2, .L46+16
 547 0038 0260     		str	r2, [r0]
 130:Src/main.c    ****   hiwdg.Init.Reload = uwLsiFreq / 128;
 548              		.loc 1 130 0
 549 003a 0322     		movs	r2, #3
 550 003c 4260     		str	r2, [r0, #4]
 131:Src/main.c    **** 
 551              		.loc 1 131 0
 552 003e 1B68     		ldr	r3, [r3]
 553 0040 DB09     		lsrs	r3, r3, #7
 554 0042 8360     		str	r3, [r0, #8]
 133:Src/main.c    ****   {
 555              		.loc 1 133 0
 556 0044 FFF7FEFF 		bl	HAL_IWDG_Init
 557              	.LVL40:
 558 0048 A8B9     		cbnz	r0, .L45
 559              	.L43:
 154:Src/main.c    **** 
 560              		.loc 1 154 0
 561 004a 0421     		movs	r1, #4
 562 004c 0D48     		ldr	r0, .L46+4
 563 004e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 564              	.LVL41:
 157:Src/main.c    **** 
 565              		.loc 1 157 0
 566 0052 F020     		movs	r0, #240
 567 0054 FFF7FEFF 		bl	HAL_Delay
 568              	.LVL42:
 160:Src/main.c    ****     {
 569              		.loc 1 160 0
 570 0058 0C48     		ldr	r0, .L46+12
 571 005a FFF7FEFF 		bl	HAL_IWDG_Refresh
 572              	.LVL43:
 573 005e 0028     		cmp	r0, #0
 574 0060 F3D0     		beq	.L43
 162:Src/main.c    ****     }  
 575              		.loc 1 162 0
 576 0062 A221     		movs	r1, #162
 577 0064 0B48     		ldr	r0, .L46+20
 578 0066 FFF7FEFF 		bl	_Error_Handler
 579              	.LVL44:
 580              	.L41:
 116:Src/main.c    ****   }
 581              		.loc 1 116 0
 582 006a 0022     		movs	r2, #0
 583 006c 0821     		movs	r1, #8
 584 006e 0548     		ldr	r0, .L46+4
 585 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 586              	.LVL45:
 587 0074 DAE7     		b	.L42
ARM GAS  /tmp/ccs3dBSp.s 			page 19


 588              	.L45:
 135:Src/main.c    ****   }  
 589              		.loc 1 135 0
 590 0076 8721     		movs	r1, #135
 591 0078 0648     		ldr	r0, .L46+20
 592 007a FFF7FEFF 		bl	_Error_Handler
 593              	.LVL46:
 594              	.L47:
 595 007e 00BF     		.align	2
 596              	.L46:
 597 0080 00380240 		.word	1073887232
 598 0084 00140240 		.word	1073878016
 599 0088 00000000 		.word	.LANCHOR3
 600 008c 00000000 		.word	hiwdg
 601 0090 00300040 		.word	1073754112
 602 0094 00000000 		.word	.LC0
 603              		.cfi_endproc
 604              	.LFE123:
 606              		.section	.text.assert_failed,"ax",%progbits
 607              		.align	1
 608              		.global	assert_failed
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 612              		.fpu fpv4-sp-d16
 614              	assert_failed:
 615              	.LFB129:
 378:Src/main.c    **** 
 379:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 380:Src/main.c    ****   while(1) 
 381:Src/main.c    ****   {
 382:Src/main.c    ****   }
 383:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 384:Src/main.c    **** }
 385:Src/main.c    **** 
 386:Src/main.c    **** #ifdef USE_FULL_ASSERT
 387:Src/main.c    **** 
 388:Src/main.c    **** /**
 389:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 390:Src/main.c    ****    * where the assert_param error has occurred.
 391:Src/main.c    ****    * @param file: pointer to the source file name
 392:Src/main.c    ****    * @param line: assert_param error line source number
 393:Src/main.c    ****    * @retval None
 394:Src/main.c    ****    */
 395:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 396:Src/main.c    **** {
 616              		.loc 1 396 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621              	.LVL47:
 622 0000 7047     		bx	lr
 623              		.cfi_endproc
 624              	.LFE129:
 626              		.global	uwMeasurementDone
 627              		.global	uwPeriodValue
ARM GAS  /tmp/ccs3dBSp.s 			page 20


 628              		.global	uwCaptureNumber
 629              		.comm	htim5,60,4
 630              		.comm	hiwdg,12,4
 631              		.section	.bss.uwCaptureNumber,"aw",%nobits
 632              		.align	2
 633              		.set	.LANCHOR1,. + 0
 636              	uwCaptureNumber:
 637 0000 00000000 		.space	4
 638              		.section	.bss.uwLsiFreq,"aw",%nobits
 639              		.align	2
 640              		.set	.LANCHOR3,. + 0
 643              	uwLsiFreq:
 644 0000 00000000 		.space	4
 645              		.section	.bss.uwMeasurementDone,"aw",%nobits
 646              		.align	2
 647              		.set	.LANCHOR0,. + 0
 650              	uwMeasurementDone:
 651 0000 00000000 		.space	4
 652              		.section	.bss.uwPeriodValue,"aw",%nobits
 653              		.align	2
 654              		.set	.LANCHOR2,. + 0
 657              	uwPeriodValue:
 658 0000 00000000 		.space	4
 659              		.section	.rodata.MX_TIM5_Init.str1.4,"aMS",%progbits,1
 660              		.align	2
 661              	.LC0:
 662 0000 5372632F 		.ascii	"Src/main.c\000"
 662      6D61696E 
 662      2E6300
 663              		.text
 664              	.Letext0:
 665              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 666              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 667              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 668              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 669              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 670              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 671              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 672              		.file 9 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 673              		.file 10 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 674              		.file 11 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 675              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 676              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 677              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 678              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 679              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 680              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_iwdg.h"
 681              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 682              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 683              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 684              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccs3dBSp.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccs3dBSp.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccs3dBSp.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccs3dBSp.s:117    .text.MX_GPIO_Init:0000000000000074 $d
     /tmp/ccs3dBSp.s:124    .text._Error_Handler:0000000000000000 $t
     /tmp/ccs3dBSp.s:131    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccs3dBSp.s:157    .text._Error_Handler:0000000000000010 $d
     /tmp/ccs3dBSp.s:162    .text.MX_TIM5_Init:0000000000000000 $t
     /tmp/ccs3dBSp.s:168    .text.MX_TIM5_Init:0000000000000000 MX_TIM5_Init
     /tmp/ccs3dBSp.s:295    .text.MX_TIM5_Init:00000000000000ac $d
                            *COM*:000000000000003c htim5
     /tmp/ccs3dBSp.s:302    .text.GetLSIFrequency:0000000000000000 $t
     /tmp/ccs3dBSp.s:308    .text.GetLSIFrequency:0000000000000000 GetLSIFrequency
     /tmp/ccs3dBSp.s:355    .text.GetLSIFrequency:0000000000000034 $d
     /tmp/ccs3dBSp.s:364    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccs3dBSp.s:371    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccs3dBSp.s:486    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccs3dBSp.s:494    .text.main:0000000000000000 $t
     /tmp/ccs3dBSp.s:501    .text.main:0000000000000000 main
     /tmp/ccs3dBSp.s:597    .text.main:0000000000000080 $d
                            *COM*:000000000000000c hiwdg
     /tmp/ccs3dBSp.s:607    .text.assert_failed:0000000000000000 $t
     /tmp/ccs3dBSp.s:614    .text.assert_failed:0000000000000000 assert_failed
     /tmp/ccs3dBSp.s:650    .bss.uwMeasurementDone:0000000000000000 uwMeasurementDone
     /tmp/ccs3dBSp.s:657    .bss.uwPeriodValue:0000000000000000 uwPeriodValue
     /tmp/ccs3dBSp.s:636    .bss.uwCaptureNumber:0000000000000000 uwCaptureNumber
     /tmp/ccs3dBSp.s:632    .bss.uwCaptureNumber:0000000000000000 $d
     /tmp/ccs3dBSp.s:639    .bss.uwLsiFreq:0000000000000000 $d
     /tmp/ccs3dBSp.s:643    .bss.uwLsiFreq:0000000000000000 uwLsiFreq
     /tmp/ccs3dBSp.s:646    .bss.uwMeasurementDone:0000000000000000 $d
     /tmp/ccs3dBSp.s:653    .bss.uwPeriodValue:0000000000000000 $d
     /tmp/ccs3dBSp.s:660    .rodata.MX_TIM5_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_IC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_IC_ConfigChannel
HAL_TIMEx_RemapConfig
HAL_TIM_IC_DeInit
HAL_RCC_GetPCLK1Freq
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
HAL_IWDG_Init
HAL_GPIO_TogglePin
HAL_Delay
ARM GAS  /tmp/ccs3dBSp.s 			page 22


HAL_IWDG_Refresh
