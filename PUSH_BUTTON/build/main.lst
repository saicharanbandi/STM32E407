ARM GAS  /tmp/ccoIMV5Y.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB125:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccoIMV5Y.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** static void MX_GPIO_Init(void);
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** int main(void)
  68:Src/main.c    **** {
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE END 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Src/main.c    ****   HAL_Init();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE BEGIN Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Configure the system clock */
  84:Src/main.c    ****   SystemClock_Config();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END SysInit */
  89:Src/main.c    **** 
ARM GAS  /tmp/ccoIMV5Y.s 			page 3


  90:Src/main.c    ****   /* Initialize all configured peripherals */
  91:Src/main.c    ****   MX_GPIO_Init();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN 2 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END 2 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Infinite loop */
  98:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  99:Src/main.c    ****   while (1)
 100:Src/main.c    ****   {
 101:Src/main.c    ****   /* USER CODE END WHILE */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE BEGIN 3 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   }
 106:Src/main.c    ****   /* USER CODE END 3 */
 107:Src/main.c    **** 
 108:Src/main.c    **** }
 109:Src/main.c    **** 
 110:Src/main.c    **** /** System Clock Configuration
 111:Src/main.c    **** */
 112:Src/main.c    **** void SystemClock_Config(void)
 113:Src/main.c    **** {
 114:Src/main.c    **** 
 115:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 116:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 117:Src/main.c    **** 
 118:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 119:Src/main.c    ****     */
 120:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 121:Src/main.c    **** 
 122:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 123:Src/main.c    **** 
 124:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 125:Src/main.c    ****     */
 126:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 127:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 128:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 130:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131:Src/main.c    ****   {
 132:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 133:Src/main.c    ****   }
 134:Src/main.c    **** 
 135:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 136:Src/main.c    ****     */
 137:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 138:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 139:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 140:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 142:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143:Src/main.c    **** 
 144:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 145:Src/main.c    ****   {
 146:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  /tmp/ccoIMV5Y.s 			page 4


 147:Src/main.c    ****   }
 148:Src/main.c    **** 
 149:Src/main.c    ****     /**Configure the Systick interrupt time 
 150:Src/main.c    ****     */
 151:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 152:Src/main.c    **** 
 153:Src/main.c    ****     /**Configure the Systick 
 154:Src/main.c    ****     */
 155:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 158:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 159:Src/main.c    **** }
 160:Src/main.c    **** 
 161:Src/main.c    **** /** Configure pins as 
 162:Src/main.c    ****         * Analog 
 163:Src/main.c    ****         * Input 
 164:Src/main.c    ****         * Output
 165:Src/main.c    ****         * EVENT_OUT
 166:Src/main.c    ****         * EXTI
 167:Src/main.c    **** */
 168:Src/main.c    **** static void MX_GPIO_Init(void)
 169:Src/main.c    **** {
  27              		.loc 1 169 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 4, -24
  35              		.cfi_offset 5, -20
  36              		.cfi_offset 6, -16
  37              		.cfi_offset 7, -12
  38              		.cfi_offset 8, -8
  39              		.cfi_offset 14, -4
  40 0004 88B0     		sub	sp, sp, #32
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 56
  43              	.LBB2:
 170:Src/main.c    **** 
 171:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 172:Src/main.c    **** 
 173:Src/main.c    ****   /* GPIO Ports Clock Enable */
 174:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  44              		.loc 1 174 0
  45 0006 0024     		movs	r4, #0
  46 0008 0194     		str	r4, [sp, #4]
  47 000a 294B     		ldr	r3, .L3
  48 000c 1A6B     		ldr	r2, [r3, #48]
  49 000e 42F02002 		orr	r2, r2, #32
  50 0012 1A63     		str	r2, [r3, #48]
  51 0014 1A6B     		ldr	r2, [r3, #48]
  52 0016 02F02002 		and	r2, r2, #32
  53 001a 0192     		str	r2, [sp, #4]
  54 001c 019A     		ldr	r2, [sp, #4]
  55              	.LBE2:
ARM GAS  /tmp/ccoIMV5Y.s 			page 5


  56              	.LBB3:
 175:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  57              		.loc 1 175 0
  58 001e 0294     		str	r4, [sp, #8]
  59 0020 1A6B     		ldr	r2, [r3, #48]
  60 0022 42F00102 		orr	r2, r2, #1
  61 0026 1A63     		str	r2, [r3, #48]
  62 0028 1B6B     		ldr	r3, [r3, #48]
  63 002a 03F00103 		and	r3, r3, #1
  64 002e 0293     		str	r3, [sp, #8]
  65 0030 029B     		ldr	r3, [sp, #8]
  66              	.LBE3:
 176:Src/main.c    **** 
 177:Src/main.c    ****   /*Configure GPIO pin Output Level */
 178:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, LED_Green_Pin|LED_Red_Pin, GPIO_PIN_RESET);
  67              		.loc 1 178 0
  68 0032 204D     		ldr	r5, .L3+4
  69 0034 2246     		mov	r2, r4
  70 0036 2421     		movs	r1, #36
  71 0038 2846     		mov	r0, r5
  72 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
  73              	.LVL0:
 179:Src/main.c    **** 
 180:Src/main.c    ****   /*Configure GPIO pin : PUSH_BUTTON_Pin */
 181:Src/main.c    ****   GPIO_InitStruct.Pin = PUSH_BUTTON_Pin;
  74              		.loc 1 181 0
  75 003e 4FF00208 		mov	r8, #2
  76 0042 CDF80C80 		str	r8, [sp, #12]
 182:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  77              		.loc 1 182 0
  78 0046 1C4F     		ldr	r7, .L3+8
  79 0048 0497     		str	r7, [sp, #16]
 183:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  80              		.loc 1 183 0
  81 004a 0594     		str	r4, [sp, #20]
 184:Src/main.c    ****   HAL_GPIO_Init(PUSH_BUTTON_GPIO_Port, &GPIO_InitStruct);
  82              		.loc 1 184 0
  83 004c 03A9     		add	r1, sp, #12
  84 004e 2846     		mov	r0, r5
  85 0050 FFF7FEFF 		bl	HAL_GPIO_Init
  86              	.LVL1:
 185:Src/main.c    **** 
 186:Src/main.c    ****   /*Configure GPIO pin : LED_Green_Pin */
 187:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Green_Pin;
  87              		.loc 1 187 0
  88 0054 0423     		movs	r3, #4
  89 0056 0393     		str	r3, [sp, #12]
 188:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  90              		.loc 1 188 0
  91 0058 0126     		movs	r6, #1
  92 005a 0496     		str	r6, [sp, #16]
 189:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  93              		.loc 1 189 0
  94 005c 0594     		str	r4, [sp, #20]
 190:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  95              		.loc 1 190 0
  96 005e 0694     		str	r4, [sp, #24]
ARM GAS  /tmp/ccoIMV5Y.s 			page 6


 191:Src/main.c    ****   HAL_GPIO_Init(LED_Green_GPIO_Port, &GPIO_InitStruct);
  97              		.loc 1 191 0
  98 0060 03A9     		add	r1, sp, #12
  99 0062 2846     		mov	r0, r5
 100 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 101              	.LVL2:
 192:Src/main.c    **** 
 193:Src/main.c    ****   /*Configure GPIO pin : LED_Red_Pin */
 194:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Red_Pin;
 102              		.loc 1 194 0
 103 0068 2023     		movs	r3, #32
 104 006a 0393     		str	r3, [sp, #12]
 195:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 105              		.loc 1 195 0
 106 006c 0496     		str	r6, [sp, #16]
 196:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 107              		.loc 1 196 0
 108 006e CDF81480 		str	r8, [sp, #20]
 197:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 109              		.loc 1 197 0
 110 0072 0694     		str	r4, [sp, #24]
 198:Src/main.c    ****   HAL_GPIO_Init(LED_Red_GPIO_Port, &GPIO_InitStruct);
 111              		.loc 1 198 0
 112 0074 03A9     		add	r1, sp, #12
 113 0076 2846     		mov	r0, r5
 114 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 115              	.LVL3:
 199:Src/main.c    **** 
 200:Src/main.c    ****   /*Configure GPIO pin : WKUP_BUTTON_Pin */
 201:Src/main.c    ****   GPIO_InitStruct.Pin = WKUP_BUTTON_Pin;
 116              		.loc 1 201 0
 117 007c 0396     		str	r6, [sp, #12]
 202:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 118              		.loc 1 202 0
 119 007e 0497     		str	r7, [sp, #16]
 203:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 120              		.loc 1 203 0
 121 0080 0594     		str	r4, [sp, #20]
 204:Src/main.c    ****   HAL_GPIO_Init(WKUP_BUTTON_GPIO_Port, &GPIO_InitStruct);
 122              		.loc 1 204 0
 123 0082 03A9     		add	r1, sp, #12
 124 0084 0D48     		ldr	r0, .L3+12
 125 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL4:
 205:Src/main.c    **** 
 206:Src/main.c    ****   /* EXTI interrupt init*/
 207:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 127              		.loc 1 207 0
 128 008a 2246     		mov	r2, r4
 129 008c 2146     		mov	r1, r4
 130 008e 0620     		movs	r0, #6
 131 0090 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 132              	.LVL5:
 208:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 133              		.loc 1 208 0
 134 0094 0620     		movs	r0, #6
 135 0096 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
ARM GAS  /tmp/ccoIMV5Y.s 			page 7


 136              	.LVL6:
 209:Src/main.c    **** 
 210:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 137              		.loc 1 210 0
 138 009a 2246     		mov	r2, r4
 139 009c 2146     		mov	r1, r4
 140 009e 0720     		movs	r0, #7
 141 00a0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 142              	.LVL7:
 211:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 143              		.loc 1 211 0
 144 00a4 0720     		movs	r0, #7
 145 00a6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 146              	.LVL8:
 212:Src/main.c    **** 
 213:Src/main.c    **** }
 147              		.loc 1 213 0
 148 00aa 08B0     		add	sp, sp, #32
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 24
 151              		@ sp needed
 152 00ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 153              	.L4:
 154              		.align	2
 155              	.L3:
 156 00b0 00380240 		.word	1073887232
 157 00b4 00140240 		.word	1073878016
 158 00b8 00001110 		.word	269549568
 159 00bc 00000240 		.word	1073872896
 160              		.cfi_endproc
 161              	.LFE125:
 163              		.section	.text._Error_Handler,"ax",%progbits
 164              		.align	1
 165              		.global	_Error_Handler
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	_Error_Handler:
 172              	.LFB126:
 214:Src/main.c    **** 
 215:Src/main.c    **** /* USER CODE BEGIN 4 */
 216:Src/main.c    **** 
 217:Src/main.c    **** /* USER CODE END 4 */
 218:Src/main.c    **** 
 219:Src/main.c    **** /**
 220:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 221:Src/main.c    ****   * @param  None
 222:Src/main.c    ****   * @retval None
 223:Src/main.c    ****   */
 224:Src/main.c    **** void _Error_Handler(char * file, int line)
 225:Src/main.c    **** {
 173              		.loc 1 225 0
 174              		.cfi_startproc
 175              		@ Volatile: function does not return.
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccoIMV5Y.s 			page 8


 178              		@ link register save eliminated.
 179              	.LVL9:
 180              	.L6:
 181 0000 FEE7     		b	.L6
 182              		.cfi_endproc
 183              	.LFE126:
 185              		.section	.text.SystemClock_Config,"ax",%progbits
 186              		.align	1
 187              		.global	SystemClock_Config
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	SystemClock_Config:
 194              	.LFB124:
 113:Src/main.c    **** 
 195              		.loc 1 113 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 80
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 113:Src/main.c    **** 
 199              		.loc 1 113 0
 200 0000 00B5     		push	{lr}
 201              	.LCFI3:
 202              		.cfi_def_cfa_offset 4
 203              		.cfi_offset 14, -4
 204 0002 95B0     		sub	sp, sp, #84
 205              	.LCFI4:
 206              		.cfi_def_cfa_offset 88
 207              	.LBB4:
 120:Src/main.c    **** 
 208              		.loc 1 120 0
 209 0004 0023     		movs	r3, #0
 210 0006 0193     		str	r3, [sp, #4]
 211 0008 234A     		ldr	r2, .L13
 212 000a 116C     		ldr	r1, [r2, #64]
 213 000c 41F08051 		orr	r1, r1, #268435456
 214 0010 1164     		str	r1, [r2, #64]
 215 0012 126C     		ldr	r2, [r2, #64]
 216 0014 02F08052 		and	r2, r2, #268435456
 217 0018 0192     		str	r2, [sp, #4]
 218 001a 019A     		ldr	r2, [sp, #4]
 219              	.LBE4:
 220              	.LBB5:
 122:Src/main.c    **** 
 221              		.loc 1 122 0
 222 001c 0293     		str	r3, [sp, #8]
 223 001e 1F4A     		ldr	r2, .L13+4
 224 0020 1168     		ldr	r1, [r2]
 225 0022 41F48041 		orr	r1, r1, #16384
 226 0026 1160     		str	r1, [r2]
 227 0028 1268     		ldr	r2, [r2]
 228 002a 02F48042 		and	r2, r2, #16384
 229 002e 0292     		str	r2, [sp, #8]
 230 0030 029A     		ldr	r2, [sp, #8]
 231              	.LBE5:
 126:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  /tmp/ccoIMV5Y.s 			page 9


 232              		.loc 1 126 0
 233 0032 0222     		movs	r2, #2
 234 0034 0892     		str	r2, [sp, #32]
 127:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 235              		.loc 1 127 0
 236 0036 0122     		movs	r2, #1
 237 0038 0B92     		str	r2, [sp, #44]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 238              		.loc 1 128 0
 239 003a 1022     		movs	r2, #16
 240 003c 0C92     		str	r2, [sp, #48]
 129:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 241              		.loc 1 129 0
 242 003e 0E93     		str	r3, [sp, #56]
 130:Src/main.c    ****   {
 243              		.loc 1 130 0
 244 0040 08A8     		add	r0, sp, #32
 245 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 246              	.LVL10:
 247 0046 F0B9     		cbnz	r0, .L11
 137:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 248              		.loc 1 137 0
 249 0048 0F23     		movs	r3, #15
 250 004a 0393     		str	r3, [sp, #12]
 139:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 251              		.loc 1 139 0
 252 004c 0021     		movs	r1, #0
 253 004e 0491     		str	r1, [sp, #16]
 140:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 254              		.loc 1 140 0
 255 0050 0591     		str	r1, [sp, #20]
 141:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 256              		.loc 1 141 0
 257 0052 0691     		str	r1, [sp, #24]
 142:Src/main.c    **** 
 258              		.loc 1 142 0
 259 0054 0791     		str	r1, [sp, #28]
 144:Src/main.c    ****   {
 260              		.loc 1 144 0
 261 0056 03A8     		add	r0, sp, #12
 262 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 263              	.LVL11:
 264 005c B8B9     		cbnz	r0, .L12
 151:Src/main.c    **** 
 265              		.loc 1 151 0
 266 005e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 267              	.LVL12:
 268 0062 0F4B     		ldr	r3, .L13+8
 269 0064 A3FB0030 		umull	r3, r0, r3, r0
 270 0068 8009     		lsrs	r0, r0, #6
 271 006a FFF7FEFF 		bl	HAL_SYSTICK_Config
 272              	.LVL13:
 155:Src/main.c    **** 
 273              		.loc 1 155 0
 274 006e 0420     		movs	r0, #4
 275 0070 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 276              	.LVL14:
ARM GAS  /tmp/ccoIMV5Y.s 			page 10


 158:Src/main.c    **** }
 277              		.loc 1 158 0
 278 0074 0022     		movs	r2, #0
 279 0076 1146     		mov	r1, r2
 280 0078 4FF0FF30 		mov	r0, #-1
 281 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 282              	.LVL15:
 159:Src/main.c    **** 
 283              		.loc 1 159 0
 284 0080 15B0     		add	sp, sp, #84
 285              	.LCFI5:
 286              		.cfi_remember_state
 287              		.cfi_def_cfa_offset 4
 288              		@ sp needed
 289 0082 5DF804FB 		ldr	pc, [sp], #4
 290              	.L11:
 291              	.LCFI6:
 292              		.cfi_restore_state
 132:Src/main.c    ****   }
 293              		.loc 1 132 0
 294 0086 8421     		movs	r1, #132
 295 0088 0648     		ldr	r0, .L13+12
 296 008a FFF7FEFF 		bl	_Error_Handler
 297              	.LVL16:
 298              	.L12:
 146:Src/main.c    ****   }
 299              		.loc 1 146 0
 300 008e 9221     		movs	r1, #146
 301 0090 0448     		ldr	r0, .L13+12
 302 0092 FFF7FEFF 		bl	_Error_Handler
 303              	.LVL17:
 304              	.L14:
 305 0096 00BF     		.align	2
 306              	.L13:
 307 0098 00380240 		.word	1073887232
 308 009c 00700040 		.word	1073770496
 309 00a0 D34D6210 		.word	274877907
 310 00a4 00000000 		.word	.LC0
 311              		.cfi_endproc
 312              	.LFE124:
 314              		.section	.text.main,"ax",%progbits
 315              		.align	1
 316              		.global	main
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	main:
 323              	.LFB123:
  68:Src/main.c    **** 
 324              		.loc 1 68 0
 325              		.cfi_startproc
 326              		@ Volatile: function does not return.
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329 0000 08B5     		push	{r3, lr}
 330              	.LCFI7:
ARM GAS  /tmp/ccoIMV5Y.s 			page 11


 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 3, -8
 333              		.cfi_offset 14, -4
  77:Src/main.c    **** 
 334              		.loc 1 77 0
 335 0002 FFF7FEFF 		bl	HAL_Init
 336              	.LVL18:
  84:Src/main.c    **** 
 337              		.loc 1 84 0
 338 0006 FFF7FEFF 		bl	SystemClock_Config
 339              	.LVL19:
  91:Src/main.c    **** 
 340              		.loc 1 91 0
 341 000a FFF7FEFF 		bl	MX_GPIO_Init
 342              	.LVL20:
 343              	.L16:
 344 000e FEE7     		b	.L16
 345              		.cfi_endproc
 346              	.LFE123:
 348              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 349              		.align	2
 350              	.LC0:
 351 0000 5372632F 		.ascii	"Src/main.c\000"
 351      6D61696E 
 351      2E6300
 352              		.text
 353              	.Letext0:
 354              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 355              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 356              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 357              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 358              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 359              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 360              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 361              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 362              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 363              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 364              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 365              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 366              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 367              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 368              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccoIMV5Y.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccoIMV5Y.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccoIMV5Y.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccoIMV5Y.s:156    .text.MX_GPIO_Init:00000000000000b0 $d
     /tmp/ccoIMV5Y.s:164    .text._Error_Handler:0000000000000000 $t
     /tmp/ccoIMV5Y.s:171    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccoIMV5Y.s:186    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccoIMV5Y.s:193    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccoIMV5Y.s:307    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccoIMV5Y.s:315    .text.main:0000000000000000 $t
     /tmp/ccoIMV5Y.s:322    .text.main:0000000000000000 main
     /tmp/ccoIMV5Y.s:349    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
