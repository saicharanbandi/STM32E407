ARM GAS  /tmp/ccjME77C.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB125:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccjME77C.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** static void MX_GPIO_Init(void);
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** int main(void)
  68:Src/main.c    **** {
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE END 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Src/main.c    ****   HAL_Init();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE BEGIN Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Configure the system clock */
  84:Src/main.c    ****   SystemClock_Config();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END SysInit */
  89:Src/main.c    **** 
ARM GAS  /tmp/ccjME77C.s 			page 3


  90:Src/main.c    ****   /* Initialize all configured peripherals */
  91:Src/main.c    ****   MX_GPIO_Init();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN 2 */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END 2 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Infinite loop */
  98:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  99:Src/main.c    ****   while (1)
 100:Src/main.c    ****   {
 101:Src/main.c    ****   /* USER CODE END WHILE */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE BEGIN 3 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   }
 106:Src/main.c    ****   /* USER CODE END 3 */
 107:Src/main.c    **** 
 108:Src/main.c    **** }
 109:Src/main.c    **** 
 110:Src/main.c    **** /** System Clock Configuration
 111:Src/main.c    **** */
 112:Src/main.c    **** void SystemClock_Config(void)
 113:Src/main.c    **** {
 114:Src/main.c    **** 
 115:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 116:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 117:Src/main.c    **** 
 118:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 119:Src/main.c    ****     */
 120:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 121:Src/main.c    **** 
 122:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 123:Src/main.c    **** 
 124:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 125:Src/main.c    ****     */
 126:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 127:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 128:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 130:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131:Src/main.c    ****   {
 132:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 133:Src/main.c    ****   }
 134:Src/main.c    **** 
 135:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 136:Src/main.c    ****     */
 137:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 138:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 139:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 140:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 142:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143:Src/main.c    **** 
 144:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 145:Src/main.c    ****   {
 146:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
ARM GAS  /tmp/ccjME77C.s 			page 4


 147:Src/main.c    ****   }
 148:Src/main.c    **** 
 149:Src/main.c    ****     /**Configure the Systick interrupt time 
 150:Src/main.c    ****     */
 151:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 152:Src/main.c    **** 
 153:Src/main.c    ****     /**Configure the Systick 
 154:Src/main.c    ****     */
 155:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 156:Src/main.c    **** 
 157:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 158:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 159:Src/main.c    **** }
 160:Src/main.c    **** 
 161:Src/main.c    **** /** Configure pins as 
 162:Src/main.c    ****         * Analog 
 163:Src/main.c    ****         * Input 
 164:Src/main.c    ****         * Output
 165:Src/main.c    ****         * EVENT_OUT
 166:Src/main.c    ****         * EXTI
 167:Src/main.c    **** */
 168:Src/main.c    **** static void MX_GPIO_Init(void)
 169:Src/main.c    **** {
  27              		.loc 1 169 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
  42              	.LBB2:
 170:Src/main.c    **** 
 171:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 172:Src/main.c    **** 
 173:Src/main.c    ****   /* GPIO Ports Clock Enable */
 174:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  43              		.loc 1 174 0
  44 0004 0024     		movs	r4, #0
  45 0006 0094     		str	r4, [sp]
  46 0008 304B     		ldr	r3, .L3
  47 000a 1A6B     		ldr	r2, [r3, #48]
  48 000c 42F00402 		orr	r2, r2, #4
  49 0010 1A63     		str	r2, [r3, #48]
  50 0012 1A6B     		ldr	r2, [r3, #48]
  51 0014 02F00402 		and	r2, r2, #4
  52 0018 0092     		str	r2, [sp]
  53 001a 009A     		ldr	r2, [sp]
  54              	.LBE2:
  55              	.LBB3:
ARM GAS  /tmp/ccjME77C.s 			page 5


 175:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  56              		.loc 1 175 0
  57 001c 0194     		str	r4, [sp, #4]
  58 001e 1A6B     		ldr	r2, [r3, #48]
  59 0020 42F02002 		orr	r2, r2, #32
  60 0024 1A63     		str	r2, [r3, #48]
  61 0026 1A6B     		ldr	r2, [r3, #48]
  62 0028 02F02002 		and	r2, r2, #32
  63 002c 0192     		str	r2, [sp, #4]
  64 002e 019A     		ldr	r2, [sp, #4]
  65              	.LBE3:
  66              	.LBB4:
 176:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  67              		.loc 1 176 0
  68 0030 0294     		str	r4, [sp, #8]
  69 0032 1A6B     		ldr	r2, [r3, #48]
  70 0034 42F00102 		orr	r2, r2, #1
  71 0038 1A63     		str	r2, [r3, #48]
  72 003a 1B6B     		ldr	r3, [r3, #48]
  73 003c 03F00103 		and	r3, r3, #1
  74 0040 0293     		str	r3, [sp, #8]
  75 0042 029B     		ldr	r3, [sp, #8]
  76              	.LBE4:
 177:Src/main.c    **** 
 178:Src/main.c    ****   /*Configure GPIO pin Output Level */
 179:Src/main.c    ****   HAL_GPIO_WritePin(LED_User_GPIO_Port, LED_User_Pin, GPIO_PIN_RESET);
  77              		.loc 1 179 0
  78 0044 224F     		ldr	r7, .L3+4
  79 0046 2246     		mov	r2, r4
  80 0048 4FF40051 		mov	r1, #8192
  81 004c 3846     		mov	r0, r7
  82 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
 180:Src/main.c    **** 
 181:Src/main.c    ****   /*Configure GPIO pin Output Level */
 182:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, LED_Green_Pin|LED_Red_Pin, GPIO_PIN_RESET);
  84              		.loc 1 182 0
  85 0052 204E     		ldr	r6, .L3+8
  86 0054 2246     		mov	r2, r4
  87 0056 2421     		movs	r1, #36
  88 0058 3046     		mov	r0, r6
  89 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
  90              	.LVL1:
 183:Src/main.c    **** 
 184:Src/main.c    ****   /*Configure GPIO pin : LED_User_Pin */
 185:Src/main.c    ****   GPIO_InitStruct.Pin = LED_User_Pin;
  91              		.loc 1 185 0
  92 005e 4FF40053 		mov	r3, #8192
  93 0062 0393     		str	r3, [sp, #12]
 186:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  94              		.loc 1 186 0
  95 0064 0125     		movs	r5, #1
  96 0066 0495     		str	r5, [sp, #16]
 187:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 187 0
  98 0068 0594     		str	r4, [sp, #20]
 188:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccjME77C.s 			page 6


  99              		.loc 1 188 0
 100 006a 0694     		str	r4, [sp, #24]
 189:Src/main.c    ****   HAL_GPIO_Init(LED_User_GPIO_Port, &GPIO_InitStruct);
 101              		.loc 1 189 0
 102 006c 03A9     		add	r1, sp, #12
 103 006e 3846     		mov	r0, r7
 104 0070 FFF7FEFF 		bl	HAL_GPIO_Init
 105              	.LVL2:
 190:Src/main.c    **** 
 191:Src/main.c    ****   /*Configure GPIO pin : PUSH_BUTTON_Pin */
 192:Src/main.c    ****   GPIO_InitStruct.Pin = PUSH_BUTTON_Pin;
 106              		.loc 1 192 0
 107 0074 0223     		movs	r3, #2
 108 0076 0393     		str	r3, [sp, #12]
 193:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 109              		.loc 1 193 0
 110 0078 174F     		ldr	r7, .L3+12
 111 007a 0497     		str	r7, [sp, #16]
 194:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 194 0
 113 007c 0594     		str	r4, [sp, #20]
 195:Src/main.c    ****   HAL_GPIO_Init(PUSH_BUTTON_GPIO_Port, &GPIO_InitStruct);
 114              		.loc 1 195 0
 115 007e 03A9     		add	r1, sp, #12
 116 0080 3046     		mov	r0, r6
 117 0082 FFF7FEFF 		bl	HAL_GPIO_Init
 118              	.LVL3:
 196:Src/main.c    **** 
 197:Src/main.c    ****   /*Configure GPIO pins : LED_Green_Pin LED_Red_Pin */
 198:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Green_Pin|LED_Red_Pin;
 119              		.loc 1 198 0
 120 0086 2423     		movs	r3, #36
 121 0088 0393     		str	r3, [sp, #12]
 199:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 122              		.loc 1 199 0
 123 008a 0495     		str	r5, [sp, #16]
 200:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 124              		.loc 1 200 0
 125 008c 0594     		str	r4, [sp, #20]
 201:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 126              		.loc 1 201 0
 127 008e 0694     		str	r4, [sp, #24]
 202:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 128              		.loc 1 202 0
 129 0090 03A9     		add	r1, sp, #12
 130 0092 3046     		mov	r0, r6
 131 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 132              	.LVL4:
 203:Src/main.c    **** 
 204:Src/main.c    ****   /*Configure GPIO pin : WKUP_BUTTON_Pin */
 205:Src/main.c    ****   GPIO_InitStruct.Pin = WKUP_BUTTON_Pin;
 133              		.loc 1 205 0
 134 0098 0395     		str	r5, [sp, #12]
 206:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 135              		.loc 1 206 0
 136 009a 0497     		str	r7, [sp, #16]
 207:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccjME77C.s 			page 7


 137              		.loc 1 207 0
 138 009c 0594     		str	r4, [sp, #20]
 208:Src/main.c    ****   HAL_GPIO_Init(WKUP_BUTTON_GPIO_Port, &GPIO_InitStruct);
 139              		.loc 1 208 0
 140 009e 03A9     		add	r1, sp, #12
 141 00a0 0E48     		ldr	r0, .L3+16
 142 00a2 FFF7FEFF 		bl	HAL_GPIO_Init
 143              	.LVL5:
 209:Src/main.c    **** 
 210:Src/main.c    ****   /* EXTI interrupt init*/
 211:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 144              		.loc 1 211 0
 145 00a6 2246     		mov	r2, r4
 146 00a8 2146     		mov	r1, r4
 147 00aa 0620     		movs	r0, #6
 148 00ac FFF7FEFF 		bl	HAL_NVIC_SetPriority
 149              	.LVL6:
 212:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 150              		.loc 1 212 0
 151 00b0 0620     		movs	r0, #6
 152 00b2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 153              	.LVL7:
 213:Src/main.c    **** 
 214:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI1_IRQn, 0, 0);
 154              		.loc 1 214 0
 155 00b6 2246     		mov	r2, r4
 156 00b8 2146     		mov	r1, r4
 157 00ba 0720     		movs	r0, #7
 158 00bc FFF7FEFF 		bl	HAL_NVIC_SetPriority
 159              	.LVL8:
 215:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 160              		.loc 1 215 0
 161 00c0 0720     		movs	r0, #7
 162 00c2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 163              	.LVL9:
 216:Src/main.c    **** 
 217:Src/main.c    **** }
 164              		.loc 1 217 0
 165 00c6 09B0     		add	sp, sp, #36
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 20
 168              		@ sp needed
 169 00c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 170              	.L4:
 171 00ca 00BF     		.align	2
 172              	.L3:
 173 00cc 00380240 		.word	1073887232
 174 00d0 00080240 		.word	1073874944
 175 00d4 00140240 		.word	1073878016
 176 00d8 00001110 		.word	269549568
 177 00dc 00000240 		.word	1073872896
 178              		.cfi_endproc
 179              	.LFE125:
 181              		.section	.text._Error_Handler,"ax",%progbits
 182              		.align	1
 183              		.global	_Error_Handler
 184              		.syntax unified
ARM GAS  /tmp/ccjME77C.s 			page 8


 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	_Error_Handler:
 190              	.LFB126:
 218:Src/main.c    **** 
 219:Src/main.c    **** /* USER CODE BEGIN 4 */
 220:Src/main.c    **** 
 221:Src/main.c    **** /* USER CODE END 4 */
 222:Src/main.c    **** 
 223:Src/main.c    **** /**
 224:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 225:Src/main.c    ****   * @param  None
 226:Src/main.c    ****   * @retval None
 227:Src/main.c    ****   */
 228:Src/main.c    **** void _Error_Handler(char * file, int line)
 229:Src/main.c    **** {
 191              		.loc 1 229 0
 192              		.cfi_startproc
 193              		@ Volatile: function does not return.
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LVL10:
 198              	.L6:
 199 0000 FEE7     		b	.L6
 200              		.cfi_endproc
 201              	.LFE126:
 203              		.section	.text.SystemClock_Config,"ax",%progbits
 204              		.align	1
 205              		.global	SystemClock_Config
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu fpv4-sp-d16
 211              	SystemClock_Config:
 212              	.LFB124:
 113:Src/main.c    **** 
 213              		.loc 1 113 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 80
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 113:Src/main.c    **** 
 217              		.loc 1 113 0
 218 0000 00B5     		push	{lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 14, -4
 222 0002 95B0     		sub	sp, sp, #84
 223              	.LCFI4:
 224              		.cfi_def_cfa_offset 88
 225              	.LBB5:
 120:Src/main.c    **** 
 226              		.loc 1 120 0
 227 0004 0023     		movs	r3, #0
 228 0006 0193     		str	r3, [sp, #4]
 229 0008 234A     		ldr	r2, .L13
ARM GAS  /tmp/ccjME77C.s 			page 9


 230 000a 116C     		ldr	r1, [r2, #64]
 231 000c 41F08051 		orr	r1, r1, #268435456
 232 0010 1164     		str	r1, [r2, #64]
 233 0012 126C     		ldr	r2, [r2, #64]
 234 0014 02F08052 		and	r2, r2, #268435456
 235 0018 0192     		str	r2, [sp, #4]
 236 001a 019A     		ldr	r2, [sp, #4]
 237              	.LBE5:
 238              	.LBB6:
 122:Src/main.c    **** 
 239              		.loc 1 122 0
 240 001c 0293     		str	r3, [sp, #8]
 241 001e 1F4A     		ldr	r2, .L13+4
 242 0020 1168     		ldr	r1, [r2]
 243 0022 41F48041 		orr	r1, r1, #16384
 244 0026 1160     		str	r1, [r2]
 245 0028 1268     		ldr	r2, [r2]
 246 002a 02F48042 		and	r2, r2, #16384
 247 002e 0292     		str	r2, [sp, #8]
 248 0030 029A     		ldr	r2, [sp, #8]
 249              	.LBE6:
 126:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 250              		.loc 1 126 0
 251 0032 0222     		movs	r2, #2
 252 0034 0892     		str	r2, [sp, #32]
 127:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 253              		.loc 1 127 0
 254 0036 0122     		movs	r2, #1
 255 0038 0B92     		str	r2, [sp, #44]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 256              		.loc 1 128 0
 257 003a 1022     		movs	r2, #16
 258 003c 0C92     		str	r2, [sp, #48]
 129:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 259              		.loc 1 129 0
 260 003e 0E93     		str	r3, [sp, #56]
 130:Src/main.c    ****   {
 261              		.loc 1 130 0
 262 0040 08A8     		add	r0, sp, #32
 263 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 264              	.LVL11:
 265 0046 F0B9     		cbnz	r0, .L11
 137:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 266              		.loc 1 137 0
 267 0048 0F23     		movs	r3, #15
 268 004a 0393     		str	r3, [sp, #12]
 139:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 269              		.loc 1 139 0
 270 004c 0021     		movs	r1, #0
 271 004e 0491     		str	r1, [sp, #16]
 140:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 272              		.loc 1 140 0
 273 0050 0591     		str	r1, [sp, #20]
 141:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 274              		.loc 1 141 0
 275 0052 0691     		str	r1, [sp, #24]
 142:Src/main.c    **** 
ARM GAS  /tmp/ccjME77C.s 			page 10


 276              		.loc 1 142 0
 277 0054 0791     		str	r1, [sp, #28]
 144:Src/main.c    ****   {
 278              		.loc 1 144 0
 279 0056 03A8     		add	r0, sp, #12
 280 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 281              	.LVL12:
 282 005c B8B9     		cbnz	r0, .L12
 151:Src/main.c    **** 
 283              		.loc 1 151 0
 284 005e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 285              	.LVL13:
 286 0062 0F4B     		ldr	r3, .L13+8
 287 0064 A3FB0030 		umull	r3, r0, r3, r0
 288 0068 8009     		lsrs	r0, r0, #6
 289 006a FFF7FEFF 		bl	HAL_SYSTICK_Config
 290              	.LVL14:
 155:Src/main.c    **** 
 291              		.loc 1 155 0
 292 006e 0420     		movs	r0, #4
 293 0070 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 294              	.LVL15:
 158:Src/main.c    **** }
 295              		.loc 1 158 0
 296 0074 0022     		movs	r2, #0
 297 0076 1146     		mov	r1, r2
 298 0078 4FF0FF30 		mov	r0, #-1
 299 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 300              	.LVL16:
 159:Src/main.c    **** 
 301              		.loc 1 159 0
 302 0080 15B0     		add	sp, sp, #84
 303              	.LCFI5:
 304              		.cfi_remember_state
 305              		.cfi_def_cfa_offset 4
 306              		@ sp needed
 307 0082 5DF804FB 		ldr	pc, [sp], #4
 308              	.L11:
 309              	.LCFI6:
 310              		.cfi_restore_state
 132:Src/main.c    ****   }
 311              		.loc 1 132 0
 312 0086 8421     		movs	r1, #132
 313 0088 0648     		ldr	r0, .L13+12
 314 008a FFF7FEFF 		bl	_Error_Handler
 315              	.LVL17:
 316              	.L12:
 146:Src/main.c    ****   }
 317              		.loc 1 146 0
 318 008e 9221     		movs	r1, #146
 319 0090 0448     		ldr	r0, .L13+12
 320 0092 FFF7FEFF 		bl	_Error_Handler
 321              	.LVL18:
 322              	.L14:
 323 0096 00BF     		.align	2
 324              	.L13:
 325 0098 00380240 		.word	1073887232
ARM GAS  /tmp/ccjME77C.s 			page 11


 326 009c 00700040 		.word	1073770496
 327 00a0 D34D6210 		.word	274877907
 328 00a4 00000000 		.word	.LC0
 329              		.cfi_endproc
 330              	.LFE124:
 332              		.section	.text.main,"ax",%progbits
 333              		.align	1
 334              		.global	main
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 338              		.fpu fpv4-sp-d16
 340              	main:
 341              	.LFB123:
  68:Src/main.c    **** 
 342              		.loc 1 68 0
 343              		.cfi_startproc
 344              		@ Volatile: function does not return.
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 08B5     		push	{r3, lr}
 348              	.LCFI7:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
  77:Src/main.c    **** 
 352              		.loc 1 77 0
 353 0002 FFF7FEFF 		bl	HAL_Init
 354              	.LVL19:
  84:Src/main.c    **** 
 355              		.loc 1 84 0
 356 0006 FFF7FEFF 		bl	SystemClock_Config
 357              	.LVL20:
  91:Src/main.c    **** 
 358              		.loc 1 91 0
 359 000a FFF7FEFF 		bl	MX_GPIO_Init
 360              	.LVL21:
 361              	.L16:
 362 000e FEE7     		b	.L16
 363              		.cfi_endproc
 364              	.LFE123:
 366              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 367              		.align	2
 368              	.LC0:
 369 0000 5372632F 		.ascii	"Src/main.c\000"
 369      6D61696E 
 369      2E6300
 370              		.text
 371              	.Letext0:
 372              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 373              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 374              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 375              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 376              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 377              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 378              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 379              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
ARM GAS  /tmp/ccjME77C.s 			page 12


 380              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 381              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 382              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 383              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 384              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 385              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 386              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccjME77C.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccjME77C.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccjME77C.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccjME77C.s:173    .text.MX_GPIO_Init:00000000000000cc $d
     /tmp/ccjME77C.s:182    .text._Error_Handler:0000000000000000 $t
     /tmp/ccjME77C.s:189    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccjME77C.s:204    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccjME77C.s:211    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccjME77C.s:325    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccjME77C.s:333    .text.main:0000000000000000 $t
     /tmp/ccjME77C.s:340    .text.main:0000000000000000 main
     /tmp/ccjME77C.s:367    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
