ARM GAS  /tmp/ccgE86RY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB123:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccgE86RY.s 			page 2


  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** extern __IO uint32_t Interrupt_Variable;
  40:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart6;
  44:Src/stm32f4xx_it.c **** 
  45:Src/stm32f4xx_it.c **** /******************************************************************************/
  46:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  47:Src/stm32f4xx_it.c **** /******************************************************************************/
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** /**
  50:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  51:Src/stm32f4xx_it.c **** */
  52:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  53:Src/stm32f4xx_it.c **** {
  28              		.loc 1 53 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE123:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB124:
  54:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  55:Src/stm32f4xx_it.c **** 
  56:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  57:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  58:Src/stm32f4xx_it.c **** 
  59:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  60:Src/stm32f4xx_it.c **** }
  61:Src/stm32f4xx_it.c **** 
  62:Src/stm32f4xx_it.c **** /**
  63:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  64:Src/stm32f4xx_it.c **** */
  65:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  66:Src/stm32f4xx_it.c **** {
  47              		.loc 1 66 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccgE86RY.s 			page 3


  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE124:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB125:
  67:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  70:Src/stm32f4xx_it.c ****   while (1)
  71:Src/stm32f4xx_it.c ****   {
  72:Src/stm32f4xx_it.c ****   }
  73:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  74:Src/stm32f4xx_it.c **** 
  75:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  76:Src/stm32f4xx_it.c **** }
  77:Src/stm32f4xx_it.c **** 
  78:Src/stm32f4xx_it.c **** /**
  79:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
  80:Src/stm32f4xx_it.c **** */
  81:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  82:Src/stm32f4xx_it.c **** {
  68              		.loc 1 82 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE125:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB126:
  83:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  86:Src/stm32f4xx_it.c ****   while (1)
  87:Src/stm32f4xx_it.c ****   {
  88:Src/stm32f4xx_it.c ****   }
  89:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  90:Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccgE86RY.s 			page 4


  91:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
  92:Src/stm32f4xx_it.c **** }
  93:Src/stm32f4xx_it.c **** 
  94:Src/stm32f4xx_it.c **** /**
  95:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
  96:Src/stm32f4xx_it.c **** */
  97:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
  98:Src/stm32f4xx_it.c **** {
  89              		.loc 1 98 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE126:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB127:
  99:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 100:Src/stm32f4xx_it.c **** 
 101:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 102:Src/stm32f4xx_it.c ****   while (1)
 103:Src/stm32f4xx_it.c ****   {
 104:Src/stm32f4xx_it.c ****   }
 105:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 106:Src/stm32f4xx_it.c **** 
 107:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 108:Src/stm32f4xx_it.c **** }
 109:Src/stm32f4xx_it.c **** 
 110:Src/stm32f4xx_it.c **** /**
 111:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 112:Src/stm32f4xx_it.c **** */
 113:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 114:Src/stm32f4xx_it.c **** {
 110              		.loc 1 114 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE127:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
ARM GAS  /tmp/ccgE86RY.s 			page 5


 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB128:
 115:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 116:Src/stm32f4xx_it.c **** 
 117:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 118:Src/stm32f4xx_it.c ****   while (1)
 119:Src/stm32f4xx_it.c ****   {
 120:Src/stm32f4xx_it.c ****   }
 121:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 122:Src/stm32f4xx_it.c **** 
 123:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 124:Src/stm32f4xx_it.c **** }
 125:Src/stm32f4xx_it.c **** 
 126:Src/stm32f4xx_it.c **** /**
 127:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 128:Src/stm32f4xx_it.c **** */
 129:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 130:Src/stm32f4xx_it.c **** {
 131              		.loc 1 130 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE128:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB129:
 131:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 132:Src/stm32f4xx_it.c **** 
 133:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 134:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 135:Src/stm32f4xx_it.c **** 
 136:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 137:Src/stm32f4xx_it.c **** }
 138:Src/stm32f4xx_it.c **** 
 139:Src/stm32f4xx_it.c **** /**
 140:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 141:Src/stm32f4xx_it.c **** */
 142:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 143:Src/stm32f4xx_it.c **** {
 150              		.loc 1 143 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
ARM GAS  /tmp/ccgE86RY.s 			page 6


 156              		.cfi_endproc
 157              	.LFE129:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB130:
 144:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 147:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 150:Src/stm32f4xx_it.c **** }
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c **** /**
 153:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 154:Src/stm32f4xx_it.c **** */
 155:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 156:Src/stm32f4xx_it.c **** {
 169              		.loc 1 156 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE130:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB131:
 157:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 160:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 163:Src/stm32f4xx_it.c **** }
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c **** /**
 166:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 167:Src/stm32f4xx_it.c **** */
 168:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 169:Src/stm32f4xx_it.c **** {
 188              		.loc 1 169 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccgE86RY.s 			page 7


 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 169 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 170:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 173:Src/stm32f4xx_it.c ****   HAL_IncTick();
 198              		.loc 1 173 0
 199 0002 FFF7FEFF 		bl	HAL_IncTick
 200              	.LVL0:
 174:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 201              		.loc 1 174 0
 202 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 203              	.LVL1:
 204 000a 08BD     		pop	{r3, pc}
 205              		.cfi_endproc
 206              	.LFE131:
 208              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 209              		.align	1
 210              		.global	EXTI0_IRQHandler
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	EXTI0_IRQHandler:
 217              	.LFB132:
 175:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 176:Src/stm32f4xx_it.c **** 
 177:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 178:Src/stm32f4xx_it.c **** }
 179:Src/stm32f4xx_it.c **** 
 180:Src/stm32f4xx_it.c **** /******************************************************************************/
 181:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 182:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 183:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 184:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 185:Src/stm32f4xx_it.c **** /******************************************************************************/
 186:Src/stm32f4xx_it.c **** 
 187:Src/stm32f4xx_it.c **** /**
 188:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line0 interrupt.
 189:Src/stm32f4xx_it.c **** */
 190:Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void)
 191:Src/stm32f4xx_it.c **** {
 218              		.loc 1 191 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222 0000 08B5     		push	{r3, lr}
 223              	.LCFI1:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 3, -8
 226              		.cfi_offset 14, -4
 192:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 0 */
ARM GAS  /tmp/ccgE86RY.s 			page 8


 193:Src/stm32f4xx_it.c ****   if(__HAL_GPIO_EXTI_GET_FLAG(GPIO_PIN_0))
 227              		.loc 1 193 0
 228 0002 094B     		ldr	r3, .L19
 229 0004 5B69     		ldr	r3, [r3, #20]
 230 0006 13F0010F 		tst	r3, #1
 231 000a 03D1     		bne	.L18
 232              	.L16:
 194:Src/stm32f4xx_it.c ****     {
 195:Src/stm32f4xx_it.c ****       HAL_GPIO_WritePin(INT_Export_GPIO_Port, INT_Export_Pin, GPIO_PIN_SET);
 196:Src/stm32f4xx_it.c ****       Interrupt_Variable = 1;
 197:Src/stm32f4xx_it.c ****     }
 198:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 0 */
 199:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_0);
 233              		.loc 1 199 0
 234 000c 0120     		movs	r0, #1
 235 000e FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 236              	.LVL2:
 237 0012 08BD     		pop	{r3, pc}
 238              	.L18:
 195:Src/stm32f4xx_it.c ****       Interrupt_Variable = 1;
 239              		.loc 1 195 0
 240 0014 0122     		movs	r2, #1
 241 0016 4FF48051 		mov	r1, #4096
 242 001a 0448     		ldr	r0, .L19+4
 243 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 244              	.LVL3:
 196:Src/stm32f4xx_it.c ****     }
 245              		.loc 1 196 0
 246 0020 0122     		movs	r2, #1
 247 0022 034B     		ldr	r3, .L19+8
 248 0024 1A60     		str	r2, [r3]
 249 0026 F1E7     		b	.L16
 250              	.L20:
 251              		.align	2
 252              	.L19:
 253 0028 003C0140 		.word	1073822720
 254 002c 00140240 		.word	1073878016
 255 0030 00000000 		.word	Interrupt_Variable
 256              		.cfi_endproc
 257              	.LFE132:
 259              		.section	.text.USART6_IRQHandler,"ax",%progbits
 260              		.align	1
 261              		.global	USART6_IRQHandler
 262              		.syntax unified
 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	USART6_IRQHandler:
 268              	.LFB133:
 200:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI0_IRQn 1 */
 201:Src/stm32f4xx_it.c **** 
 202:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI0_IRQn 1 */
 203:Src/stm32f4xx_it.c **** }
 204:Src/stm32f4xx_it.c **** 
 205:Src/stm32f4xx_it.c **** /**
 206:Src/stm32f4xx_it.c **** * @brief This function handles USART6 global interrupt.
 207:Src/stm32f4xx_it.c **** */
ARM GAS  /tmp/ccgE86RY.s 			page 9


 208:Src/stm32f4xx_it.c **** void USART6_IRQHandler(void)
 209:Src/stm32f4xx_it.c **** {
 269              		.loc 1 209 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273 0000 08B5     		push	{r3, lr}
 274              	.LCFI2:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 3, -8
 277              		.cfi_offset 14, -4
 210:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 0 */
 211:Src/stm32f4xx_it.c **** 
 212:Src/stm32f4xx_it.c ****   /* USER CODE END USART6_IRQn 0 */
 213:Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart6);
 278              		.loc 1 213 0
 279 0002 0248     		ldr	r0, .L23
 280 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 281              	.LVL4:
 282 0008 08BD     		pop	{r3, pc}
 283              	.L24:
 284 000a 00BF     		.align	2
 285              	.L23:
 286 000c 00000000 		.word	huart6
 287              		.cfi_endproc
 288              	.LFE133:
 290              		.text
 291              	.Letext0:
 292              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 293              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 294              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 295              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 296              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 297              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 298              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 299              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 300              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 301              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 302              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 303              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 304              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 305              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 306              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccgE86RY.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccgE86RY.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccgE86RY.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccgE86RY.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccgE86RY.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccgE86RY.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccgE86RY.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccgE86RY.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccgE86RY.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccgE86RY.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccgE86RY.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccgE86RY.s:122    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccgE86RY.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccgE86RY.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccgE86RY.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccgE86RY.s:160    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccgE86RY.s:167    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccgE86RY.s:179    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccgE86RY.s:186    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccgE86RY.s:209    .text.EXTI0_IRQHandler:0000000000000000 $t
     /tmp/ccgE86RY.s:216    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
     /tmp/ccgE86RY.s:253    .text.EXTI0_IRQHandler:0000000000000028 $d
     /tmp/ccgE86RY.s:260    .text.USART6_IRQHandler:0000000000000000 $t
     /tmp/ccgE86RY.s:267    .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
     /tmp/ccgE86RY.s:286    .text.USART6_IRQHandler:000000000000000c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_GPIO_EXTI_IRQHandler
HAL_GPIO_WritePin
Interrupt_Variable
HAL_UART_IRQHandler
huart6
