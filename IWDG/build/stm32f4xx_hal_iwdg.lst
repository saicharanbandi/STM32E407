ARM GAS  /tmp/ccBBu9n8.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_iwdg.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_IWDG_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_IWDG_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_IWDG_Init:
  26              	.LFB123:
  27              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @file    stm32f4xx_hal_iwdg.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @version V1.7.1
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @date    14-April-2017
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @brief   IWDG HAL module driver.
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *          This file provides firmware functions to manage the following
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *          functionalities of the Independent Watchdog (IWDG) peripheral:
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *           + Initialization and Start functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *           + IO operation functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   @verbatim
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****                     ##### IWDG Generic features #####
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   ==============================================================================
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   [..]
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     (+) The IWDG can be started by either software or hardware (configurable
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         through option byte).
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     (+) The IWDG is clocked by Low-Speed clock (LSI) and thus stays active even
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         if the main clock fails.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     (+) Once the IWDG is started, the LSI is forced ON and both can not be 
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         disabled. The counter starts counting down from the reset value (0xFFF).
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         When it reaches the end of count value (0x000) a reset signal is 
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         generated (IWDG reset).
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     (+) Whenever the key value 0x0000 AAAA is written in the IWDG_KR register,
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         the IWDG_RLR value is reloaded in the counter and the watchdog reset is
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         prevented.
ARM GAS  /tmp/ccBBu9n8.s 			page 2


  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     (+) The IWDG is implemented in the VDD voltage domain that is still functional
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         in STOP and STANDBY mode (IWDG reset can wake-up from STANDBY).
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         IWDGRST flag in RCC_CSR register can be used to inform when an IWDG
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         reset occurs.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     (+) Debug mode : When the microcontroller enters debug mode (core halted),
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         the IWDG counter either continues to work normally or stops, depending
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         on DBG_IWDG_STOP configuration bit in DBG module, accessible through
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         __HAL_DBGMCU_FREEZE_IWDG() and __HAL_DBGMCU_UNFREEZE_IWDG() macros
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     [..] Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****          The IWDG timeout may vary due to LSI frequency dispersion. STM32F4xx
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****          devices provide the capability to measure the LSI frequency (LSI clock
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****          connected internally to TIM5 CH4 input capture). The measured value
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****          can be used to have an IWDG timeout with an acceptable accuracy.
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****                      ##### How to use this driver #####
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   ==============================================================================
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   [..]
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     (#) Use IWDG using HAL_IWDG_Init() function to :
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****       (++) Enable instance by writing Start keyword in IWDG_KEY register. LSI
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****            clock is forced ON and IWDG counter starts downcounting.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****       (++) Enable write access to configuration register: IWDG_PR & IWDG_RLR.
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****       (++) Configure the IWDG prescaler and counter reload value. This reload
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****            value will be loaded in the IWDG counter each time the watchdog is
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****            reloaded, then the IWDG will start counting down from this value.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****       (++) wait for status flags to be reset"
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     (#) Then the application program must refresh the IWDG counter at regular
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         intervals during normal operation to prevent an MCU reset, using
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****         HAL_IWDG_Refresh() function.
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****      *** IWDG HAL driver macros list ***
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****      ====================================
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****      [..]
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****        Below the list of most used macros in IWDG HAL driver:
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****       (+) __HAL_IWDG_START: Enable the IWDG peripheral
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****       (+) __HAL_IWDG_RELOAD_COUNTER: Reloads IWDG counter with value defined in
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****           the reload register
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   @endverbatim
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   ******************************************************************************
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @attention
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * Redistribution and use in source and binary forms, with or without modification,
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * are permitted provided that the following conditions are met:
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *      this list of conditions and the following disclaimer.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *      this list of conditions and the following disclaimer in the documentation
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *      and/or other materials provided with the distribution
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *      may be used to endorse or promote products derived from this software
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *      without specific prior written permission.
ARM GAS  /tmp/ccBBu9n8.s 			page 3


  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   ******************************************************************************
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /* Includes ------------------------------------------------------------------*/
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** #include "stm32f4xx_hal.h"
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /** @addtogroup STM32F4xx_HAL_Driver
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @{
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** #ifdef HAL_IWDG_MODULE_ENABLED
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /** @defgroup IWDG IWDG
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @brief IWDG HAL module driver.
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @{
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /* Private define ------------------------------------------------------------*/
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /** @defgroup IWDG_Private_Defines IWDG Private Defines
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @{
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /* Status register need 5 RC LSI divided by prescaler clock to be updated. With 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****    higher prescaler (256), and according to HSI variation, we need to wait at
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****    least 6 cycles so 48 ms. */
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** #define HAL_IWDG_DEFAULT_TIMEOUT            48U
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /**
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @}
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /* Exported functions --------------------------------------------------------*/
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @{
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions_Group1
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *  @brief    Initialization and Start functions.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** @verbatim
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****  ===============================================================================
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****           ##### Initialization and Start functions #####
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****  ===============================================================================
ARM GAS  /tmp/ccBBu9n8.s 			page 4


 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****  [..]  This section provides functions allowing to:
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****       (+) Initialize the IWDG according to the specified parameters in the
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****           IWDG_InitTypeDef of associated handle.
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****       (+) Once initialization is performed in HAL_IWDG_Init function, Watchdog
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****           is reloaded in order to exit function with correct time base.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** @endverbatim
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @{
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /**
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @brief  Initialize the IWDG according to the specified parameters in the
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *         IWDG_InitTypeDef and start watchdog. Before exiting function,
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *         watchdog is refreshed in order to have correct time base.
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @param  hiwdg  pointer to a IWDG_HandleTypeDef structure that contains
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *                the configuration information for the specified IWDG module.
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @retval HAL status
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** HAL_StatusTypeDef HAL_IWDG_Init(IWDG_HandleTypeDef *hiwdg)
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** {
  28              		.loc 1 165 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   uint32_t tickstart;
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Check the IWDG handle allocation */
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   if(hiwdg == NULL)
  33              		.loc 1 169 0
  34 0000 0028     		cmp	r0, #0
  35 0002 3AD0     		beq	.L8
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   uint32_t tickstart;
  36              		.loc 1 165 0
  37 0004 38B5     		push	{r3, r4, r5, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 3, -16
  41              		.cfi_offset 4, -12
  42              		.cfi_offset 5, -8
  43              		.cfi_offset 14, -4
  44 0006 0446     		mov	r4, r0
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   {
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     return HAL_ERROR;
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   }
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Check the parameters */
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   assert_param(IS_IWDG_ALL_INSTANCE(hiwdg->Instance));
  45              		.loc 1 175 0
  46 0008 0268     		ldr	r2, [r0]
  47 000a 1D4B     		ldr	r3, .L17
  48 000c 9A42     		cmp	r2, r3
  49 000e 03D0     		beq	.L3
  50              		.loc 1 175 0 is_stmt 0 discriminator 1
  51 0010 AF21     		movs	r1, #175
  52 0012 1C48     		ldr	r0, .L17+4
  53              	.LVL1:
ARM GAS  /tmp/ccBBu9n8.s 			page 5


  54 0014 FFF7FEFF 		bl	assert_failed
  55              	.LVL2:
  56              	.L3:
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(hiwdg->Init.Prescaler));
  57              		.loc 1 176 0 is_stmt 1
  58 0018 6368     		ldr	r3, [r4, #4]
  59 001a 062B     		cmp	r3, #6
  60 001c 1ED8     		bhi	.L14
  61              	.L4:
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   assert_param(IS_IWDG_RELOAD(hiwdg->Init.Reload));
  62              		.loc 1 177 0
  63 001e A368     		ldr	r3, [r4, #8]
  64 0020 B3F5805F 		cmp	r3, #4096
  65 0024 1FD2     		bcs	.L15
  66              	.L5:
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Enable IWDG. LSI is turned on automaticaly */
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   __HAL_IWDG_START(hiwdg);
  67              		.loc 1 180 0
  68 0026 2368     		ldr	r3, [r4]
  69 0028 4CF6CC42 		movw	r2, #52428
  70 002c 1A60     		str	r2, [r3]
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Enable write access to IWDG_PR and IWDG_RLR registers by writing 0x5555 in KR */
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   IWDG_ENABLE_WRITE_ACCESS(hiwdg);
  71              		.loc 1 183 0
  72 002e 2368     		ldr	r3, [r4]
  73 0030 45F25552 		movw	r2, #21845
  74 0034 1A60     		str	r2, [r3]
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Write to IWDG registers the Prescaler & Reload values to work with */
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   hiwdg->Instance->PR = hiwdg->Init.Prescaler;
  75              		.loc 1 186 0
  76 0036 2368     		ldr	r3, [r4]
  77 0038 6268     		ldr	r2, [r4, #4]
  78 003a 5A60     		str	r2, [r3, #4]
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   hiwdg->Instance->RLR = hiwdg->Init.Reload;
  79              		.loc 1 187 0
  80 003c 2368     		ldr	r3, [r4]
  81 003e A268     		ldr	r2, [r4, #8]
  82 0040 9A60     		str	r2, [r3, #8]
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Check pending flag, if previous update not done, return timeout */
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   tickstart = HAL_GetTick();
  83              		.loc 1 190 0
  84 0042 FFF7FEFF 		bl	HAL_GetTick
  85              	.LVL3:
  86 0046 0546     		mov	r5, r0
  87              	.LVL4:
  88              	.L6:
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Wait for register to be updated */
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   while(hiwdg->Instance->SR != RESET)
  89              		.loc 1 193 0
  90 0048 2368     		ldr	r3, [r4]
  91 004a DA68     		ldr	r2, [r3, #12]
  92 004c 82B1     		cbz	r2, .L16
ARM GAS  /tmp/ccBBu9n8.s 			page 6


 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   {
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     if((HAL_GetTick() - tickstart ) > HAL_IWDG_DEFAULT_TIMEOUT)
  93              		.loc 1 195 0
  94 004e FFF7FEFF 		bl	HAL_GetTick
  95              	.LVL5:
  96 0052 401B     		subs	r0, r0, r5
  97 0054 3028     		cmp	r0, #48
  98 0056 F7D9     		bls	.L6
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     {
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****       return HAL_TIMEOUT;
  99              		.loc 1 197 0
 100 0058 0320     		movs	r0, #3
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****     }
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   }
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Reload IWDG counter with value defined in the reload register */
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   __HAL_IWDG_RELOAD_COUNTER(hiwdg);
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Return function status */
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   return HAL_OK;
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** }
 101              		.loc 1 206 0
 102 005a 38BD     		pop	{r3, r4, r5, pc}
 103              	.LVL6:
 104              	.L14:
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   assert_param(IS_IWDG_RELOAD(hiwdg->Init.Reload));
 105              		.loc 1 176 0 discriminator 1
 106 005c B021     		movs	r1, #176
 107 005e 0948     		ldr	r0, .L17+4
 108 0060 FFF7FEFF 		bl	assert_failed
 109              	.LVL7:
 110 0064 DBE7     		b	.L4
 111              	.L15:
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 112              		.loc 1 177 0 discriminator 1
 113 0066 B121     		movs	r1, #177
 114 0068 0648     		ldr	r0, .L17+4
 115 006a FFF7FEFF 		bl	assert_failed
 116              	.LVL8:
 117 006e DAE7     		b	.L5
 118              	.LVL9:
 119              	.L16:
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 120              		.loc 1 202 0
 121 0070 4AF6AA22 		movw	r2, #43690
 122 0074 1A60     		str	r2, [r3]
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** }
 123              		.loc 1 205 0
 124 0076 0020     		movs	r0, #0
 125 0078 38BD     		pop	{r3, r4, r5, pc}
 126              	.LVL10:
 127              	.L8:
 128              	.LCFI1:
 129              		.cfi_def_cfa_offset 0
 130              		.cfi_restore 3
 131              		.cfi_restore 4
 132              		.cfi_restore 5
ARM GAS  /tmp/ccBBu9n8.s 			page 7


 133              		.cfi_restore 14
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   }
 134              		.loc 1 171 0
 135 007a 0120     		movs	r0, #1
 136              	.LVL11:
 137 007c 7047     		bx	lr
 138              	.L18:
 139 007e 00BF     		.align	2
 140              	.L17:
 141 0080 00300040 		.word	1073754112
 142 0084 00000000 		.word	.LC0
 143              		.cfi_endproc
 144              	.LFE123:
 146              		.section	.text.HAL_IWDG_Refresh,"ax",%progbits
 147              		.align	1
 148              		.global	HAL_IWDG_Refresh
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu fpv4-sp-d16
 154              	HAL_IWDG_Refresh:
 155              	.LFB124:
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /**
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @}
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /** @addtogroup IWDG_Exported_Functions_Group2
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *  @brief   IO operation functions
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** @verbatim
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****  ===============================================================================
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****                       ##### IO operation functions #####
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****  ===============================================================================
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****  [..]  This section provides functions allowing to:
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****       (+) Refresh the IWDG.
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** @endverbatim
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @{
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** /**
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @brief  Refresh the IWDG.
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @param  hiwdg  pointer to a IWDG_HandleTypeDef structure that contains
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   *                the configuration information for the specified IWDG module.
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   * @retval HAL status
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   */
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** HAL_StatusTypeDef HAL_IWDG_Refresh(IWDG_HandleTypeDef *hiwdg)
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** {
 156              		.loc 1 233 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
 161              	.LVL12:
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Reload IWDG counter with value defined in the reload register */
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   __HAL_IWDG_RELOAD_COUNTER(hiwdg);
ARM GAS  /tmp/ccBBu9n8.s 			page 8


 162              		.loc 1 235 0
 163 0000 0368     		ldr	r3, [r0]
 164 0002 4AF6AA22 		movw	r2, #43690
 165 0006 1A60     		str	r2, [r3]
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   /* Return function status */
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c ****   return HAL_OK;
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg.c **** }
 166              		.loc 1 239 0
 167 0008 0020     		movs	r0, #0
 168              	.LVL13:
 169 000a 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE124:
 173              		.section	.rodata.HAL_IWDG_Init.str1.4,"aMS",%progbits,1
 174              		.align	2
 175              	.LC0:
 176 0000 44726976 		.ascii	"Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_iwdg"
 176      6572732F 
 176      53544D33 
 176      32463478 
 176      785F4841 
 177 0033 2E6300   		.ascii	".c\000"
 178              		.text
 179              	.Letext0:
 180              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 181              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 182              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 183              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 184              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 185              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 186              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 187              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 188              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 189              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 190              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 191              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_iwdg.h"
 192              		.file 14 "Inc/stm32f4xx_hal_conf.h"
 193              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccBBu9n8.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_iwdg.c
     /tmp/ccBBu9n8.s:18     .text.HAL_IWDG_Init:0000000000000000 $t
     /tmp/ccBBu9n8.s:25     .text.HAL_IWDG_Init:0000000000000000 HAL_IWDG_Init
     /tmp/ccBBu9n8.s:141    .text.HAL_IWDG_Init:0000000000000080 $d
     /tmp/ccBBu9n8.s:147    .text.HAL_IWDG_Refresh:0000000000000000 $t
     /tmp/ccBBu9n8.s:154    .text.HAL_IWDG_Refresh:0000000000000000 HAL_IWDG_Refresh
     /tmp/ccBBu9n8.s:174    .rodata.HAL_IWDG_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
assert_failed
HAL_GetTick
