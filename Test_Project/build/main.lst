ARM GAS  /tmp/ccA3oJbZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB126:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccA3oJbZ.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** unsigned char start_capture = 0;
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** TIM_HandleTypeDef htim4;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** volatile unsigned char uIRQ_Temp = 0;
  53:Src/main.c    **** /* volatile uint16_t uwDiffCapture = 0; */
  54:Src/main.c    **** volatile unsigned char uPulse_width_2T = 0; 
  55:Src/main.c    **** volatile unsigned char uPulse_width_T = 0;
  56:Src/main.c    **** /* USER CODE END PV */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  59:Src/main.c    **** void SystemClock_Config(void);
  60:Src/main.c    **** static void MX_GPIO_Init(void);
  61:Src/main.c    **** static void MX_TIM4_Init(void);
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN PFP */
  64:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END PFP */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE BEGIN 0 */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END 0 */
  71:Src/main.c    **** 
  72:Src/main.c    **** int main(void)
  73:Src/main.c    **** {
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* USER CODE BEGIN 1 */
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE END 1 */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Src/main.c    ****   HAL_Init();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END Init */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Configure the system clock */
  89:Src/main.c    ****   SystemClock_Config();
ARM GAS  /tmp/ccA3oJbZ.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Initialize all configured peripherals */
  96:Src/main.c    ****   MX_GPIO_Init();
  97:Src/main.c    ****   MX_TIM4_Init();
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE BEGIN 2 */
 100:Src/main.c    ****   while(start_capture == 0)
 101:Src/main.c    ****     {
 102:Src/main.c    ****     }
 103:Src/main.c    ****   
 104:Src/main.c    ****   /* Start TIM4, CH3 in IC Interrupt mode */
 105:Src/main.c    ****   if(HAL_TIM_IC_Start_IT(&htim4, TIM_CHANNEL_3) != HAL_OK)
 106:Src/main.c    ****     {
 107:Src/main.c    ****       _Error_Handler(__FILE__, __LINE__);
 108:Src/main.c    ****     }
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* while(uPulse_width_2T == 0) */
 111:Src/main.c    ****   /*   { */
 112:Src/main.c    ****   /*     HAL_GPIO_TogglePin(LED_Red_GPIO_Port, LED_Red_Pin); */
 113:Src/main.c    ****   /*     HAL_Delay(250); */
 114:Src/main.c    ****   /*   } */
 115:Src/main.c    ****   HAL_GPIO_WritePin(LED_Red_GPIO_Port, LED_Red_Pin, GPIO_PIN_SET);
 116:Src/main.c    **** 
 117:Src/main.c    ****   while(uPulse_width_T == 0)
 118:Src/main.c    ****     {
 119:Src/main.c    ****       HAL_GPIO_TogglePin(LED_Blue_GPIO_Port, LED_Blue_Pin);
 120:Src/main.c    ****       HAL_Delay(250);
 121:Src/main.c    ****     }
 122:Src/main.c    ****   
 123:Src/main.c    ****   HAL_GPIO_WritePin(LED_Green_GPIO_Port, LED_Green_Pin, GPIO_PIN_SET);
 124:Src/main.c    ****   /* USER CODE END 2 */
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* Infinite loop */
 127:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 128:Src/main.c    ****   while (1)
 129:Src/main.c    ****   {
 130:Src/main.c    ****   /* USER CODE END WHILE */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE BEGIN 3 */
 133:Src/main.c    **** 
 134:Src/main.c    ****   }
 135:Src/main.c    ****   /* USER CODE END 3 */
 136:Src/main.c    **** 
 137:Src/main.c    **** }
 138:Src/main.c    **** 
 139:Src/main.c    **** /** System Clock Configuration
 140:Src/main.c    **** */
 141:Src/main.c    **** void SystemClock_Config(void)
 142:Src/main.c    **** {
 143:Src/main.c    **** 
 144:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 145:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 146:Src/main.c    **** 
ARM GAS  /tmp/ccA3oJbZ.s 			page 4


 147:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 148:Src/main.c    ****     */
 149:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 150:Src/main.c    **** 
 151:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 152:Src/main.c    **** 
 153:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 154:Src/main.c    ****     */
 155:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 156:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 157:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 256;
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 164:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 165:Src/main.c    ****   {
 166:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 167:Src/main.c    ****   }
 168:Src/main.c    **** 
 169:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 170:Src/main.c    ****     */
 171:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 172:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 173:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 174:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 175:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 176:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 177:Src/main.c    **** 
 178:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 179:Src/main.c    ****   {
 180:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 181:Src/main.c    ****   }
 182:Src/main.c    **** 
 183:Src/main.c    ****     /**Configure the Systick interrupt time 
 184:Src/main.c    ****     */
 185:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 186:Src/main.c    **** 
 187:Src/main.c    ****     /**Configure the Systick 
 188:Src/main.c    ****     */
 189:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 190:Src/main.c    **** 
 191:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 192:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 193:Src/main.c    **** }
 194:Src/main.c    **** 
 195:Src/main.c    **** /* TIM4 init function */
 196:Src/main.c    **** static void MX_TIM4_Init(void)
 197:Src/main.c    **** {
 198:Src/main.c    **** 
 199:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig;
 200:Src/main.c    ****   TIM_IC_InitTypeDef sConfigIC;
 201:Src/main.c    **** 
 202:Src/main.c    ****   htim4.Instance = TIM4;
 203:Src/main.c    ****   htim4.Init.Prescaler = 0;
ARM GAS  /tmp/ccA3oJbZ.s 			page 5


 204:Src/main.c    ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 205:Src/main.c    ****   htim4.Init.Period = 0xFFFF;
 206:Src/main.c    ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 207:Src/main.c    ****   if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 208:Src/main.c    ****   {
 209:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 210:Src/main.c    ****   }
 211:Src/main.c    **** 
 212:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 213:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 214:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 215:Src/main.c    ****   {
 216:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 217:Src/main.c    ****   }
 218:Src/main.c    **** 
 219:Src/main.c    ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 220:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 221:Src/main.c    ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 222:Src/main.c    ****   sConfigIC.ICFilter = 0;
 223:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 224:Src/main.c    ****   {
 225:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 226:Src/main.c    ****   }
 227:Src/main.c    **** 
 228:Src/main.c    **** }
 229:Src/main.c    **** 
 230:Src/main.c    **** /** Configure pins as 
 231:Src/main.c    ****         * Analog 
 232:Src/main.c    ****         * Input 
 233:Src/main.c    ****         * Output
 234:Src/main.c    ****         * EVENT_OUT
 235:Src/main.c    ****         * EXTI
 236:Src/main.c    **** */
 237:Src/main.c    **** static void MX_GPIO_Init(void)
 238:Src/main.c    **** {
  27              		.loc 1 238 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
  42              	.LBB2:
 239:Src/main.c    **** 
 240:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 241:Src/main.c    **** 
 242:Src/main.c    ****   /* GPIO Ports Clock Enable */
 243:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  43              		.loc 1 243 0
ARM GAS  /tmp/ccA3oJbZ.s 			page 6


  44 0004 0024     		movs	r4, #0
  45 0006 0194     		str	r4, [sp, #4]
  46 0008 1C4B     		ldr	r3, .L3
  47 000a 1A6B     		ldr	r2, [r3, #48]
  48 000c 42F02002 		orr	r2, r2, #32
  49 0010 1A63     		str	r2, [r3, #48]
  50 0012 1A6B     		ldr	r2, [r3, #48]
  51 0014 02F02002 		and	r2, r2, #32
  52 0018 0192     		str	r2, [sp, #4]
  53 001a 019A     		ldr	r2, [sp, #4]
  54              	.LBE2:
  55              	.LBB3:
 244:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  56              		.loc 1 244 0
  57 001c 0294     		str	r4, [sp, #8]
  58 001e 1A6B     		ldr	r2, [r3, #48]
  59 0020 42F00802 		orr	r2, r2, #8
  60 0024 1A63     		str	r2, [r3, #48]
  61 0026 1B6B     		ldr	r3, [r3, #48]
  62 0028 03F00803 		and	r3, r3, #8
  63 002c 0293     		str	r3, [sp, #8]
  64 002e 029B     		ldr	r3, [sp, #8]
  65              	.LBE3:
 245:Src/main.c    **** 
 246:Src/main.c    ****   /*Configure GPIO pin Output Level */
 247:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, LED_Green_Pin|LED_Blue_Pin|LED_Yellow_Pin|LED_Red_Pin, GPIO_PIN_RESET);
  66              		.loc 1 247 0
  67 0030 134D     		ldr	r5, .L3+4
  68 0032 2246     		mov	r2, r4
  69 0034 3C21     		movs	r1, #60
  70 0036 2846     		mov	r0, r5
  71 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  72              	.LVL0:
 248:Src/main.c    **** 
 249:Src/main.c    ****   /*Configure GPIO pins : LED_Green_Pin LED_Blue_Pin LED_Yellow_Pin LED_Red_Pin */
 250:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Green_Pin|LED_Blue_Pin|LED_Yellow_Pin|LED_Red_Pin;
  73              		.loc 1 250 0
  74 003c 3C23     		movs	r3, #60
  75 003e 0393     		str	r3, [sp, #12]
 251:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  76              		.loc 1 251 0
  77 0040 0126     		movs	r6, #1
  78 0042 0496     		str	r6, [sp, #16]
 252:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  79              		.loc 1 252 0
  80 0044 0227     		movs	r7, #2
  81 0046 0597     		str	r7, [sp, #20]
 253:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  82              		.loc 1 253 0
  83 0048 0694     		str	r4, [sp, #24]
 254:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
  84              		.loc 1 254 0
  85 004a 03A9     		add	r1, sp, #12
  86 004c 2846     		mov	r0, r5
  87 004e FFF7FEFF 		bl	HAL_GPIO_Init
  88              	.LVL1:
 255:Src/main.c    **** 
ARM GAS  /tmp/ccA3oJbZ.s 			page 7


 256:Src/main.c    ****   /*Configure GPIO pin : Hardware_Trigger_Pin */
 257:Src/main.c    ****   GPIO_InitStruct.Pin = Hardware_Trigger_Pin;
  89              		.loc 1 257 0
  90 0052 4FF48053 		mov	r3, #4096
  91 0056 0393     		str	r3, [sp, #12]
 258:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  92              		.loc 1 258 0
  93 0058 0A4B     		ldr	r3, .L3+8
  94 005a 0493     		str	r3, [sp, #16]
 259:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  95              		.loc 1 259 0
  96 005c 0597     		str	r7, [sp, #20]
 260:Src/main.c    ****   HAL_GPIO_Init(Hardware_Trigger_GPIO_Port, &GPIO_InitStruct);
  97              		.loc 1 260 0
  98 005e 03A9     		add	r1, sp, #12
  99 0060 2846     		mov	r0, r5
 100 0062 FFF7FEFF 		bl	HAL_GPIO_Init
 101              	.LVL2:
 261:Src/main.c    **** 
 262:Src/main.c    ****   /* EXTI interrupt init*/
 263:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 1, 0);
 102              		.loc 1 263 0
 103 0066 2246     		mov	r2, r4
 104 0068 3146     		mov	r1, r6
 105 006a 2820     		movs	r0, #40
 106 006c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 107              	.LVL3:
 264:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 108              		.loc 1 264 0
 109 0070 2820     		movs	r0, #40
 110 0072 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 111              	.LVL4:
 265:Src/main.c    **** 
 266:Src/main.c    **** }
 112              		.loc 1 266 0
 113 0076 09B0     		add	sp, sp, #36
 114              	.LCFI2:
 115              		.cfi_def_cfa_offset 20
 116              		@ sp needed
 117 0078 F0BD     		pop	{r4, r5, r6, r7, pc}
 118              	.L4:
 119 007a 00BF     		.align	2
 120              	.L3:
 121 007c 00380240 		.word	1073887232
 122 0080 00140240 		.word	1073878016
 123 0084 00001110 		.word	269549568
 124              		.cfi_endproc
 125              	.LFE126:
 127              		.section	.text._Error_Handler,"ax",%progbits
 128              		.align	1
 129              		.global	_Error_Handler
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu fpv4-sp-d16
 135              	_Error_Handler:
 136              	.LFB127:
ARM GAS  /tmp/ccA3oJbZ.s 			page 8


 267:Src/main.c    **** 
 268:Src/main.c    **** /* USER CODE BEGIN 4 */
 269:Src/main.c    **** 
 270:Src/main.c    ****   
 271:Src/main.c    **** /* USER CODE END 4 */
 272:Src/main.c    **** 
 273:Src/main.c    **** /**
 274:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 275:Src/main.c    ****   * @param  None
 276:Src/main.c    ****   * @retval None
 277:Src/main.c    ****   */
 278:Src/main.c    **** void _Error_Handler(char * file, int line)
 279:Src/main.c    **** {
 137              		.loc 1 279 0
 138              		.cfi_startproc
 139              		@ Volatile: function does not return.
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143              	.LVL5:
 144              	.L6:
 145 0000 FEE7     		b	.L6
 146              		.cfi_endproc
 147              	.LFE127:
 149              		.section	.text.MX_TIM4_Init,"ax",%progbits
 150              		.align	1
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu fpv4-sp-d16
 156              	MX_TIM4_Init:
 157              	.LFB125:
 197:Src/main.c    **** 
 158              		.loc 1 197 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 24
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 197:Src/main.c    **** 
 162              		.loc 1 197 0
 163 0000 00B5     		push	{lr}
 164              	.LCFI3:
 165              		.cfi_def_cfa_offset 4
 166              		.cfi_offset 14, -4
 167 0002 87B0     		sub	sp, sp, #28
 168              	.LCFI4:
 169              		.cfi_def_cfa_offset 32
 202:Src/main.c    ****   htim4.Init.Prescaler = 0;
 170              		.loc 1 202 0
 171 0004 1848     		ldr	r0, .L15
 172 0006 194B     		ldr	r3, .L15+4
 173 0008 0360     		str	r3, [r0]
 203:Src/main.c    ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 174              		.loc 1 203 0
 175 000a 0023     		movs	r3, #0
 176 000c 4360     		str	r3, [r0, #4]
 204:Src/main.c    ****   htim4.Init.Period = 0xFFFF;
 177              		.loc 1 204 0
ARM GAS  /tmp/ccA3oJbZ.s 			page 9


 178 000e 8360     		str	r3, [r0, #8]
 205:Src/main.c    ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 179              		.loc 1 205 0
 180 0010 4FF6FF72 		movw	r2, #65535
 181 0014 C260     		str	r2, [r0, #12]
 206:Src/main.c    ****   if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 182              		.loc 1 206 0
 183 0016 0361     		str	r3, [r0, #16]
 207:Src/main.c    ****   {
 184              		.loc 1 207 0
 185 0018 FFF7FEFF 		bl	HAL_TIM_IC_Init
 186              	.LVL6:
 187 001c B8B9     		cbnz	r0, .L12
 212:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 188              		.loc 1 212 0
 189 001e 0023     		movs	r3, #0
 190 0020 0493     		str	r3, [sp, #16]
 213:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 191              		.loc 1 213 0
 192 0022 0593     		str	r3, [sp, #20]
 214:Src/main.c    ****   {
 193              		.loc 1 214 0
 194 0024 04A9     		add	r1, sp, #16
 195 0026 1048     		ldr	r0, .L15
 196 0028 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 197              	.LVL7:
 198 002c 98B9     		cbnz	r0, .L13
 219:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 199              		.loc 1 219 0
 200 002e 0A23     		movs	r3, #10
 201 0030 0093     		str	r3, [sp]
 220:Src/main.c    ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 202              		.loc 1 220 0
 203 0032 0123     		movs	r3, #1
 204 0034 0193     		str	r3, [sp, #4]
 221:Src/main.c    ****   sConfigIC.ICFilter = 0;
 205              		.loc 1 221 0
 206 0036 0023     		movs	r3, #0
 207 0038 0293     		str	r3, [sp, #8]
 222:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 208              		.loc 1 222 0
 209 003a 0393     		str	r3, [sp, #12]
 223:Src/main.c    ****   {
 210              		.loc 1 223 0
 211 003c 0822     		movs	r2, #8
 212 003e 6946     		mov	r1, sp
 213 0040 0948     		ldr	r0, .L15
 214 0042 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 215              	.LVL8:
 216 0046 50B9     		cbnz	r0, .L14
 228:Src/main.c    **** 
 217              		.loc 1 228 0
 218 0048 07B0     		add	sp, sp, #28
 219              	.LCFI5:
 220              		.cfi_remember_state
 221              		.cfi_def_cfa_offset 4
 222              		@ sp needed
ARM GAS  /tmp/ccA3oJbZ.s 			page 10


 223 004a 5DF804FB 		ldr	pc, [sp], #4
 224              	.L12:
 225              	.LCFI6:
 226              		.cfi_restore_state
 209:Src/main.c    ****   }
 227              		.loc 1 209 0
 228 004e D121     		movs	r1, #209
 229 0050 0748     		ldr	r0, .L15+8
 230 0052 FFF7FEFF 		bl	_Error_Handler
 231              	.LVL9:
 232              	.L13:
 216:Src/main.c    ****   }
 233              		.loc 1 216 0
 234 0056 D821     		movs	r1, #216
 235 0058 0548     		ldr	r0, .L15+8
 236 005a FFF7FEFF 		bl	_Error_Handler
 237              	.LVL10:
 238              	.L14:
 225:Src/main.c    ****   }
 239              		.loc 1 225 0
 240 005e E121     		movs	r1, #225
 241 0060 0348     		ldr	r0, .L15+8
 242 0062 FFF7FEFF 		bl	_Error_Handler
 243              	.LVL11:
 244              	.L16:
 245 0066 00BF     		.align	2
 246              	.L15:
 247 0068 00000000 		.word	htim4
 248 006c 00080040 		.word	1073743872
 249 0070 00000000 		.word	.LC0
 250              		.cfi_endproc
 251              	.LFE125:
 253              		.section	.text.SystemClock_Config,"ax",%progbits
 254              		.align	1
 255              		.global	SystemClock_Config
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	SystemClock_Config:
 262              	.LFB124:
 142:Src/main.c    **** 
 263              		.loc 1 142 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 80
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 00B5     		push	{lr}
 268              	.LCFI7:
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 14, -4
 271 0002 95B0     		sub	sp, sp, #84
 272              	.LCFI8:
 273              		.cfi_def_cfa_offset 88
 274              	.LBB4:
 149:Src/main.c    **** 
 275              		.loc 1 149 0
 276 0004 0023     		movs	r3, #0
ARM GAS  /tmp/ccA3oJbZ.s 			page 11


 277 0006 0193     		str	r3, [sp, #4]
 278 0008 284A     		ldr	r2, .L23
 279 000a 116C     		ldr	r1, [r2, #64]
 280 000c 41F08051 		orr	r1, r1, #268435456
 281 0010 1164     		str	r1, [r2, #64]
 282 0012 126C     		ldr	r2, [r2, #64]
 283 0014 02F08052 		and	r2, r2, #268435456
 284 0018 0192     		str	r2, [sp, #4]
 285 001a 019A     		ldr	r2, [sp, #4]
 286              	.LBE4:
 287              	.LBB5:
 151:Src/main.c    **** 
 288              		.loc 1 151 0
 289 001c 0293     		str	r3, [sp, #8]
 290 001e 244A     		ldr	r2, .L23+4
 291 0020 1168     		ldr	r1, [r2]
 292 0022 41F48041 		orr	r1, r1, #16384
 293 0026 1160     		str	r1, [r2]
 294 0028 1268     		ldr	r2, [r2]
 295 002a 02F48042 		and	r2, r2, #16384
 296 002e 0292     		str	r2, [sp, #8]
 297 0030 029A     		ldr	r2, [sp, #8]
 298              	.LBE5:
 155:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 299              		.loc 1 155 0
 300 0032 0221     		movs	r1, #2
 301 0034 0891     		str	r1, [sp, #32]
 156:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 302              		.loc 1 156 0
 303 0036 0122     		movs	r2, #1
 304 0038 0B92     		str	r2, [sp, #44]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 305              		.loc 1 157 0
 306 003a 1022     		movs	r2, #16
 307 003c 0C92     		str	r2, [sp, #48]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 308              		.loc 1 158 0
 309 003e 0E91     		str	r1, [sp, #56]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 310              		.loc 1 159 0
 311 0040 0F93     		str	r3, [sp, #60]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 256;
 312              		.loc 1 160 0
 313 0042 1092     		str	r2, [sp, #64]
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 314              		.loc 1 161 0
 315 0044 4FF48073 		mov	r3, #256
 316 0048 1193     		str	r3, [sp, #68]
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 317              		.loc 1 162 0
 318 004a 0423     		movs	r3, #4
 319 004c 1293     		str	r3, [sp, #72]
 163:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 320              		.loc 1 163 0
 321 004e 1393     		str	r3, [sp, #76]
 164:Src/main.c    ****   {
 322              		.loc 1 164 0
ARM GAS  /tmp/ccA3oJbZ.s 			page 12


 323 0050 08A8     		add	r0, sp, #32
 324 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 325              	.LVL12:
 326 0056 08BB     		cbnz	r0, .L21
 171:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 327              		.loc 1 171 0
 328 0058 0F23     		movs	r3, #15
 329 005a 0393     		str	r3, [sp, #12]
 173:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 330              		.loc 1 173 0
 331 005c 0221     		movs	r1, #2
 332 005e 0491     		str	r1, [sp, #16]
 174:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 333              		.loc 1 174 0
 334 0060 0023     		movs	r3, #0
 335 0062 0593     		str	r3, [sp, #20]
 175:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 336              		.loc 1 175 0
 337 0064 4FF4C052 		mov	r2, #6144
 338 0068 0692     		str	r2, [sp, #24]
 176:Src/main.c    **** 
 339              		.loc 1 176 0
 340 006a 0793     		str	r3, [sp, #28]
 178:Src/main.c    ****   {
 341              		.loc 1 178 0
 342 006c 03A8     		add	r0, sp, #12
 343 006e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 344              	.LVL13:
 345 0072 B8B9     		cbnz	r0, .L22
 185:Src/main.c    **** 
 346              		.loc 1 185 0
 347 0074 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 348              	.LVL14:
 349 0078 0E4B     		ldr	r3, .L23+8
 350 007a A3FB0030 		umull	r3, r0, r3, r0
 351 007e 8009     		lsrs	r0, r0, #6
 352 0080 FFF7FEFF 		bl	HAL_SYSTICK_Config
 353              	.LVL15:
 189:Src/main.c    **** 
 354              		.loc 1 189 0
 355 0084 0420     		movs	r0, #4
 356 0086 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 357              	.LVL16:
 192:Src/main.c    **** }
 358              		.loc 1 192 0
 359 008a 0022     		movs	r2, #0
 360 008c 1146     		mov	r1, r2
 361 008e 4FF0FF30 		mov	r0, #-1
 362 0092 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 363              	.LVL17:
 193:Src/main.c    **** 
 364              		.loc 1 193 0
 365 0096 15B0     		add	sp, sp, #84
 366              	.LCFI9:
 367              		.cfi_remember_state
 368              		.cfi_def_cfa_offset 4
 369              		@ sp needed
ARM GAS  /tmp/ccA3oJbZ.s 			page 13


 370 0098 5DF804FB 		ldr	pc, [sp], #4
 371              	.L21:
 372              	.LCFI10:
 373              		.cfi_restore_state
 166:Src/main.c    ****   }
 374              		.loc 1 166 0
 375 009c A621     		movs	r1, #166
 376 009e 0648     		ldr	r0, .L23+12
 377 00a0 FFF7FEFF 		bl	_Error_Handler
 378              	.LVL18:
 379              	.L22:
 180:Src/main.c    ****   }
 380              		.loc 1 180 0
 381 00a4 B421     		movs	r1, #180
 382 00a6 0448     		ldr	r0, .L23+12
 383 00a8 FFF7FEFF 		bl	_Error_Handler
 384              	.LVL19:
 385              	.L24:
 386              		.align	2
 387              	.L23:
 388 00ac 00380240 		.word	1073887232
 389 00b0 00700040 		.word	1073770496
 390 00b4 D34D6210 		.word	274877907
 391 00b8 00000000 		.word	.LC0
 392              		.cfi_endproc
 393              	.LFE124:
 395              		.section	.text.main,"ax",%progbits
 396              		.align	1
 397              		.global	main
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 401              		.fpu fpv4-sp-d16
 403              	main:
 404              	.LFB123:
  73:Src/main.c    **** 
 405              		.loc 1 73 0
 406              		.cfi_startproc
 407              		@ Volatile: function does not return.
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 08B5     		push	{r3, lr}
 411              	.LCFI11:
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 3, -8
 414              		.cfi_offset 14, -4
  82:Src/main.c    **** 
 415              		.loc 1 82 0
 416 0002 FFF7FEFF 		bl	HAL_Init
 417              	.LVL20:
  89:Src/main.c    **** 
 418              		.loc 1 89 0
 419 0006 FFF7FEFF 		bl	SystemClock_Config
 420              	.LVL21:
  96:Src/main.c    ****   MX_TIM4_Init();
 421              		.loc 1 96 0
 422 000a FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  /tmp/ccA3oJbZ.s 			page 14


 423              	.LVL22:
  97:Src/main.c    **** 
 424              		.loc 1 97 0
 425 000e FFF7FEFF 		bl	MX_TIM4_Init
 426              	.LVL23:
 427              	.L26:
 100:Src/main.c    ****     {
 428              		.loc 1 100 0 discriminator 1
 429 0012 124B     		ldr	r3, .L32
 430 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431 0016 002B     		cmp	r3, #0
 432 0018 FBD0     		beq	.L26
 105:Src/main.c    ****     {
 433              		.loc 1 105 0
 434 001a 0821     		movs	r1, #8
 435 001c 1048     		ldr	r0, .L32+4
 436 001e FFF7FEFF 		bl	HAL_TIM_IC_Start_IT
 437              	.LVL24:
 438 0022 18B1     		cbz	r0, .L27
 107:Src/main.c    ****     }
 439              		.loc 1 107 0
 440 0024 6B21     		movs	r1, #107
 441 0026 0F48     		ldr	r0, .L32+8
 442 0028 FFF7FEFF 		bl	_Error_Handler
 443              	.LVL25:
 444              	.L27:
 115:Src/main.c    **** 
 445              		.loc 1 115 0
 446 002c 0122     		movs	r2, #1
 447 002e 2021     		movs	r1, #32
 448 0030 0D48     		ldr	r0, .L32+12
 449 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 450              	.LVL26:
 117:Src/main.c    ****     {
 451              		.loc 1 117 0
 452 0036 06E0     		b	.L28
 453              	.L29:
 119:Src/main.c    ****       HAL_Delay(250);
 454              		.loc 1 119 0
 455 0038 0821     		movs	r1, #8
 456 003a 0B48     		ldr	r0, .L32+12
 457 003c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 458              	.LVL27:
 120:Src/main.c    ****     }
 459              		.loc 1 120 0
 460 0040 FA20     		movs	r0, #250
 461 0042 FFF7FEFF 		bl	HAL_Delay
 462              	.LVL28:
 463              	.L28:
 117:Src/main.c    ****     {
 464              		.loc 1 117 0
 465 0046 094B     		ldr	r3, .L32+16
 466 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 467 004a 002B     		cmp	r3, #0
 468 004c F4D0     		beq	.L29
 123:Src/main.c    ****   /* USER CODE END 2 */
 469              		.loc 1 123 0
ARM GAS  /tmp/ccA3oJbZ.s 			page 15


 470 004e 0122     		movs	r2, #1
 471 0050 0421     		movs	r1, #4
 472 0052 0548     		ldr	r0, .L32+12
 473 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 474              	.LVL29:
 475              	.L30:
 476 0058 FEE7     		b	.L30
 477              	.L33:
 478 005a 00BF     		.align	2
 479              	.L32:
 480 005c 00000000 		.word	.LANCHOR0
 481 0060 00000000 		.word	htim4
 482 0064 00000000 		.word	.LC0
 483 0068 00140240 		.word	1073878016
 484 006c 00000000 		.word	.LANCHOR1
 485              		.cfi_endproc
 486              	.LFE123:
 488              		.section	.text.assert_failed,"ax",%progbits
 489              		.align	1
 490              		.global	assert_failed
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv4-sp-d16
 496              	assert_failed:
 497              	.LFB128:
 280:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 281:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 282:Src/main.c    ****   while(1) 
 283:Src/main.c    ****   {
 284:Src/main.c    ****   }
 285:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 286:Src/main.c    **** }
 287:Src/main.c    **** 
 288:Src/main.c    **** #ifdef USE_FULL_ASSERT
 289:Src/main.c    **** 
 290:Src/main.c    **** /**
 291:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 292:Src/main.c    ****    * where the assert_param error has occurred.
 293:Src/main.c    ****    * @param file: pointer to the source file name
 294:Src/main.c    ****    * @param line: assert_param error line source number
 295:Src/main.c    ****    * @retval None
 296:Src/main.c    ****    */
 297:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 298:Src/main.c    **** {
 498              		.loc 1 298 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503              	.LVL30:
 504 0000 7047     		bx	lr
 505              		.cfi_endproc
 506              	.LFE128:
 508              		.global	uPulse_width_T
 509              		.global	uPulse_width_2T
 510              		.global	uIRQ_Temp
ARM GAS  /tmp/ccA3oJbZ.s 			page 16


 511              		.comm	htim4,60,4
 512              		.global	start_capture
 513              		.section	.bss.start_capture,"aw",%nobits
 514              		.set	.LANCHOR0,. + 0
 517              	start_capture:
 518 0000 00       		.space	1
 519              		.section	.bss.uIRQ_Temp,"aw",%nobits
 522              	uIRQ_Temp:
 523 0000 00       		.space	1
 524              		.section	.bss.uPulse_width_2T,"aw",%nobits
 527              	uPulse_width_2T:
 528 0000 00       		.space	1
 529              		.section	.bss.uPulse_width_T,"aw",%nobits
 530              		.set	.LANCHOR1,. + 0
 533              	uPulse_width_T:
 534 0000 00       		.space	1
 535              		.section	.rodata.MX_TIM4_Init.str1.4,"aMS",%progbits,1
 536              		.align	2
 537              	.LC0:
 538 0000 5372632F 		.ascii	"Src/main.c\000"
 538      6D61696E 
 538      2E6300
 539              		.text
 540              	.Letext0:
 541              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 542              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 543              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 544              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 545              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 546              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 547              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 548              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 549              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 550              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 551              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 552              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 553              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 554              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 555              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 556              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 557              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 558              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccA3oJbZ.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccA3oJbZ.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccA3oJbZ.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccA3oJbZ.s:121    .text.MX_GPIO_Init:000000000000007c $d
     /tmp/ccA3oJbZ.s:128    .text._Error_Handler:0000000000000000 $t
     /tmp/ccA3oJbZ.s:135    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccA3oJbZ.s:150    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccA3oJbZ.s:156    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccA3oJbZ.s:247    .text.MX_TIM4_Init:0000000000000068 $d
                            *COM*:000000000000003c htim4
     /tmp/ccA3oJbZ.s:254    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccA3oJbZ.s:261    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccA3oJbZ.s:388    .text.SystemClock_Config:00000000000000ac $d
     /tmp/ccA3oJbZ.s:396    .text.main:0000000000000000 $t
     /tmp/ccA3oJbZ.s:403    .text.main:0000000000000000 main
     /tmp/ccA3oJbZ.s:480    .text.main:000000000000005c $d
     /tmp/ccA3oJbZ.s:489    .text.assert_failed:0000000000000000 $t
     /tmp/ccA3oJbZ.s:496    .text.assert_failed:0000000000000000 assert_failed
     /tmp/ccA3oJbZ.s:533    .bss.uPulse_width_T:0000000000000000 uPulse_width_T
     /tmp/ccA3oJbZ.s:527    .bss.uPulse_width_2T:0000000000000000 uPulse_width_2T
     /tmp/ccA3oJbZ.s:522    .bss.uIRQ_Temp:0000000000000000 uIRQ_Temp
     /tmp/ccA3oJbZ.s:517    .bss.start_capture:0000000000000000 start_capture
     /tmp/ccA3oJbZ.s:518    .bss.start_capture:0000000000000000 $d
     /tmp/ccA3oJbZ.s:523    .bss.uIRQ_Temp:0000000000000000 $d
     /tmp/ccA3oJbZ.s:528    .bss.uPulse_width_2T:0000000000000000 $d
     /tmp/ccA3oJbZ.s:534    .bss.uPulse_width_T:0000000000000000 $d
     /tmp/ccA3oJbZ.s:536    .rodata.MX_TIM4_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_IC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_IC_ConfigChannel
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
HAL_TIM_IC_Start_IT
HAL_GPIO_TogglePin
HAL_Delay
