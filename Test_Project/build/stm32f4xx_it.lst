ARM GAS  /tmp/ccu6AC34.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB123:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c **** ******************************************************************************
   3:Src/stm32f4xx_it.c **** * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c **** * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c **** ******************************************************************************
   6:Src/stm32f4xx_it.c **** *
   7:Src/stm32f4xx_it.c **** * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32f4xx_it.c **** *
   9:Src/stm32f4xx_it.c **** * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c **** * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c **** *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c **** *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c **** *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c **** *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c **** *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c **** *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c **** *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c **** *      without specific prior written permission.
  19:Src/stm32f4xx_it.c **** *
  20:Src/stm32f4xx_it.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c **** * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c **** * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c **** * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c **** * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c **** * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c **** * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c **** * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c **** * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c **** *
  31:Src/stm32f4xx_it.c **** ******************************************************************************
ARM GAS  /tmp/ccu6AC34.s 			page 2


  32:Src/stm32f4xx_it.c **** */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** /* Variable declaration */
  40:Src/stm32f4xx_it.c **** 
  41:Src/stm32f4xx_it.c **** /* temp[] vector */
  42:Src/stm32f4xx_it.c **** extern int i;
  43:Src/stm32f4xx_it.c **** extern uint16_t tmp[28];
  44:Src/stm32f4xx_it.c **** extern uint16_t tmp2[28];
  45:Src/stm32f4xx_it.c **** /* uwDiffCapture will be initialized in Main() */
  46:Src/stm32f4xx_it.c **** volatile extern uint16_t uwDiffCapture;
  47:Src/stm32f4xx_it.c **** /* uIRQ_Temp variable will be initialized in Main() */
  48:Src/stm32f4xx_it.c **** volatile extern unsigned char uIRQ_Temp;
  49:Src/stm32f4xx_it.c **** /* uPulse_Width_2T variable will be initialized here */
  50:Src/stm32f4xx_it.c **** extern unsigned char uPulse_Width_2T;
  51:Src/stm32f4xx_it.c **** /* start_capture variable to designate that the hardware_trigger occurred */
  52:Src/stm32f4xx_it.c **** extern unsigned char start_capture;
  53:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  54:Src/stm32f4xx_it.c **** 
  55:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  56:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim4;
  57:Src/stm32f4xx_it.c **** 
  58:Src/stm32f4xx_it.c **** /******************************************************************************/
  59:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  60:Src/stm32f4xx_it.c **** /******************************************************************************/
  61:Src/stm32f4xx_it.c **** 
  62:Src/stm32f4xx_it.c **** /**
  63:Src/stm32f4xx_it.c ****  * @brief This function handles Non maskable interrupt.
  64:Src/stm32f4xx_it.c ****  */
  65:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  66:Src/stm32f4xx_it.c **** {
  28              		.loc 1 66 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE123:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB124:
  67:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  68:Src/stm32f4xx_it.c **** 
  69:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  70:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  71:Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccu6AC34.s 			page 3


  72:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  73:Src/stm32f4xx_it.c **** }
  74:Src/stm32f4xx_it.c **** 
  75:Src/stm32f4xx_it.c **** /**
  76:Src/stm32f4xx_it.c ****  * @brief This function handles Hard fault interrupt.
  77:Src/stm32f4xx_it.c ****  */
  78:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  79:Src/stm32f4xx_it.c **** {
  47              		.loc 1 79 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE124:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB125:
  80:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  81:Src/stm32f4xx_it.c **** 
  82:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  83:Src/stm32f4xx_it.c ****   while (1)
  84:Src/stm32f4xx_it.c ****     {
  85:Src/stm32f4xx_it.c ****     }
  86:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  87:Src/stm32f4xx_it.c **** 
  88:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  89:Src/stm32f4xx_it.c **** }
  90:Src/stm32f4xx_it.c **** 
  91:Src/stm32f4xx_it.c **** /**
  92:Src/stm32f4xx_it.c ****  * @brief This function handles Memory management fault.
  93:Src/stm32f4xx_it.c ****  */
  94:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
  95:Src/stm32f4xx_it.c **** {
  68              		.loc 1 95 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE125:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
ARM GAS  /tmp/ccu6AC34.s 			page 4


  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB126:
  96:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  97:Src/stm32f4xx_it.c **** 
  98:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  99:Src/stm32f4xx_it.c ****   while (1)
 100:Src/stm32f4xx_it.c ****     {
 101:Src/stm32f4xx_it.c ****     }
 102:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
 103:Src/stm32f4xx_it.c **** 
 104:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
 105:Src/stm32f4xx_it.c **** }
 106:Src/stm32f4xx_it.c **** 
 107:Src/stm32f4xx_it.c **** /**
 108:Src/stm32f4xx_it.c ****  * @brief This function handles Pre-fetch fault, memory access fault.
 109:Src/stm32f4xx_it.c ****  */
 110:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 111:Src/stm32f4xx_it.c **** {
  89              		.loc 1 111 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE126:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB127:
 112:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 113:Src/stm32f4xx_it.c **** 
 114:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 115:Src/stm32f4xx_it.c ****   while (1)
 116:Src/stm32f4xx_it.c ****     {
 117:Src/stm32f4xx_it.c ****     }
 118:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 119:Src/stm32f4xx_it.c **** 
 120:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 121:Src/stm32f4xx_it.c **** }
 122:Src/stm32f4xx_it.c **** 
 123:Src/stm32f4xx_it.c **** /**
 124:Src/stm32f4xx_it.c ****  * @brief This function handles Undefined instruction or illegal state.
 125:Src/stm32f4xx_it.c ****  */
 126:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 127:Src/stm32f4xx_it.c **** {
 110              		.loc 1 127 0
ARM GAS  /tmp/ccu6AC34.s 			page 5


 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE127:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB128:
 128:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 129:Src/stm32f4xx_it.c **** 
 130:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 131:Src/stm32f4xx_it.c ****   while (1)
 132:Src/stm32f4xx_it.c ****     {
 133:Src/stm32f4xx_it.c ****     }
 134:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 135:Src/stm32f4xx_it.c **** 
 136:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 137:Src/stm32f4xx_it.c **** }
 138:Src/stm32f4xx_it.c **** 
 139:Src/stm32f4xx_it.c **** /**
 140:Src/stm32f4xx_it.c ****  * @brief This function handles System service call via SWI instruction.
 141:Src/stm32f4xx_it.c ****  */
 142:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 143:Src/stm32f4xx_it.c **** {
 131              		.loc 1 143 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE128:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB129:
 144:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 147:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 148:Src/stm32f4xx_it.c **** 
 149:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
ARM GAS  /tmp/ccu6AC34.s 			page 6


 150:Src/stm32f4xx_it.c **** }
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c **** /**
 153:Src/stm32f4xx_it.c ****  * @brief This function handles Debug monitor.
 154:Src/stm32f4xx_it.c ****  */
 155:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 156:Src/stm32f4xx_it.c **** {
 150              		.loc 1 156 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE129:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB130:
 157:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 158:Src/stm32f4xx_it.c **** 
 159:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 160:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 163:Src/stm32f4xx_it.c **** }
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c **** /**
 166:Src/stm32f4xx_it.c ****  * @brief This function handles Pendable request for system service.
 167:Src/stm32f4xx_it.c ****  */
 168:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 169:Src/stm32f4xx_it.c **** {
 169              		.loc 1 169 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE130:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB131:
 170:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 171:Src/stm32f4xx_it.c **** 
 172:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
ARM GAS  /tmp/ccu6AC34.s 			page 7


 173:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 174:Src/stm32f4xx_it.c **** 
 175:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 176:Src/stm32f4xx_it.c **** }
 177:Src/stm32f4xx_it.c **** 
 178:Src/stm32f4xx_it.c **** /**
 179:Src/stm32f4xx_it.c ****  * @brief This function handles System tick timer.
 180:Src/stm32f4xx_it.c ****  */
 181:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 182:Src/stm32f4xx_it.c **** {
 188              		.loc 1 182 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 182 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 183:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 184:Src/stm32f4xx_it.c **** 
 185:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 186:Src/stm32f4xx_it.c ****   HAL_IncTick();
 198              		.loc 1 186 0
 199 0002 FFF7FEFF 		bl	HAL_IncTick
 200              	.LVL0:
 187:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 201              		.loc 1 187 0
 202 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 203              	.LVL1:
 204 000a 08BD     		pop	{r3, pc}
 205              		.cfi_endproc
 206              	.LFE131:
 208              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 209              		.align	1
 210              		.global	TIM4_IRQHandler
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
 216              	TIM4_IRQHandler:
 217              	.LFB132:
 188:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 189:Src/stm32f4xx_it.c **** 
 190:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 191:Src/stm32f4xx_it.c **** }
 192:Src/stm32f4xx_it.c **** 
 193:Src/stm32f4xx_it.c **** /******************************************************************************/
 194:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 195:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 196:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 197:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 198:Src/stm32f4xx_it.c **** /******************************************************************************/
 199:Src/stm32f4xx_it.c **** 
 200:Src/stm32f4xx_it.c **** /**
 201:Src/stm32f4xx_it.c ****  * @brief This function handles TIM4 global interrupt.
ARM GAS  /tmp/ccu6AC34.s 			page 8


 202:Src/stm32f4xx_it.c ****  */
 203:Src/stm32f4xx_it.c **** void TIM4_IRQHandler(void)
 204:Src/stm32f4xx_it.c **** {
 218              		.loc 1 204 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222 0000 10B5     		push	{r4, lr}
 223              	.LCFI1:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 4, -8
 226              		.cfi_offset 14, -4
 205:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 206:Src/stm32f4xx_it.c ****   /* uIRQ_Temp = 0; */
 207:Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 208:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 227              		.loc 1 208 0
 228 0002 134C     		ldr	r4, .L20
 229 0004 2046     		mov	r0, r4
 230 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 231              	.LVL2:
 209:Src/stm32f4xx_it.c **** 
 210:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 211:Src/stm32f4xx_it.c ****   tmp[1] = HAL_TIM_ReadCapturedValue(&htim4, TIM_CHANNEL_3);
 232              		.loc 1 211 0
 233 000a 0821     		movs	r1, #8
 234 000c 2046     		mov	r0, r4
 235 000e FFF7FEFF 		bl	HAL_TIM_ReadCapturedValue
 236              	.LVL3:
 237 0012 80B2     		uxth	r0, r0
 238 0014 0F4B     		ldr	r3, .L20+4
 239 0016 5880     		strh	r0, [r3, #2]	@ movhi
 212:Src/stm32f4xx_it.c ****   
 213:Src/stm32f4xx_it.c ****   if(tmp[1] > tmp[0])
 240              		.loc 1 213 0
 241 0018 1B88     		ldrh	r3, [r3]
 242 001a 9842     		cmp	r0, r3
 243 001c 12D9     		bls	.L16
 214:Src/stm32f4xx_it.c ****     {
 215:Src/stm32f4xx_it.c ****       uwDiffCapture = (tmp[1]-tmp[0]);
 244              		.loc 1 215 0
 245 001e C31A     		subs	r3, r0, r3
 246 0020 9BB2     		uxth	r3, r3
 247 0022 0D4A     		ldr	r2, .L20+8
 248 0024 1380     		strh	r3, [r2]	@ movhi
 249              	.L17:
 216:Src/stm32f4xx_it.c ****     }
 217:Src/stm32f4xx_it.c ****   else /* tmp[1] <= tmp[0] */
 218:Src/stm32f4xx_it.c ****     {
 219:Src/stm32f4xx_it.c ****       uwDiffCapture = (0xFFFF-tmp[1])+tmp[0];
 220:Src/stm32f4xx_it.c ****     }
 221:Src/stm32f4xx_it.c ****   /* Checking for pulse of 2T width */
 222:Src/stm32f4xx_it.c ****   if((uwDiffCapture > 12600) && (uwDiffCapture < 12900))
 250              		.loc 1 222 0
 251 0026 0C4B     		ldr	r3, .L20+8
 252 0028 1B88     		ldrh	r3, [r3]
 253 002a 9BB2     		uxth	r3, r3
ARM GAS  /tmp/ccu6AC34.s 			page 9


 254 002c 43F23812 		movw	r2, #12600
 255 0030 9342     		cmp	r3, r2
 256 0032 01D9     		bls	.L18
 257              		.loc 1 222 0 is_stmt 0 discriminator 1
 258 0034 084B     		ldr	r3, .L20+8
 259 0036 1B88     		ldrh	r3, [r3]
 260              	.L18:
 223:Src/stm32f4xx_it.c ****     {
 224:Src/stm32f4xx_it.c ****        
 225:Src/stm32f4xx_it.c ****     }
 226:Src/stm32f4xx_it.c ****   
 227:Src/stm32f4xx_it.c ****   /* Left shifting the vector */
 228:Src/stm32f4xx_it.c ****   tmp[0] = tmp[1];
 261              		.loc 1 228 0 is_stmt 1
 262 0038 064B     		ldr	r3, .L20+4
 263 003a 1880     		strh	r0, [r3]	@ movhi
 229:Src/stm32f4xx_it.c ****   /* Updating this variable tells that interrupt has occurred */
 230:Src/stm32f4xx_it.c ****   uIRQ_Temp = 1;
 264              		.loc 1 230 0
 265 003c 0122     		movs	r2, #1
 266 003e 074B     		ldr	r3, .L20+12
 267 0040 1A70     		strb	r2, [r3]
 268 0042 10BD     		pop	{r4, pc}
 269              	.L16:
 219:Src/stm32f4xx_it.c ****     }
 270              		.loc 1 219 0
 271 0044 1B1A     		subs	r3, r3, r0
 272 0046 013B     		subs	r3, r3, #1
 273 0048 9BB2     		uxth	r3, r3
 274 004a 034A     		ldr	r2, .L20+8
 275 004c 1380     		strh	r3, [r2]	@ movhi
 276 004e EAE7     		b	.L17
 277              	.L21:
 278              		.align	2
 279              	.L20:
 280 0050 00000000 		.word	htim4
 281 0054 00000000 		.word	tmp
 282 0058 00000000 		.word	uwDiffCapture
 283 005c 00000000 		.word	uIRQ_Temp
 284              		.cfi_endproc
 285              	.LFE132:
 287              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 288              		.align	1
 289              		.global	EXTI15_10_IRQHandler
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	EXTI15_10_IRQHandler:
 296              	.LFB133:
 231:Src/stm32f4xx_it.c ****   
 232:Src/stm32f4xx_it.c ****  
 233:Src/stm32f4xx_it.c ****   
 234:Src/stm32f4xx_it.c ****   
 235:Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 236:Src/stm32f4xx_it.c **** }
 237:Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccu6AC34.s 			page 10


 238:Src/stm32f4xx_it.c **** /**
 239:Src/stm32f4xx_it.c ****  * @brief This function handles EXTI line[15:10] interrupts.
 240:Src/stm32f4xx_it.c ****  */
 241:Src/stm32f4xx_it.c **** void EXTI15_10_IRQHandler(void)
 242:Src/stm32f4xx_it.c **** {
 297              		.loc 1 242 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 08B5     		push	{r3, lr}
 302              	.LCFI2:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
 243:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 244:Src/stm32f4xx_it.c **** 
 245:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 246:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_12);
 306              		.loc 1 246 0
 307 0002 4FF48050 		mov	r0, #4096
 308 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 309              	.LVL4:
 247:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 248:Src/stm32f4xx_it.c ****   start_capture = 1;
 310              		.loc 1 248 0
 311 000a 0122     		movs	r2, #1
 312 000c 014B     		ldr	r3, .L24
 313 000e 1A70     		strb	r2, [r3]
 314 0010 08BD     		pop	{r3, pc}
 315              	.L25:
 316 0012 00BF     		.align	2
 317              	.L24:
 318 0014 00000000 		.word	start_capture
 319              		.cfi_endproc
 320              	.LFE133:
 322              		.text
 323              	.Letext0:
 324              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 325              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 326              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 327              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 328              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 329              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 330              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 331              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 332              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 333              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 334              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 335              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 336              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 337              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 338              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccu6AC34.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccu6AC34.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccu6AC34.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccu6AC34.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccu6AC34.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccu6AC34.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccu6AC34.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccu6AC34.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccu6AC34.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccu6AC34.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccu6AC34.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccu6AC34.s:122    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccu6AC34.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccu6AC34.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccu6AC34.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccu6AC34.s:160    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccu6AC34.s:167    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccu6AC34.s:179    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccu6AC34.s:186    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccu6AC34.s:209    .text.TIM4_IRQHandler:0000000000000000 $t
     /tmp/ccu6AC34.s:216    .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
     /tmp/ccu6AC34.s:280    .text.TIM4_IRQHandler:0000000000000050 $d
     /tmp/ccu6AC34.s:288    .text.EXTI15_10_IRQHandler:0000000000000000 $t
     /tmp/ccu6AC34.s:295    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
     /tmp/ccu6AC34.s:318    .text.EXTI15_10_IRQHandler:0000000000000014 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_TIM_IRQHandler
HAL_TIM_ReadCapturedValue
htim4
tmp
uwDiffCapture
uIRQ_Temp
HAL_GPIO_EXTI_IRQHandler
start_capture
