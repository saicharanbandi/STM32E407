ARM GAS  /tmp/ccvD7piF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB123:
  27              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /**
   2:Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Src/stm32f4xx_it.c ****   *
   7:Src/stm32f4xx_it.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f4xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f4xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f4xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f4xx_it.c ****   *
  20:Src/stm32f4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f4xx_it.c ****   *
  31:Src/stm32f4xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccvD7piF.s 			page 2


  32:Src/stm32f4xx_it.c ****   */
  33:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f4xx_it.c **** #include "stm32f4xx_hal.h"
  35:Src/stm32f4xx_it.c **** #include "stm32f4xx.h"
  36:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  37:Src/stm32f4xx_it.c **** 
  38:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f4xx_it.c **** /* Captured values */
  40:Src/stm32f4xx_it.c **** uint32_t uwIC3Value1 = 0;
  41:Src/stm32f4xx_it.c **** uint32_t uwIC3Value2 = 0;
  42:Src/stm32f4xx_it.c **** uint32_t uwDiffCapture = 0;
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /* Capture Index */
  45:Src/stm32f4xx_it.c **** uint16_t uhCaptureIndex = 0;
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /* pulse_T value */
  48:Src/stm32f4xx_it.c **** /* static float pulse_T = 0; */
  49:Src/stm32f4xx_it.c **** /* pulse_Frequency value */
  50:Src/stm32f4xx_it.c **** uint32_t  pulse_Frequency = 0;
  51:Src/stm32f4xx_it.c **** /* T value as 125 usec */
  52:Src/stm32f4xx_it.c **** /* static float T = 125*0.000001; */
  53:Src/stm32f4xx_it.c **** 
  54:Src/stm32f4xx_it.c **** /* Freq_T is 8kHz */
  55:Src/stm32f4xx_it.c **** /* static uint32_t Freq_T = 8000; */
  56:Src/stm32f4xx_it.c **** 
  57:Src/stm32f4xx_it.c **** /* Delta_T value as 25 usec */
  58:Src/stm32f4xx_it.c **** /* static float Delta_T = 25*0.000001; */
  59:Src/stm32f4xx_it.c **** 
  60:Src/stm32f4xx_it.c **** /* Freq_Delta_T value is 40kHz */
  61:Src/stm32f4xx_it.c **** /* static uint32_t Freq_Delta_T = 4000; */
  62:Src/stm32f4xx_it.c **** 
  63:Src/stm32f4xx_it.c **** /* Interrupt_Detected variable called from IRQ */
  64:Src/stm32f4xx_it.c **** extern unsigned char interrupt_detected;
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c **** /* uPulseFrequency variable declaration */
  67:Src/stm32f4xx_it.c **** extern unsigned char uPulseFrequency;
  68:Src/stm32f4xx_it.c **** extern unsigned char uPulseFrequency2;
  69:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  70:Src/stm32f4xx_it.c **** 
  71:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  72:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim4;
  73:Src/stm32f4xx_it.c **** 
  74:Src/stm32f4xx_it.c **** /******************************************************************************/
  75:Src/stm32f4xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  76:Src/stm32f4xx_it.c **** /******************************************************************************/
  77:Src/stm32f4xx_it.c **** 
  78:Src/stm32f4xx_it.c **** /**
  79:Src/stm32f4xx_it.c **** * @brief This function handles Non maskable interrupt.
  80:Src/stm32f4xx_it.c **** */
  81:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  82:Src/stm32f4xx_it.c **** {
  28              		.loc 1 82 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
ARM GAS  /tmp/ccvD7piF.s 			page 3


  34              		.cfi_endproc
  35              	.LFE123:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB124:
  83:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  84:Src/stm32f4xx_it.c **** 
  85:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  86:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  87:Src/stm32f4xx_it.c **** 
  88:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  89:Src/stm32f4xx_it.c **** }
  90:Src/stm32f4xx_it.c **** 
  91:Src/stm32f4xx_it.c **** /**
  92:Src/stm32f4xx_it.c **** * @brief This function handles Hard fault interrupt.
  93:Src/stm32f4xx_it.c **** */
  94:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  95:Src/stm32f4xx_it.c **** {
  47              		.loc 1 95 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE124:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB125:
  96:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  97:Src/stm32f4xx_it.c **** 
  98:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  99:Src/stm32f4xx_it.c ****   while (1)
 100:Src/stm32f4xx_it.c ****   {
 101:Src/stm32f4xx_it.c ****   }
 102:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
 103:Src/stm32f4xx_it.c **** 
 104:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
 105:Src/stm32f4xx_it.c **** }
 106:Src/stm32f4xx_it.c **** 
 107:Src/stm32f4xx_it.c **** /**
 108:Src/stm32f4xx_it.c **** * @brief This function handles Memory management fault.
 109:Src/stm32f4xx_it.c **** */
ARM GAS  /tmp/ccvD7piF.s 			page 4


 110:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 111:Src/stm32f4xx_it.c **** {
  68              		.loc 1 111 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE125:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB126:
 112:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 113:Src/stm32f4xx_it.c **** 
 114:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 115:Src/stm32f4xx_it.c ****   while (1)
 116:Src/stm32f4xx_it.c ****   {
 117:Src/stm32f4xx_it.c ****   }
 118:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
 119:Src/stm32f4xx_it.c **** 
 120:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
 121:Src/stm32f4xx_it.c **** }
 122:Src/stm32f4xx_it.c **** 
 123:Src/stm32f4xx_it.c **** /**
 124:Src/stm32f4xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 125:Src/stm32f4xx_it.c **** */
 126:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 127:Src/stm32f4xx_it.c **** {
  89              		.loc 1 127 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE126:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB127:
 128:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
ARM GAS  /tmp/ccvD7piF.s 			page 5


 129:Src/stm32f4xx_it.c **** 
 130:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 131:Src/stm32f4xx_it.c ****   while (1)
 132:Src/stm32f4xx_it.c ****   {
 133:Src/stm32f4xx_it.c ****   }
 134:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 135:Src/stm32f4xx_it.c **** 
 136:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 137:Src/stm32f4xx_it.c **** }
 138:Src/stm32f4xx_it.c **** 
 139:Src/stm32f4xx_it.c **** /**
 140:Src/stm32f4xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 141:Src/stm32f4xx_it.c **** */
 142:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 143:Src/stm32f4xx_it.c **** {
 110              		.loc 1 143 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE127:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB128:
 144:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 145:Src/stm32f4xx_it.c **** 
 146:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 147:Src/stm32f4xx_it.c ****   while (1)
 148:Src/stm32f4xx_it.c ****   {
 149:Src/stm32f4xx_it.c ****   }
 150:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 151:Src/stm32f4xx_it.c **** 
 152:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 153:Src/stm32f4xx_it.c **** }
 154:Src/stm32f4xx_it.c **** 
 155:Src/stm32f4xx_it.c **** /**
 156:Src/stm32f4xx_it.c **** * @brief This function handles System service call via SWI instruction.
 157:Src/stm32f4xx_it.c **** */
 158:Src/stm32f4xx_it.c **** void SVC_Handler(void)
 159:Src/stm32f4xx_it.c **** {
 131              		.loc 1 159 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
ARM GAS  /tmp/ccvD7piF.s 			page 6


 138              	.LFE128:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB129:
 160:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 161:Src/stm32f4xx_it.c **** 
 162:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 163:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 164:Src/stm32f4xx_it.c **** 
 165:Src/stm32f4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 166:Src/stm32f4xx_it.c **** }
 167:Src/stm32f4xx_it.c **** 
 168:Src/stm32f4xx_it.c **** /**
 169:Src/stm32f4xx_it.c **** * @brief This function handles Debug monitor.
 170:Src/stm32f4xx_it.c **** */
 171:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 172:Src/stm32f4xx_it.c **** {
 150              		.loc 1 172 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE129:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB130:
 173:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 174:Src/stm32f4xx_it.c **** 
 175:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 176:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 177:Src/stm32f4xx_it.c **** 
 178:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 179:Src/stm32f4xx_it.c **** }
 180:Src/stm32f4xx_it.c **** 
 181:Src/stm32f4xx_it.c **** /**
 182:Src/stm32f4xx_it.c **** * @brief This function handles Pendable request for system service.
 183:Src/stm32f4xx_it.c **** */
 184:Src/stm32f4xx_it.c **** void PendSV_Handler(void)
 185:Src/stm32f4xx_it.c **** {
 169              		.loc 1 185 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccvD7piF.s 			page 7


 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE130:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB131:
 186:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 187:Src/stm32f4xx_it.c **** 
 188:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 189:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 190:Src/stm32f4xx_it.c **** 
 191:Src/stm32f4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 192:Src/stm32f4xx_it.c **** }
 193:Src/stm32f4xx_it.c **** 
 194:Src/stm32f4xx_it.c **** /**
 195:Src/stm32f4xx_it.c **** * @brief This function handles System tick timer.
 196:Src/stm32f4xx_it.c **** */
 197:Src/stm32f4xx_it.c **** void SysTick_Handler(void)
 198:Src/stm32f4xx_it.c **** {
 188              		.loc 1 198 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 198 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 199:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 200:Src/stm32f4xx_it.c **** 
 201:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 202:Src/stm32f4xx_it.c ****   HAL_IncTick();
 198              		.loc 1 202 0
 199 0002 FFF7FEFF 		bl	HAL_IncTick
 200              	.LVL0:
 203:Src/stm32f4xx_it.c ****   HAL_SYSTICK_IRQHandler();
 201              		.loc 1 203 0
 202 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 203              	.LVL1:
 204 000a 08BD     		pop	{r3, pc}
 205              		.cfi_endproc
 206              	.LFE131:
 208              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 209              		.align	1
 210              		.global	TIM4_IRQHandler
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccvD7piF.s 			page 8


 216              	TIM4_IRQHandler:
 217              	.LFB132:
 204:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 205:Src/stm32f4xx_it.c **** 
 206:Src/stm32f4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 207:Src/stm32f4xx_it.c **** }
 208:Src/stm32f4xx_it.c **** 
 209:Src/stm32f4xx_it.c **** /******************************************************************************/
 210:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 211:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 212:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 213:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 214:Src/stm32f4xx_it.c **** /******************************************************************************/
 215:Src/stm32f4xx_it.c **** 
 216:Src/stm32f4xx_it.c **** /**
 217:Src/stm32f4xx_it.c **** * @brief This function handles TIM4 global interrupt.
 218:Src/stm32f4xx_it.c **** */
 219:Src/stm32f4xx_it.c **** void TIM4_IRQHandler(void)
 220:Src/stm32f4xx_it.c **** {
 218              		.loc 1 220 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222 0000 08B5     		push	{r3, lr}
 223              	.LCFI1:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 3, -8
 226              		.cfi_offset 14, -4
 221:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 222:Src/stm32f4xx_it.c **** 
 223:Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 224:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 227              		.loc 1 224 0
 228 0002 2448     		ldr	r0, .L25
 229 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 230              	.LVL2:
 225:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 226:Src/stm32f4xx_it.c ****   if(uhCaptureIndex == 0)
 231              		.loc 1 226 0
 232 0008 234B     		ldr	r3, .L25+4
 233 000a 1B88     		ldrh	r3, [r3]
 234 000c BBB1     		cbz	r3, .L23
 227:Src/stm32f4xx_it.c ****     {
 228:Src/stm32f4xx_it.c ****       /* Get the 1st Input Capture value */
 229:Src/stm32f4xx_it.c ****       uwIC3Value1 = HAL_TIM_ReadCapturedValue(&htim4, TIM_CHANNEL_3);
 230:Src/stm32f4xx_it.c ****       uhCaptureIndex = 1;
 231:Src/stm32f4xx_it.c ****     }
 232:Src/stm32f4xx_it.c ****   else if(uhCaptureIndex == 1)
 235              		.loc 1 232 0
 236 000e 012B     		cmp	r3, #1
 237 0010 1FD0     		beq	.L24
 238              	.L17:
 233:Src/stm32f4xx_it.c ****     {
 234:Src/stm32f4xx_it.c ****       /* Get the 2nd Input Capture value */
 235:Src/stm32f4xx_it.c ****       uwIC3Value2 = HAL_TIM_ReadCapturedValue(&htim4, TIM_CHANNEL_3);
 236:Src/stm32f4xx_it.c ****       /* Capture comuputation */
 237:Src/stm32f4xx_it.c ****       if (uwIC3Value2 > uwIC3Value1)
ARM GAS  /tmp/ccvD7piF.s 			page 9


 238:Src/stm32f4xx_it.c **** 	{
 239:Src/stm32f4xx_it.c **** 	  uwDiffCapture = (uwIC3Value2 - uwIC3Value1);
 240:Src/stm32f4xx_it.c **** 	}
 241:Src/stm32f4xx_it.c ****       else /* (uwIC3Value2 <= uwIC3Value1) */
 242:Src/stm32f4xx_it.c **** 	{
 243:Src/stm32f4xx_it.c **** 	  uwDiffCapture = ((0xFFFF - uwIC3Value1) + uwIC3Value2);
 244:Src/stm32f4xx_it.c **** 	}
 245:Src/stm32f4xx_it.c ****       /* Calculation of 'window_T' */
 246:Src/stm32f4xx_it.c ****       /* pulse_T = uwDiffCapture / (2*HAL_RCC_GetPCLK1Freq()); */
 247:Src/stm32f4xx_it.c ****       /* Calcualtion of pulse_Frequency */
 248:Src/stm32f4xx_it.c ****       pulse_Frequency = (2*HAL_RCC_GetPCLK1Freq()) / uwDiffCapture;
 249:Src/stm32f4xx_it.c ****       uhCaptureIndex = 0;
 250:Src/stm32f4xx_it.c ****     }
 251:Src/stm32f4xx_it.c ****   if((uwDiffCapture > 6000) && (uwDiffCapture < 6900))
 239              		.loc 1 251 0
 240 0012 224B     		ldr	r3, .L25+8
 241 0014 1B68     		ldr	r3, [r3]
 242 0016 A3F5BB52 		sub	r2, r3, #5984
 243 001a 113A     		subs	r2, r2, #17
 244 001c 40F28231 		movw	r1, #898
 245 0020 8A42     		cmp	r2, r1
 246 0022 02D8     		bhi	.L20
 252:Src/stm32f4xx_it.c ****     {
 253:Src/stm32f4xx_it.c ****       uPulseFrequency = 1;
 247              		.loc 1 253 0
 248 0024 0121     		movs	r1, #1
 249 0026 1E4A     		ldr	r2, .L25+12
 250 0028 1170     		strb	r1, [r2]
 251              	.L20:
 254:Src/stm32f4xx_it.c ****     }
 255:Src/stm32f4xx_it.c ****   if((uwDiffCapture > 12600) && (uwDiffCapture < 12900))
 252              		.loc 1 255 0
 253 002a A3F54453 		sub	r3, r3, #12544
 254 002e 393B     		subs	r3, r3, #57
 255 0030 B3F5957F 		cmp	r3, #298
 256 0034 02D8     		bhi	.L15
 256:Src/stm32f4xx_it.c ****     {
 257:Src/stm32f4xx_it.c ****       uPulseFrequency2 = 1;
 257              		.loc 1 257 0
 258 0036 0122     		movs	r2, #1
 259 0038 1A4B     		ldr	r3, .L25+16
 260 003a 1A70     		strb	r2, [r3]
 261              	.L15:
 262 003c 08BD     		pop	{r3, pc}
 263              	.L23:
 229:Src/stm32f4xx_it.c ****       uhCaptureIndex = 1;
 264              		.loc 1 229 0
 265 003e 0821     		movs	r1, #8
 266 0040 1448     		ldr	r0, .L25
 267 0042 FFF7FEFF 		bl	HAL_TIM_ReadCapturedValue
 268              	.LVL3:
 269 0046 184B     		ldr	r3, .L25+20
 270 0048 1860     		str	r0, [r3]
 230:Src/stm32f4xx_it.c ****     }
 271              		.loc 1 230 0
 272 004a 0122     		movs	r2, #1
 273 004c 124B     		ldr	r3, .L25+4
ARM GAS  /tmp/ccvD7piF.s 			page 10


 274 004e 1A80     		strh	r2, [r3]	@ movhi
 275 0050 DFE7     		b	.L17
 276              	.L24:
 235:Src/stm32f4xx_it.c ****       /* Capture comuputation */
 277              		.loc 1 235 0
 278 0052 0821     		movs	r1, #8
 279 0054 0F48     		ldr	r0, .L25
 280 0056 FFF7FEFF 		bl	HAL_TIM_ReadCapturedValue
 281              	.LVL4:
 282 005a 144B     		ldr	r3, .L25+24
 283 005c 1860     		str	r0, [r3]
 237:Src/stm32f4xx_it.c **** 	{
 284              		.loc 1 237 0
 285 005e 124B     		ldr	r3, .L25+20
 286 0060 1B68     		ldr	r3, [r3]
 287 0062 9842     		cmp	r0, r3
 288 0064 0FD9     		bls	.L18
 239:Src/stm32f4xx_it.c **** 	}
 289              		.loc 1 239 0
 290 0066 C01A     		subs	r0, r0, r3
 291 0068 0C4B     		ldr	r3, .L25+8
 292 006a 1860     		str	r0, [r3]
 293              	.L19:
 248:Src/stm32f4xx_it.c ****       uhCaptureIndex = 0;
 294              		.loc 1 248 0
 295 006c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 296              	.LVL5:
 297 0070 4000     		lsls	r0, r0, #1
 298 0072 0A4B     		ldr	r3, .L25+8
 299 0074 1B68     		ldr	r3, [r3]
 300 0076 B0FBF3F0 		udiv	r0, r0, r3
 301 007a 0D4B     		ldr	r3, .L25+28
 302 007c 1860     		str	r0, [r3]
 249:Src/stm32f4xx_it.c ****     }
 303              		.loc 1 249 0
 304 007e 0022     		movs	r2, #0
 305 0080 054B     		ldr	r3, .L25+4
 306 0082 1A80     		strh	r2, [r3]	@ movhi
 307 0084 C5E7     		b	.L17
 308              	.L18:
 243:Src/stm32f4xx_it.c **** 	}
 309              		.loc 1 243 0
 310 0086 C01A     		subs	r0, r0, r3
 311 0088 00F57F40 		add	r0, r0, #65280
 312 008c FF30     		adds	r0, r0, #255
 313 008e 034B     		ldr	r3, .L25+8
 314 0090 1860     		str	r0, [r3]
 315 0092 EBE7     		b	.L19
 316              	.L26:
 317              		.align	2
 318              	.L25:
 319 0094 00000000 		.word	htim4
 320 0098 00000000 		.word	.LANCHOR0
 321 009c 00000000 		.word	.LANCHOR3
 322 00a0 00000000 		.word	uPulseFrequency
 323 00a4 00000000 		.word	uPulseFrequency2
 324 00a8 00000000 		.word	.LANCHOR1
ARM GAS  /tmp/ccvD7piF.s 			page 11


 325 00ac 00000000 		.word	.LANCHOR2
 326 00b0 00000000 		.word	.LANCHOR4
 327              		.cfi_endproc
 328              	.LFE132:
 330              		.section	.text.EXTI15_10_IRQHandler,"ax",%progbits
 331              		.align	1
 332              		.global	EXTI15_10_IRQHandler
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu fpv4-sp-d16
 338              	EXTI15_10_IRQHandler:
 339              	.LFB133:
 258:Src/stm32f4xx_it.c ****     }
 259:Src/stm32f4xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 260:Src/stm32f4xx_it.c **** }
 261:Src/stm32f4xx_it.c **** 
 262:Src/stm32f4xx_it.c **** /**
 263:Src/stm32f4xx_it.c **** * @brief This function handles EXTI line[15:10] interrupts.
 264:Src/stm32f4xx_it.c **** */
 265:Src/stm32f4xx_it.c **** void EXTI15_10_IRQHandler(void)
 266:Src/stm32f4xx_it.c **** {
 340              		.loc 1 266 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 08B5     		push	{r3, lr}
 345              	.LCFI2:
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 3, -8
 348              		.cfi_offset 14, -4
 267:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 0 */
 268:Src/stm32f4xx_it.c **** 
 269:Src/stm32f4xx_it.c ****   /* USER CODE END EXTI15_10_IRQn 0 */
 270:Src/stm32f4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_12);
 349              		.loc 1 270 0
 350 0002 4FF48050 		mov	r0, #4096
 351 0006 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 352              	.LVL6:
 271:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN EXTI15_10_IRQn 1 */
 272:Src/stm32f4xx_it.c ****   interrupt_detected = 1;
 353              		.loc 1 272 0
 354 000a 0122     		movs	r2, #1
 355 000c 014B     		ldr	r3, .L29
 356 000e 1A70     		strb	r2, [r3]
 357 0010 08BD     		pop	{r3, pc}
 358              	.L30:
 359 0012 00BF     		.align	2
 360              	.L29:
 361 0014 00000000 		.word	interrupt_detected
 362              		.cfi_endproc
 363              	.LFE133:
 365              		.global	pulse_Frequency
 366              		.global	uhCaptureIndex
 367              		.global	uwDiffCapture
 368              		.global	uwIC3Value2
 369              		.global	uwIC3Value1
ARM GAS  /tmp/ccvD7piF.s 			page 12


 370              		.section	.bss.pulse_Frequency,"aw",%nobits
 371              		.align	2
 372              		.set	.LANCHOR4,. + 0
 375              	pulse_Frequency:
 376 0000 00000000 		.space	4
 377              		.section	.bss.uhCaptureIndex,"aw",%nobits
 378              		.align	1
 379              		.set	.LANCHOR0,. + 0
 382              	uhCaptureIndex:
 383 0000 0000     		.space	2
 384              		.section	.bss.uwDiffCapture,"aw",%nobits
 385              		.align	2
 386              		.set	.LANCHOR3,. + 0
 389              	uwDiffCapture:
 390 0000 00000000 		.space	4
 391              		.section	.bss.uwIC3Value1,"aw",%nobits
 392              		.align	2
 393              		.set	.LANCHOR1,. + 0
 396              	uwIC3Value1:
 397 0000 00000000 		.space	4
 398              		.section	.bss.uwIC3Value2,"aw",%nobits
 399              		.align	2
 400              		.set	.LANCHOR2,. + 0
 403              	uwIC3Value2:
 404 0000 00000000 		.space	4
 405              		.text
 406              	.Letext0:
 407              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 408              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 409              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 410              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 411              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 412              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 413              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 414              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 415              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 416              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 417              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 418              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 419              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 420              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 421              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 422              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccvD7piF.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccvD7piF.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccvD7piF.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccvD7piF.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccvD7piF.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccvD7piF.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccvD7piF.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccvD7piF.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccvD7piF.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccvD7piF.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccvD7piF.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccvD7piF.s:122    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccvD7piF.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccvD7piF.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccvD7piF.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccvD7piF.s:160    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccvD7piF.s:167    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccvD7piF.s:179    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccvD7piF.s:186    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccvD7piF.s:209    .text.TIM4_IRQHandler:0000000000000000 $t
     /tmp/ccvD7piF.s:216    .text.TIM4_IRQHandler:0000000000000000 TIM4_IRQHandler
     /tmp/ccvD7piF.s:319    .text.TIM4_IRQHandler:0000000000000094 $d
     /tmp/ccvD7piF.s:331    .text.EXTI15_10_IRQHandler:0000000000000000 $t
     /tmp/ccvD7piF.s:338    .text.EXTI15_10_IRQHandler:0000000000000000 EXTI15_10_IRQHandler
     /tmp/ccvD7piF.s:361    .text.EXTI15_10_IRQHandler:0000000000000014 $d
     /tmp/ccvD7piF.s:375    .bss.pulse_Frequency:0000000000000000 pulse_Frequency
     /tmp/ccvD7piF.s:382    .bss.uhCaptureIndex:0000000000000000 uhCaptureIndex
     /tmp/ccvD7piF.s:389    .bss.uwDiffCapture:0000000000000000 uwDiffCapture
     /tmp/ccvD7piF.s:403    .bss.uwIC3Value2:0000000000000000 uwIC3Value2
     /tmp/ccvD7piF.s:396    .bss.uwIC3Value1:0000000000000000 uwIC3Value1
     /tmp/ccvD7piF.s:371    .bss.pulse_Frequency:0000000000000000 $d
     /tmp/ccvD7piF.s:378    .bss.uhCaptureIndex:0000000000000000 $d
     /tmp/ccvD7piF.s:385    .bss.uwDiffCapture:0000000000000000 $d
     /tmp/ccvD7piF.s:392    .bss.uwIC3Value1:0000000000000000 $d
     /tmp/ccvD7piF.s:399    .bss.uwIC3Value2:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_TIM_IRQHandler
HAL_TIM_ReadCapturedValue
HAL_RCC_GetPCLK1Freq
htim4
uPulseFrequency
uPulseFrequency2
HAL_GPIO_EXTI_IRQHandler
interrupt_detected
