ARM GAS  /tmp/ccKc2UCy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB127:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccKc2UCy.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** UART_HandleTypeDef huart2;
  49:Src/main.c    **** DMA_HandleTypeDef hdma_usart2_rx;
  50:Src/main.c    **** DMA_HandleTypeDef hdma_usart2_tx;
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  54:Src/main.c    **** __IO ITStatus UartReady = RESET;
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Buffer used for transmission */
  57:Src/main.c    **** uint8_t aTxBuffer[] = " ****UART_TwoBoards communication based on DMA****  ****UART_TwoBoards commu
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Buffer used for reception */
  60:Src/main.c    **** uint8_t aRxBuffer[RXBUFFERSIZE];
  61:Src/main.c    **** 
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END PV */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  66:Src/main.c    **** void SystemClock_Config(void);
  67:Src/main.c    **** static void MX_GPIO_Init(void);
  68:Src/main.c    **** static void MX_DMA_Init(void);
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE BEGIN PFP */
  71:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  72:Src/main.c    **** static uint16_t Buffercmp(uint8_t* pBuffer1, uint8_t* pBuffer2, uint16_t BufferLength);
  73:Src/main.c    **** /* USER CODE END PFP */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN 0 */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END 0 */
  78:Src/main.c    **** 
  79:Src/main.c    **** int main(void)
  80:Src/main.c    **** {
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* USER CODE BEGIN 1 */
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE END 1 */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  89:Src/main.c    ****   HAL_Init();
ARM GAS  /tmp/ccKc2UCy.s 			page 3


  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN Init */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Configure the system clock */
  96:Src/main.c    ****   SystemClock_Config();
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE END SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Initialize all configured peripherals */
 103:Src/main.c    ****   MX_GPIO_Init();
 104:Src/main.c    ****   MX_DMA_Init();
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE BEGIN 2 */
 107:Src/main.c    **** /* #ifdef TRANSMITTER_BOARD */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Wait for Button key press before starting the communication, Let LED4 blink in the mean time *
 110:Src/main.c    ****   while (HAL_GPIO_ReadPin(WKUP_BUTTON_GPIO_Port, WKUP_BUTTON_Pin) == GPIO_PIN_RESET)
 111:Src/main.c    ****   {
 112:Src/main.c    ****     /* Toggle LED4*/
 113:Src/main.c    ****     HAL_GPIO_TogglePin(LED_Blue_GPIO_Port, LED_Blue_Pin);
 114:Src/main.c    ****     HAL_Delay(250);
 115:Src/main.c    ****   }
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Wait for Button key to be released before starting the communication */
 118:Src/main.c    ****   while (HAL_GPIO_ReadPin(WKUP_BUTTON_GPIO_Port, WKUP_BUTTON_Pin) == GPIO_PIN_SET)
 119:Src/main.c    ****   {
 120:Src/main.c    ****   }
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* Turn LED3 off */
 123:Src/main.c    ****   HAL_GPIO_WritePin(LED_Blue_GPIO_Port, LED_Blue_Pin, GPIO_PIN_RESET);
 124:Src/main.c    ****     
 125:Src/main.c    ****   /* USER CODE END 2 */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* Infinite loop */
 128:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 129:Src/main.c    ****   while (1)
 130:Src/main.c    ****   {
 131:Src/main.c    ****   /* USER CODE END WHILE */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* USER CODE BEGIN 3 */
 134:Src/main.c    **** 
 135:Src/main.c    ****   }
 136:Src/main.c    ****   /* USER CODE END 3 */
 137:Src/main.c    **** 
 138:Src/main.c    **** }
 139:Src/main.c    **** 
 140:Src/main.c    **** /** System Clock Configuration
 141:Src/main.c    **** */
 142:Src/main.c    **** void SystemClock_Config(void)
 143:Src/main.c    **** {
 144:Src/main.c    **** 
 145:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 146:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
ARM GAS  /tmp/ccKc2UCy.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 149:Src/main.c    ****     */
 150:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 151:Src/main.c    **** 
 152:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 153:Src/main.c    **** 
 154:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 155:Src/main.c    ****     */
 156:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 157:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 164:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 165:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166:Src/main.c    ****   {
 167:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 168:Src/main.c    ****   }
 169:Src/main.c    **** 
 170:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 171:Src/main.c    ****     */
 172:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 173:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 174:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 175:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 176:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 177:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178:Src/main.c    **** 
 179:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 180:Src/main.c    ****   {
 181:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 182:Src/main.c    ****   }
 183:Src/main.c    **** 
 184:Src/main.c    ****     /**Configure the Systick interrupt time 
 185:Src/main.c    ****     */
 186:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 187:Src/main.c    **** 
 188:Src/main.c    ****     /**Configure the Systick 
 189:Src/main.c    ****     */
 190:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 193:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 194:Src/main.c    **** }
 195:Src/main.c    **** 
 196:Src/main.c    **** /* USART2 init function */
 197:Src/main.c    **** static void MX_USART2_UART_Init(void)
 198:Src/main.c    **** {
 199:Src/main.c    **** 
 200:Src/main.c    ****   huart2.Instance = USART2;
 201:Src/main.c    ****   huart2.Init.BaudRate = 9600;
 202:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 203:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/ccKc2UCy.s 			page 5


 204:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 205:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 206:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 207:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 208:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 209:Src/main.c    ****   {
 210:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 211:Src/main.c    ****   }
 212:Src/main.c    **** 
 213:Src/main.c    **** }
 214:Src/main.c    **** 
 215:Src/main.c    **** /** 
 216:Src/main.c    ****   * Enable DMA controller clock
 217:Src/main.c    ****   */
 218:Src/main.c    **** static void MX_DMA_Init(void) 
 219:Src/main.c    **** {
 220:Src/main.c    ****   /* DMA controller clock enable */
 221:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* DMA interrupt init */
 224:Src/main.c    ****   /* DMA1_Stream5_IRQn interrupt configuration */
 225:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 226:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 227:Src/main.c    ****   /* DMA1_Stream6_IRQn interrupt configuration */
 228:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 229:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 230:Src/main.c    **** 
 231:Src/main.c    **** }
 232:Src/main.c    **** 
 233:Src/main.c    **** /** Configure pins as 
 234:Src/main.c    ****         * Analog 
 235:Src/main.c    ****         * Input 
 236:Src/main.c    ****         * Output
 237:Src/main.c    ****         * EVENT_OUT
 238:Src/main.c    ****         * EXTI
 239:Src/main.c    **** */
 240:Src/main.c    **** static void MX_GPIO_Init(void)
 241:Src/main.c    **** {
  27              		.loc 1 241 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 70B5     		push	{r4, r5, r6, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  38 0002 88B0     		sub	sp, sp, #32
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
  41              	.LBB2:
 242:Src/main.c    **** 
 243:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* GPIO Ports Clock Enable */
ARM GAS  /tmp/ccKc2UCy.s 			page 6


 246:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  42              		.loc 1 246 0
  43 0004 0024     		movs	r4, #0
  44 0006 0194     		str	r4, [sp, #4]
  45 0008 1B4B     		ldr	r3, .L3
  46 000a 1A6B     		ldr	r2, [r3, #48]
  47 000c 42F00102 		orr	r2, r2, #1
  48 0010 1A63     		str	r2, [r3, #48]
  49 0012 1A6B     		ldr	r2, [r3, #48]
  50 0014 02F00102 		and	r2, r2, #1
  51 0018 0192     		str	r2, [sp, #4]
  52 001a 019A     		ldr	r2, [sp, #4]
  53              	.LBE2:
  54              	.LBB3:
 247:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  55              		.loc 1 247 0
  56 001c 0294     		str	r4, [sp, #8]
  57 001e 1A6B     		ldr	r2, [r3, #48]
  58 0020 42F01002 		orr	r2, r2, #16
  59 0024 1A63     		str	r2, [r3, #48]
  60 0026 1B6B     		ldr	r3, [r3, #48]
  61 0028 03F01003 		and	r3, r3, #16
  62 002c 0293     		str	r3, [sp, #8]
  63 002e 029B     		ldr	r3, [sp, #8]
  64              	.LBE3:
 248:Src/main.c    **** 
 249:Src/main.c    ****   /*Configure GPIO pin Output Level */
 250:Src/main.c    ****   HAL_GPIO_WritePin(GPIOE, LED_Blue_Pin|LED_Red_Pin|LED_Orange_Pin|LED_Green_Pin, GPIO_PIN_RESET);
  65              		.loc 1 250 0
  66 0030 124E     		ldr	r6, .L3+4
  67 0032 2246     		mov	r2, r4
  68 0034 4FF47061 		mov	r1, #3840
  69 0038 3046     		mov	r0, r6
  70 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
  71              	.LVL0:
 251:Src/main.c    **** 
 252:Src/main.c    ****   /*Configure GPIO pin : WKUP_BUTTON_Pin */
 253:Src/main.c    ****   GPIO_InitStruct.Pin = WKUP_BUTTON_Pin;
  72              		.loc 1 253 0
  73 003e 0125     		movs	r5, #1
  74 0040 0395     		str	r5, [sp, #12]
 254:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  75              		.loc 1 254 0
  76 0042 0F4B     		ldr	r3, .L3+8
  77 0044 0493     		str	r3, [sp, #16]
 255:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  78              		.loc 1 255 0
  79 0046 0594     		str	r4, [sp, #20]
 256:Src/main.c    ****   HAL_GPIO_Init(WKUP_BUTTON_GPIO_Port, &GPIO_InitStruct);
  80              		.loc 1 256 0
  81 0048 03A9     		add	r1, sp, #12
  82 004a 0E48     		ldr	r0, .L3+12
  83 004c FFF7FEFF 		bl	HAL_GPIO_Init
  84              	.LVL1:
 257:Src/main.c    **** 
 258:Src/main.c    ****   /*Configure GPIO pins : LED_Blue_Pin LED_Red_Pin LED_Orange_Pin LED_Green_Pin */
 259:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Blue_Pin|LED_Red_Pin|LED_Orange_Pin|LED_Green_Pin;
ARM GAS  /tmp/ccKc2UCy.s 			page 7


  85              		.loc 1 259 0
  86 0050 4FF47063 		mov	r3, #3840
  87 0054 0393     		str	r3, [sp, #12]
 260:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 260 0
  89 0056 0495     		str	r5, [sp, #16]
 261:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  90              		.loc 1 261 0
  91 0058 0594     		str	r4, [sp, #20]
 262:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  92              		.loc 1 262 0
  93 005a 0694     		str	r4, [sp, #24]
 263:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
  94              		.loc 1 263 0
  95 005c 03A9     		add	r1, sp, #12
  96 005e 3046     		mov	r0, r6
  97 0060 FFF7FEFF 		bl	HAL_GPIO_Init
  98              	.LVL2:
 264:Src/main.c    **** 
 265:Src/main.c    ****   /* EXTI interrupt init*/
 266:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 1, 0);
  99              		.loc 1 266 0
 100 0064 2246     		mov	r2, r4
 101 0066 2946     		mov	r1, r5
 102 0068 0620     		movs	r0, #6
 103 006a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 104              	.LVL3:
 267:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 105              		.loc 1 267 0
 106 006e 0620     		movs	r0, #6
 107 0070 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 108              	.LVL4:
 268:Src/main.c    **** 
 269:Src/main.c    **** }
 109              		.loc 1 269 0
 110 0074 08B0     		add	sp, sp, #32
 111              	.LCFI2:
 112              		.cfi_def_cfa_offset 16
 113              		@ sp needed
 114 0076 70BD     		pop	{r4, r5, r6, pc}
 115              	.L4:
 116              		.align	2
 117              	.L3:
 118 0078 00380240 		.word	1073887232
 119 007c 00100240 		.word	1073876992
 120 0080 00001110 		.word	269549568
 121 0084 00000240 		.word	1073872896
 122              		.cfi_endproc
 123              	.LFE127:
 125              		.section	.text.MX_DMA_Init,"ax",%progbits
 126              		.align	1
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv4-sp-d16
 132              	MX_DMA_Init:
 133              	.LFB126:
ARM GAS  /tmp/ccKc2UCy.s 			page 8


 219:Src/main.c    ****   /* DMA controller clock enable */
 134              		.loc 1 219 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 8
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138 0000 10B5     		push	{r4, lr}
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 4, -8
 142              		.cfi_offset 14, -4
 143 0002 82B0     		sub	sp, sp, #8
 144              	.LCFI4:
 145              		.cfi_def_cfa_offset 16
 146              	.LBB4:
 221:Src/main.c    **** 
 147              		.loc 1 221 0
 148 0004 0024     		movs	r4, #0
 149 0006 0194     		str	r4, [sp, #4]
 150 0008 0D4B     		ldr	r3, .L7
 151 000a 1A6B     		ldr	r2, [r3, #48]
 152 000c 42F40012 		orr	r2, r2, #2097152
 153 0010 1A63     		str	r2, [r3, #48]
 154 0012 1B6B     		ldr	r3, [r3, #48]
 155 0014 03F40013 		and	r3, r3, #2097152
 156 0018 0193     		str	r3, [sp, #4]
 157 001a 019B     		ldr	r3, [sp, #4]
 158              	.LBE4:
 225:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 159              		.loc 1 225 0
 160 001c 2246     		mov	r2, r4
 161 001e 2146     		mov	r1, r4
 162 0020 1020     		movs	r0, #16
 163 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 164              	.LVL5:
 226:Src/main.c    ****   /* DMA1_Stream6_IRQn interrupt configuration */
 165              		.loc 1 226 0
 166 0026 1020     		movs	r0, #16
 167 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 168              	.LVL6:
 228:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 169              		.loc 1 228 0
 170 002c 2246     		mov	r2, r4
 171 002e 2146     		mov	r1, r4
 172 0030 1120     		movs	r0, #17
 173 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 174              	.LVL7:
 229:Src/main.c    **** 
 175              		.loc 1 229 0
 176 0036 1120     		movs	r0, #17
 177 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 178              	.LVL8:
 231:Src/main.c    **** 
 179              		.loc 1 231 0
 180 003c 02B0     		add	sp, sp, #8
 181              	.LCFI5:
 182              		.cfi_def_cfa_offset 8
 183              		@ sp needed
ARM GAS  /tmp/ccKc2UCy.s 			page 9


 184 003e 10BD     		pop	{r4, pc}
 185              	.L8:
 186              		.align	2
 187              	.L7:
 188 0040 00380240 		.word	1073887232
 189              		.cfi_endproc
 190              	.LFE126:
 192              		.section	.text._Error_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	_Error_Handler
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv4-sp-d16
 200              	_Error_Handler:
 201              	.LFB128:
 270:Src/main.c    **** 
 271:Src/main.c    **** /* USER CODE BEGIN 4 */
 272:Src/main.c    **** 
 273:Src/main.c    **** /* USER CODE END 4 */
 274:Src/main.c    **** 
 275:Src/main.c    **** /**
 276:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 277:Src/main.c    ****   * @param  None
 278:Src/main.c    ****   * @retval None
 279:Src/main.c    ****   */
 280:Src/main.c    **** void _Error_Handler(char * file, int line)
 281:Src/main.c    **** {
 202              		.loc 1 281 0
 203              		.cfi_startproc
 204              		@ Volatile: function does not return.
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              	.LVL9:
 208 0000 08B5     		push	{r3, lr}
 209              	.LCFI6:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 3, -8
 212              		.cfi_offset 14, -4
 282:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 283:Src/main.c    ****   /* Turn Yellow LED on in case of any errors */
 284:Src/main.c    ****   HAL_GPIO_WritePin(LED_Orange_GPIO_Port, LED_Orange_Pin, GPIO_PIN_SET);
 213              		.loc 1 284 0
 214 0002 0122     		movs	r2, #1
 215 0004 4FF48061 		mov	r1, #1024
 216              	.LVL10:
 217 0008 0148     		ldr	r0, .L12
 218              	.LVL11:
 219 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL12:
 221              	.L10:
 222 000e FEE7     		b	.L10
 223              	.L13:
 224              		.align	2
 225              	.L12:
 226 0010 00100240 		.word	1073876992
 227              		.cfi_endproc
ARM GAS  /tmp/ccKc2UCy.s 			page 10


 228              	.LFE128:
 230              		.section	.text.SystemClock_Config,"ax",%progbits
 231              		.align	1
 232              		.global	SystemClock_Config
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu fpv4-sp-d16
 238              	SystemClock_Config:
 239              	.LFB124:
 143:Src/main.c    **** 
 240              		.loc 1 143 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 80
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 00B5     		push	{lr}
 245              	.LCFI7:
 246              		.cfi_def_cfa_offset 4
 247              		.cfi_offset 14, -4
 248 0002 95B0     		sub	sp, sp, #84
 249              	.LCFI8:
 250              		.cfi_def_cfa_offset 88
 251              	.LBB5:
 150:Src/main.c    **** 
 252              		.loc 1 150 0
 253 0004 0023     		movs	r3, #0
 254 0006 0193     		str	r3, [sp, #4]
 255 0008 284A     		ldr	r2, .L20
 256 000a 116C     		ldr	r1, [r2, #64]
 257 000c 41F08051 		orr	r1, r1, #268435456
 258 0010 1164     		str	r1, [r2, #64]
 259 0012 126C     		ldr	r2, [r2, #64]
 260 0014 02F08052 		and	r2, r2, #268435456
 261 0018 0192     		str	r2, [sp, #4]
 262 001a 019A     		ldr	r2, [sp, #4]
 263              	.LBE5:
 264              	.LBB6:
 152:Src/main.c    **** 
 265              		.loc 1 152 0
 266 001c 0293     		str	r3, [sp, #8]
 267 001e 244A     		ldr	r2, .L20+4
 268 0020 1168     		ldr	r1, [r2]
 269 0022 41F48041 		orr	r1, r1, #16384
 270 0026 1160     		str	r1, [r2]
 271 0028 1268     		ldr	r2, [r2]
 272 002a 02F48042 		and	r2, r2, #16384
 273 002e 0292     		str	r2, [sp, #8]
 274 0030 029A     		ldr	r2, [sp, #8]
 275              	.LBE6:
 156:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 276              		.loc 1 156 0
 277 0032 0221     		movs	r1, #2
 278 0034 0891     		str	r1, [sp, #32]
 157:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 279              		.loc 1 157 0
 280 0036 0122     		movs	r2, #1
 281 0038 0B92     		str	r2, [sp, #44]
ARM GAS  /tmp/ccKc2UCy.s 			page 11


 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 282              		.loc 1 158 0
 283 003a 1022     		movs	r2, #16
 284 003c 0C92     		str	r2, [sp, #48]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 285              		.loc 1 159 0
 286 003e 0E91     		str	r1, [sp, #56]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 287              		.loc 1 160 0
 288 0040 0F93     		str	r3, [sp, #60]
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 289              		.loc 1 161 0
 290 0042 1092     		str	r2, [sp, #64]
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 291              		.loc 1 162 0
 292 0044 4FF4A873 		mov	r3, #336
 293 0048 1193     		str	r3, [sp, #68]
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 294              		.loc 1 163 0
 295 004a 0423     		movs	r3, #4
 296 004c 1293     		str	r3, [sp, #72]
 164:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 297              		.loc 1 164 0
 298 004e 1393     		str	r3, [sp, #76]
 165:Src/main.c    ****   {
 299              		.loc 1 165 0
 300 0050 08A8     		add	r0, sp, #32
 301 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 302              	.LVL13:
 303 0056 08BB     		cbnz	r0, .L18
 172:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 304              		.loc 1 172 0
 305 0058 0F23     		movs	r3, #15
 306 005a 0393     		str	r3, [sp, #12]
 174:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 307              		.loc 1 174 0
 308 005c 0221     		movs	r1, #2
 309 005e 0491     		str	r1, [sp, #16]
 175:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 310              		.loc 1 175 0
 311 0060 0023     		movs	r3, #0
 312 0062 0593     		str	r3, [sp, #20]
 176:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 313              		.loc 1 176 0
 314 0064 4FF48052 		mov	r2, #4096
 315 0068 0692     		str	r2, [sp, #24]
 177:Src/main.c    **** 
 316              		.loc 1 177 0
 317 006a 0793     		str	r3, [sp, #28]
 179:Src/main.c    ****   {
 318              		.loc 1 179 0
 319 006c 03A8     		add	r0, sp, #12
 320 006e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 321              	.LVL14:
 322 0072 B8B9     		cbnz	r0, .L19
 186:Src/main.c    **** 
 323              		.loc 1 186 0
ARM GAS  /tmp/ccKc2UCy.s 			page 12


 324 0074 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 325              	.LVL15:
 326 0078 0E4B     		ldr	r3, .L20+8
 327 007a A3FB0030 		umull	r3, r0, r3, r0
 328 007e 8009     		lsrs	r0, r0, #6
 329 0080 FFF7FEFF 		bl	HAL_SYSTICK_Config
 330              	.LVL16:
 190:Src/main.c    **** 
 331              		.loc 1 190 0
 332 0084 0420     		movs	r0, #4
 333 0086 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 334              	.LVL17:
 193:Src/main.c    **** }
 335              		.loc 1 193 0
 336 008a 0022     		movs	r2, #0
 337 008c 1146     		mov	r1, r2
 338 008e 4FF0FF30 		mov	r0, #-1
 339 0092 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 340              	.LVL18:
 194:Src/main.c    **** 
 341              		.loc 1 194 0
 342 0096 15B0     		add	sp, sp, #84
 343              	.LCFI9:
 344              		.cfi_remember_state
 345              		.cfi_def_cfa_offset 4
 346              		@ sp needed
 347 0098 5DF804FB 		ldr	pc, [sp], #4
 348              	.L18:
 349              	.LCFI10:
 350              		.cfi_restore_state
 167:Src/main.c    ****   }
 351              		.loc 1 167 0
 352 009c A721     		movs	r1, #167
 353 009e 0648     		ldr	r0, .L20+12
 354 00a0 FFF7FEFF 		bl	_Error_Handler
 355              	.LVL19:
 356              	.L19:
 181:Src/main.c    ****   }
 357              		.loc 1 181 0
 358 00a4 B521     		movs	r1, #181
 359 00a6 0448     		ldr	r0, .L20+12
 360 00a8 FFF7FEFF 		bl	_Error_Handler
 361              	.LVL20:
 362              	.L21:
 363              		.align	2
 364              	.L20:
 365 00ac 00380240 		.word	1073887232
 366 00b0 00700040 		.word	1073770496
 367 00b4 D34D6210 		.word	274877907
 368 00b8 00000000 		.word	.LC0
 369              		.cfi_endproc
 370              	.LFE124:
 372              		.section	.text.main,"ax",%progbits
 373              		.align	1
 374              		.global	main
 375              		.syntax unified
 376              		.thumb
ARM GAS  /tmp/ccKc2UCy.s 			page 13


 377              		.thumb_func
 378              		.fpu fpv4-sp-d16
 380              	main:
 381              	.LFB123:
  80:Src/main.c    **** 
 382              		.loc 1 80 0
 383              		.cfi_startproc
 384              		@ Volatile: function does not return.
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387 0000 08B5     		push	{r3, lr}
 388              	.LCFI11:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 3, -8
 391              		.cfi_offset 14, -4
  89:Src/main.c    **** 
 392              		.loc 1 89 0
 393 0002 FFF7FEFF 		bl	HAL_Init
 394              	.LVL21:
  96:Src/main.c    **** 
 395              		.loc 1 96 0
 396 0006 FFF7FEFF 		bl	SystemClock_Config
 397              	.LVL22:
 103:Src/main.c    ****   MX_DMA_Init();
 398              		.loc 1 103 0
 399 000a FFF7FEFF 		bl	MX_GPIO_Init
 400              	.LVL23:
 104:Src/main.c    **** 
 401              		.loc 1 104 0
 402 000e FFF7FEFF 		bl	MX_DMA_Init
 403              	.LVL24:
 110:Src/main.c    ****   {
 404              		.loc 1 110 0
 405 0012 07E0     		b	.L23
 406              	.L24:
 113:Src/main.c    ****     HAL_Delay(250);
 407              		.loc 1 113 0
 408 0014 4FF48071 		mov	r1, #256
 409 0018 0C48     		ldr	r0, .L28
 410 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 411              	.LVL25:
 114:Src/main.c    ****   }
 412              		.loc 1 114 0
 413 001e FA20     		movs	r0, #250
 414 0020 FFF7FEFF 		bl	HAL_Delay
 415              	.LVL26:
 416              	.L23:
 110:Src/main.c    ****   {
 417              		.loc 1 110 0
 418 0024 0121     		movs	r1, #1
 419 0026 0A48     		ldr	r0, .L28+4
 420 0028 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 421              	.LVL27:
 422 002c 0028     		cmp	r0, #0
 423 002e F1D0     		beq	.L24
 424              	.L25:
 118:Src/main.c    ****   {
ARM GAS  /tmp/ccKc2UCy.s 			page 14


 425              		.loc 1 118 0 discriminator 1
 426 0030 0121     		movs	r1, #1
 427 0032 0748     		ldr	r0, .L28+4
 428 0034 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 429              	.LVL28:
 430 0038 0128     		cmp	r0, #1
 431 003a F9D0     		beq	.L25
 123:Src/main.c    ****     
 432              		.loc 1 123 0
 433 003c 0022     		movs	r2, #0
 434 003e 4FF48071 		mov	r1, #256
 435 0042 0248     		ldr	r0, .L28
 436 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 437              	.LVL29:
 438              	.L26:
 439 0048 FEE7     		b	.L26
 440              	.L29:
 441 004a 00BF     		.align	2
 442              	.L28:
 443 004c 00100240 		.word	1073876992
 444 0050 00000240 		.word	1073872896
 445              		.cfi_endproc
 446              	.LFE123:
 448              		.section	.text.assert_failed,"ax",%progbits
 449              		.align	1
 450              		.global	assert_failed
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 454              		.fpu fpv4-sp-d16
 456              	assert_failed:
 457              	.LFB129:
 285:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 286:Src/main.c    ****   while(1) 
 287:Src/main.c    ****   {
 288:Src/main.c    ****   }
 289:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 290:Src/main.c    **** }
 291:Src/main.c    **** 
 292:Src/main.c    **** #ifdef USE_FULL_ASSERT
 293:Src/main.c    **** 
 294:Src/main.c    **** /**
 295:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 296:Src/main.c    ****    * where the assert_param error has occurred.
 297:Src/main.c    ****    * @param file: pointer to the source file name
 298:Src/main.c    ****    * @param line: assert_param error line source number
 299:Src/main.c    ****    * @retval None
 300:Src/main.c    ****    */
 301:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 302:Src/main.c    **** {
 458              		.loc 1 302 0
 459              		.cfi_startproc
 460              		@ args = 0, pretend = 0, frame = 0
 461              		@ frame_needed = 0, uses_anonymous_args = 0
 462              		@ link register save eliminated.
 463              	.LVL30:
 464 0000 7047     		bx	lr
ARM GAS  /tmp/ccKc2UCy.s 			page 15


 465              		.cfi_endproc
 466              	.LFE129:
 468              		.comm	aRxBuffer,153,4
 469              		.global	aTxBuffer
 470              		.global	UartReady
 471              		.comm	hdma_usart2_tx,96,4
 472              		.comm	hdma_usart2_rx,96,4
 473              		.comm	huart2,64,4
 474              		.section	.bss.UartReady,"aw",%nobits
 477              	UartReady:
 478 0000 00       		.space	1
 479              		.section	.data.aTxBuffer,"aw",%progbits
 480              		.align	2
 483              	aTxBuffer:
 484 0000 202A2A2A 		.ascii	" ****UART_TwoBoards communication based on DMA**** "
 484      2A554152 
 484      545F5477 
 484      6F426F61 
 484      72647320 
 485 0033 202A2A2A 		.ascii	" ****UART_TwoBoards communication based on DMA**** "
 485      2A554152 
 485      545F5477 
 485      6F426F61 
 485      72647320 
 486 0066 202A2A2A 		.ascii	" ****UART_TwoBoards communication based on DMA**** "
 486      2A554152 
 486      545F5477 
 486      6F426F61 
 486      72647320 
 487 0099 00       		.ascii	"\000"
 488              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 489              		.align	2
 490              	.LC0:
 491 0000 5372632F 		.ascii	"Src/main.c\000"
 491      6D61696E 
 491      2E6300
 492              		.text
 493              	.Letext0:
 494              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 495              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 496              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 497              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 498              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 499              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 500              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 501              		.file 9 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 502              		.file 10 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 503              		.file 11 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 504              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 505              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 506              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 507              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 508              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 509              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 510              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 511              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccKc2UCy.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccKc2UCy.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccKc2UCy.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccKc2UCy.s:118    .text.MX_GPIO_Init:0000000000000078 $d
     /tmp/ccKc2UCy.s:126    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccKc2UCy.s:132    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccKc2UCy.s:188    .text.MX_DMA_Init:0000000000000040 $d
     /tmp/ccKc2UCy.s:193    .text._Error_Handler:0000000000000000 $t
     /tmp/ccKc2UCy.s:200    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccKc2UCy.s:226    .text._Error_Handler:0000000000000010 $d
     /tmp/ccKc2UCy.s:231    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccKc2UCy.s:238    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccKc2UCy.s:365    .text.SystemClock_Config:00000000000000ac $d
     /tmp/ccKc2UCy.s:373    .text.main:0000000000000000 $t
     /tmp/ccKc2UCy.s:380    .text.main:0000000000000000 main
     /tmp/ccKc2UCy.s:443    .text.main:000000000000004c $d
     /tmp/ccKc2UCy.s:449    .text.assert_failed:0000000000000000 $t
     /tmp/ccKc2UCy.s:456    .text.assert_failed:0000000000000000 assert_failed
                            *COM*:0000000000000099 aRxBuffer
     /tmp/ccKc2UCy.s:483    .data.aTxBuffer:0000000000000000 aTxBuffer
     /tmp/ccKc2UCy.s:477    .bss.UartReady:0000000000000000 UartReady
                            *COM*:0000000000000060 hdma_usart2_tx
                            *COM*:0000000000000060 hdma_usart2_rx
                            *COM*:0000000000000040 huart2
     /tmp/ccKc2UCy.s:478    .bss.UartReady:0000000000000000 $d
     /tmp/ccKc2UCy.s:480    .data.aTxBuffer:0000000000000000 $d
     /tmp/ccKc2UCy.s:489    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
HAL_GPIO_ReadPin
