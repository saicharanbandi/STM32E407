ARM GAS  /tmp/cczJWHrP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB167:
  26              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter (UART) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions  
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions  
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim       
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
ARM GAS  /tmp/cczJWHrP.s 			page 2


  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required 
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.                
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx Stream.
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete 
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx Stream.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware 
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the Init structure.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling 
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt, 
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the 
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :     
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit() 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***    
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]    
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT() 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT() 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***    
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
ARM GAS  /tmp/cczJWHrP.s 			page 3


  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA() 
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback 
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can 
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA() 
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can 
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback 
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()      
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()  
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()      
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ============================================= 
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral 
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral     
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..] 
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros 
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Redistribution and use in source and binary forms, with or without modification,
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * are permitted provided that the following conditions are met:
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      this list of conditions and the following disclaimer in the documentation
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      and/or other materials provided with the distribution.
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      may be used to endorse or promote products derived from this software
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *      without specific prior written permission.
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/cczJWHrP.s 			page 4


 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */ 
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions   UART Private Functions
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma); 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig (UART_HandleTypeDef *huart);
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
ARM GAS  /tmp/cczJWHrP.s 			page 5


 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions 
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim    
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** ===============================================================================
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================  
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy 
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured: 
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.           
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs 
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     configuration procedures (details for the procedures are available in reference manual (RM0329)
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6 */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/cczJWHrP.s 			page 6


 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared: 
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */ 
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
ARM GAS  /tmp/cczJWHrP.s 			page 7


 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared: 
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
ARM GAS  /tmp/cczJWHrP.s 			page 8


 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared: 
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This parameter can be one of the following values:
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  /tmp/cczJWHrP.s 			page 9


 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared: 
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the USART address */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cczJWHrP.s 			page 10


 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral. 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart == NULL)
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Lock */
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  /tmp/cczJWHrP.s 			page 11


 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions 
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Blocking mode: The communication is performed in polling mode. 
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL status of all data processing is returned by the same function 
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             after finishing transfer.  
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (++) Non blocking mode: The communication is performed using Interrupts 
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             or DMA, these APIs return the HAL status.
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The end of the data processing will be indicated through the 
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             dedicated UART IRQ when using Interrupt mode or the DMA IRQ when 
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             using DMA mode.
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             will be executed respectively at the end of the transmit or receive process.
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             The HAL_UART_ErrorCallback() user callback will be executed when 
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             a communication error is detected.
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode APIs are:
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit()
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive() 
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode APIs with Interrupt are:
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_IT()
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_IT()
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_IRQHandler()
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non Blocking mode functions with DMA are:
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Transmit_DMA()
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_Receive_DMA()
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in non blocking mode:
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_TxCpltCallback()
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_RxCpltCallback()
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) HAL_UART_ErrorCallback()
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] 
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (@) In the Half duplex communication, it is forbidden to run the transmit 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX 
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           can't be useful.
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       
ARM GAS  /tmp/cczJWHrP.s 			page 12


 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode. 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration  
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY) 
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
ARM GAS  /tmp/cczJWHrP.s 			page 13


 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode. 
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** { 
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
ARM GAS  /tmp/cczJWHrP.s 			page 14


 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout managment */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size; 
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->RxXferCount > 0U)
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         tmp = (uint16_t*) pData;
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pData++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/cczJWHrP.s 			page 15


 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;   
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
ARM GAS  /tmp/cczJWHrP.s 			page 16


 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error and Data Register not empty Interrupts */
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode. 
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be sent
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_READY)
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0))
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cczJWHrP.s 			page 17


 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA Stream */
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t*)tmp, (uint32_t)&huart->Instance->DR, Size);
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode. 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size Amount of data to be received
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the data received contain the parity bit.
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {  
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_READY) 
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/cczJWHrP.s 			page 18


 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((pData == NULL ) || (Size == 0)) 
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferErrorCallback = UART_DMAError;
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmarx->XferAbortCallback = NULL;
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA Stream */
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t*)&pData;
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t*)tmp, Size);
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the sec
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit 
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in the UART CR3 register */
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY; 
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
ARM GAS  /tmp/cczJWHrP.s 			page 19


1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX)
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
ARM GAS  /tmp/cczJWHrP.s 			page 20


1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  /tmp/cczJWHrP.s 			page 21


1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel: use blocking DMA Abort API (no callback) */
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel: use blocking DMA Abort API (no callback) */
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
ARM GAS  /tmp/cczJWHrP.s 			page 22


1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/cczJWHrP.s 			page 23


1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null. 
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
ARM GAS  /tmp/cczJWHrP.s 			page 24


1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised : 
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/cczJWHrP.s 			page 25


1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised : 
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(AbortCplt == 0x01U)
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U; 
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cczJWHrP.s 			page 26


1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx != NULL)
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {      
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable PPP Interrupts
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
ARM GAS  /tmp/cczJWHrP.s 			page 27


1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** */
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx != NULL)
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback : 
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U; 
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U; 
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/cczJWHrP.s 			page 28


1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(errorflags == RESET)
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }  
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET) || ((cr1its & (USART_CR1_RXNEIE 
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(((isrflags & USART_SR_ORE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/    
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->ErrorCode != HAL_UART_ERROR_NONE)
ARM GAS  /tmp/cczJWHrP.s 			page 29


1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if(huart->hdmarx != NULL)
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback : 
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on. 
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cczJWHrP.s 			page 30


1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
ARM GAS  /tmp/cczJWHrP.s 			page 31


1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart); 
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function Should not be modified, when the callback is needed,
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */ 
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback (UART_HandleTypeDef *huart)
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback (UART_HandleTypeDef *huart)
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cczJWHrP.s 			page 32


1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback (UART_HandleTypeDef *huart)
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions 
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions 
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode. 
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  /tmp/cczJWHrP.s 			page 33


1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode. 
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software. 
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  /tmp/cczJWHrP.s 			page 34


1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/cczJWHrP.s 			page 35


1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK; 
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions 
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions 
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim   
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================  
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of 
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication 
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication. 
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  /tmp/cczJWHrP.s 			page 36


1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  pointer to a UART_HandleTypeDef structure that contains
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *              the configuration information for the specified UART.
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback. 
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback 
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cczJWHrP.s 			page 37


2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback. 
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit 
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback 
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified DMA module.
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart); 
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0U;
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/cczJWHrP.s 			page 38


2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR); 
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status) 
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(Timeout != HAL_MAX_DELAY)
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cczJWHrP.s 			page 39


2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  27              		.loc 1 2142 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 2144 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 D368     		ldr	r3, [r2, #12]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 D360     		str	r3, [r2, #12]
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 2147 0
  39 000a 2023     		movs	r3, #32
  40 000c 80F83930 		strb	r3, [r0, #57]
  41 0010 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE167:
  45              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv4-sp-d16
  52              	UART_EndRxTransfer:
  53              	.LFB168:
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  54              		.loc 1 2156 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  60              		.loc 1 2158 0
  61 0000 0268     		ldr	r2, [r0]
  62 0002 D368     		ldr	r3, [r2, #12]
  63 0004 23F49073 		bic	r3, r3, #288
  64 0008 D360     		str	r3, [r2, #12]
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  65              		.loc 1 2159 0
  66 000a 0268     		ldr	r2, [r0]
  67 000c 5369     		ldr	r3, [r2, #20]
ARM GAS  /tmp/cczJWHrP.s 			page 40


  68 000e 23F00103 		bic	r3, r3, #1
  69 0012 5361     		str	r3, [r2, #20]
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  70              		.loc 1 2162 0
  71 0014 2023     		movs	r3, #32
  72 0016 80F83A30 		strb	r3, [r0, #58]
  73 001a 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE168:
  77              		.section	.text.UART_Transmit_IT,"ax",%progbits
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  82              		.fpu fpv4-sp-d16
  84              	UART_Transmit_IT:
  85              	.LFB174:
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0U;
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0U;
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmarx != NULL)
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmarx->XferAbortCallback != NULL)
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/cczJWHrP.s 			page 41


2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->hdmatx != NULL)
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->hdmatx->XferAbortCallback != NULL)
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
ARM GAS  /tmp/cczJWHrP.s 			page 42


2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma DMA handle.
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  86              		.loc 1 2305 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.LVL2:
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
ARM GAS  /tmp/cczJWHrP.s 			page 43


2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->gState == HAL_UART_STATE_BUSY_TX)
  92              		.loc 1 2309 0
  93 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
  94 0004 DBB2     		uxtb	r3, r3
  95 0006 212B     		cmp	r3, #33
  96 0008 01D0     		beq	.L10
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pTxBuffPtr;
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pTxBuffPtr += 1U;
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     } 
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->TxXferCount == 0U)
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */    
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
  97              		.loc 1 2341 0
  98 000a 0220     		movs	r0, #2
  99              	.LVL3:
 100 000c 7047     		bx	lr
 101              	.LVL4:
 102              	.L10:
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 103              		.loc 1 2311 0
 104 000e 8368     		ldr	r3, [r0, #8]
 105 0010 B3F5805F 		cmp	r3, #4096
 106 0014 17D0     		beq	.L11
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 107              		.loc 1 2326 0
 108 0016 0268     		ldr	r2, [r0]
 109 0018 036A     		ldr	r3, [r0, #32]
 110 001a 591C     		adds	r1, r3, #1
 111 001c 0162     		str	r1, [r0, #32]
 112 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0020 5360     		str	r3, [r2, #4]
ARM GAS  /tmp/cczJWHrP.s 			page 44


 114              	.L7:
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 115              		.loc 1 2329 0
 116 0022 C38C     		ldrh	r3, [r0, #38]
 117 0024 9BB2     		uxth	r3, r3
 118 0026 013B     		subs	r3, r3, #1
 119 0028 9BB2     		uxth	r3, r3
 120 002a C384     		strh	r3, [r0, #38]	@ movhi
 121 002c DBB9     		cbnz	r3, .L9
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 122              		.loc 1 2332 0
 123 002e 0268     		ldr	r2, [r0]
 124 0030 D368     		ldr	r3, [r2, #12]
 125 0032 23F08003 		bic	r3, r3, #128
 126 0036 D360     		str	r3, [r2, #12]
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 127              		.loc 1 2335 0
 128 0038 0268     		ldr	r2, [r0]
 129 003a D368     		ldr	r3, [r2, #12]
 130 003c 43F04003 		orr	r3, r3, #64
 131 0040 D360     		str	r3, [r2, #12]
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 132              		.loc 1 2337 0
 133 0042 0020     		movs	r0, #0
 134              	.LVL5:
 135 0044 7047     		bx	lr
 136              	.LVL6:
 137              	.L11:
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 138              		.loc 1 2313 0
 139 0046 036A     		ldr	r3, [r0, #32]
 140              	.LVL7:
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 141              		.loc 1 2314 0
 142 0048 0268     		ldr	r2, [r0]
 143 004a 1B88     		ldrh	r3, [r3]
 144              	.LVL8:
 145 004c C3F30803 		ubfx	r3, r3, #0, #9
 146 0050 5360     		str	r3, [r2, #4]
 147              	.LVL9:
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 148              		.loc 1 2315 0
 149 0052 0369     		ldr	r3, [r0, #16]
 150 0054 1BB9     		cbnz	r3, .L6
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 151              		.loc 1 2317 0
 152 0056 036A     		ldr	r3, [r0, #32]
 153 0058 0233     		adds	r3, r3, #2
 154 005a 0362     		str	r3, [r0, #32]
 155 005c E1E7     		b	.L7
 156              	.L6:
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 157              		.loc 1 2321 0
 158 005e 036A     		ldr	r3, [r0, #32]
 159 0060 0133     		adds	r3, r3, #1
 160 0062 0362     		str	r3, [r0, #32]
 161 0064 DDE7     		b	.L7
ARM GAS  /tmp/cczJWHrP.s 			page 45


 162              	.L9:
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 163              		.loc 1 2337 0
 164 0066 0020     		movs	r0, #0
 165              	.LVL10:
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 166              		.loc 1 2343 0
 167 0068 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE174:
 171              		.section	.text.UART_SetConfig,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv4-sp-d16
 178              	UART_SetConfig:
 179              	.LFB177:
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode 
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->RxState == HAL_UART_STATE_BUSY_RX) 
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Init.WordLength == UART_WORDLENGTH_9B)
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t*) huart->pRxBuffPtr;
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  /tmp/cczJWHrP.s 			page 46


2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *tmp = (uint16_t)(huart->Instance->DR & (uint16_t)0x00FF);
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *huart->pRxBuffPtr++ = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(--huart->RxXferCount == 0U)
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral. 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 180              		.loc 1 2433 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              	.LVL11:
ARM GAS  /tmp/cczJWHrP.s 			page 47


 185 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 186              	.LCFI0:
 187              		.cfi_def_cfa_offset 32
 188              		.cfi_offset 4, -32
 189              		.cfi_offset 5, -28
 190              		.cfi_offset 6, -24
 191              		.cfi_offset 7, -20
 192              		.cfi_offset 8, -16
 193              		.cfi_offset 9, -12
 194              		.cfi_offset 10, -8
 195              		.cfi_offset 14, -4
 196 0004 0446     		mov	r4, r0
 197              	.LVL12:
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 198              		.loc 1 2437 0
 199 0006 4268     		ldr	r2, [r0, #4]
 200 0008 B64B     		ldr	r3, .L27
 201 000a 9A42     		cmp	r2, r3
 202 000c 00F2A680 		bhi	.L25
 203              	.LVL13:
 204              	.L13:
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 205              		.loc 1 2438 0
 206 0010 E368     		ldr	r3, [r4, #12]
 207 0012 3BB1     		cbz	r3, .L14
 208              		.loc 1 2438 0 is_stmt 0 discriminator 1
 209 0014 B3F5005F 		cmp	r3, #8192
 210 0018 04D0     		beq	.L14
 211              		.loc 1 2438 0 discriminator 2
 212 001a 40F68611 		movw	r1, #2438
 213 001e B248     		ldr	r0, .L27+4
 214 0020 FFF7FEFF 		bl	assert_failed
 215              	.LVL14:
 216              	.L14:
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 217              		.loc 1 2439 0 is_stmt 1
 218 0024 2369     		ldr	r3, [r4, #16]
 219 0026 53B1     		cbz	r3, .L15
 220              		.loc 1 2439 0 is_stmt 0 discriminator 1
 221 0028 B3F5806F 		cmp	r3, #1024
 222 002c 07D0     		beq	.L15
 223              		.loc 1 2439 0 discriminator 2
 224 002e B3F5C06F 		cmp	r3, #1536
 225 0032 04D0     		beq	.L15
 226              		.loc 1 2439 0 discriminator 3
 227 0034 40F68711 		movw	r1, #2439
 228 0038 AB48     		ldr	r0, .L27+4
 229 003a FFF7FEFF 		bl	assert_failed
 230              	.LVL15:
 231              	.L15:
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 232              		.loc 1 2440 0 is_stmt 1
 233 003e 6369     		ldr	r3, [r4, #20]
 234 0040 4FF6F372 		movw	r2, #65523
ARM GAS  /tmp/cczJWHrP.s 			page 48


 235 0044 1342     		tst	r3, r2
 236 0046 00D1     		bne	.L16
 237              		.loc 1 2440 0 is_stmt 0 discriminator 2
 238 0048 23B9     		cbnz	r3, .L17
 239              	.L16:
 240              		.loc 1 2440 0 discriminator 3
 241 004a 40F68811 		movw	r1, #2440
 242 004e A648     		ldr	r0, .L27+4
 243 0050 FFF7FEFF 		bl	assert_failed
 244              	.LVL16:
 245              	.L17:
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR2;
 246              		.loc 1 2443 0 is_stmt 1
 247 0054 2268     		ldr	r2, [r4]
 248 0056 1369     		ldr	r3, [r2, #16]
 249              	.LVL17:
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear STOP[13:12] bits */
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 250              		.loc 1 2446 0
 251 0058 23F44053 		bic	r3, r3, #12288
 252              	.LVL18:
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according to huart->Init.StopBits value */
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.StopBits;
 253              		.loc 1 2449 0
 254 005c E168     		ldr	r1, [r4, #12]
 255 005e 0B43     		orrs	r3, r3, r1
 256              	.LVL19:
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR2 */
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR2, (uint32_t)tmpreg);
 257              		.loc 1 2452 0
 258 0060 1361     		str	r3, [r2, #16]
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 259              		.loc 1 2455 0
 260 0062 2168     		ldr	r1, [r4]
 261 0064 CB68     		ldr	r3, [r1, #12]
 262              	.LVL20:
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE and RE bits */
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | \
 263              		.loc 1 2458 0
 264 0066 23F41643 		bic	r3, r3, #38400
 265              	.LVL21:
 266 006a 23F00C03 		bic	r3, r3, #12
 267              	.LVL22:
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                    USART_CR1_RE | USART_CR1_OVER8));
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode: 
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value 
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
ARM GAS  /tmp/cczJWHrP.s 			page 49


2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.
 268              		.loc 1 2466 0
 269 006e A268     		ldr	r2, [r4, #8]
 270 0070 2069     		ldr	r0, [r4, #16]
 271 0072 0243     		orrs	r2, r2, r0
 272 0074 6069     		ldr	r0, [r4, #20]
 273 0076 0243     		orrs	r2, r2, r0
 274 0078 E069     		ldr	r0, [r4, #28]
 275 007a 0243     		orrs	r2, r2, r0
 276 007c 1343     		orrs	r3, r3, r2
 277              	.LVL23:
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 278              		.loc 1 2469 0
 279 007e CB60     		str	r3, [r1, #12]
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/  
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR3;
 280              		.loc 1 2472 0
 281 0080 2268     		ldr	r2, [r4]
 282 0082 5369     		ldr	r3, [r2, #20]
 283              	.LVL24:
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear CTSE and RTSE bits */
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE));
 284              		.loc 1 2475 0
 285 0084 23F44073 		bic	r3, r3, #768
 286              	.LVL25:
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= huart->Init.HwFlowCtl;
 287              		.loc 1 2478 0
 288 0088 A169     		ldr	r1, [r4, #24]
 289 008a 0B43     		orrs	r3, r3, r1
 290              	.LVL26:
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR3 */
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR3, (uint32_t)tmpreg);
 291              		.loc 1 2481 0
 292 008c 5361     		str	r3, [r2, #20]
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Over Sampling */
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if(huart->Init.OverSampling == UART_OVERSAMPLING_8)
 293              		.loc 1 2484 0
 294 008e E369     		ldr	r3, [r4, #28]
 295              	.LVL27:
 296 0090 B3F5004F 		cmp	r3, #32768
 297 0094 68D0     		beq	.L26
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) 
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  /tmp/cczJWHrP.s 			page 50


2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Instance == USART1)
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }	
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*-------------------------- USART BRR Configuration ---------------------*/
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) 
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if((huart->Instance == USART1) || (huart->Instance == USART6))
 298              		.loc 1 2507 0
 299 0096 D4F80080 		ldr	r8, [r4]
 300 009a 944B     		ldr	r3, .L27+8
 301 009c 9845     		cmp	r8, r3
 302 009e 00F02981 		beq	.L22
 303              		.loc 1 2507 0 is_stmt 0 discriminator 1
 304 00a2 03F58063 		add	r3, r3, #1024
 305 00a6 9845     		cmp	r8, r3
 306 00a8 00F02481 		beq	.L22
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if(huart->Instance == USART1)
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate);
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }	
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->BRR = UART_BRR_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate);
 307              		.loc 1 2519 0 is_stmt 1
 308 00ac FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 309              	.LVL28:
 310 00b0 00EB8000 		add	r0, r0, r0, lsl #2
 311 00b4 00EB8000 		add	r0, r0, r0, lsl #2
 312 00b8 6568     		ldr	r5, [r4, #4]
 313 00ba AD00     		lsls	r5, r5, #2
 314 00bc B0FBF5F5 		udiv	r5, r0, r5
 315 00c0 8B4F     		ldr	r7, .L27+12
 316 00c2 A7FB0535 		umull	r3, r5, r7, r5
 317 00c6 6D09     		lsrs	r5, r5, #5
 318 00c8 2E01     		lsls	r6, r5, #4
 319 00ca FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 320              	.LVL29:
 321 00ce 00EB8000 		add	r0, r0, r0, lsl #2
 322 00d2 00EB8000 		add	r0, r0, r0, lsl #2
 323 00d6 6568     		ldr	r5, [r4, #4]
 324 00d8 AD00     		lsls	r5, r5, #2
 325 00da B0FBF5FA 		udiv	r10, r0, r5
 326 00de FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
ARM GAS  /tmp/cczJWHrP.s 			page 51


 327              	.LVL30:
 328 00e2 00EB8000 		add	r0, r0, r0, lsl #2
 329 00e6 00EB8000 		add	r0, r0, r0, lsl #2
 330 00ea 6568     		ldr	r5, [r4, #4]
 331 00ec AD00     		lsls	r5, r5, #2
 332 00ee B0FBF5F5 		udiv	r5, r0, r5
 333 00f2 A7FB0535 		umull	r3, r5, r7, r5
 334 00f6 6D09     		lsrs	r5, r5, #5
 335 00f8 4FF06409 		mov	r9, #100
 336 00fc 09FB15A5 		mls	r5, r9, r5, r10
 337 0100 2D01     		lsls	r5, r5, #4
 338 0102 3235     		adds	r5, r5, #50
 339 0104 A7FB0535 		umull	r3, r5, r7, r5
 340 0108 6D09     		lsrs	r5, r5, #5
 341 010a 05F0F005 		and	r5, r5, #240
 342 010e 3544     		add	r5, r5, r6
 343 0110 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 344              	.LVL31:
 345 0114 00EB8000 		add	r0, r0, r0, lsl #2
 346 0118 00EB8000 		add	r0, r0, r0, lsl #2
 347 011c 6668     		ldr	r6, [r4, #4]
 348 011e B600     		lsls	r6, r6, #2
 349 0120 B0FBF6F6 		udiv	r6, r0, r6
 350 0124 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 351              	.LVL32:
 352 0128 00EB8000 		add	r0, r0, r0, lsl #2
 353 012c 00EB8000 		add	r0, r0, r0, lsl #2
 354 0130 6368     		ldr	r3, [r4, #4]
 355 0132 9B00     		lsls	r3, r3, #2
 356 0134 B0FBF3F0 		udiv	r0, r0, r3
 357 0138 A7FB0030 		umull	r3, r0, r7, r0
 358 013c 4009     		lsrs	r0, r0, #5
 359 013e 09FB1069 		mls	r9, r9, r0, r6
 360 0142 4FEA0919 		lsl	r9, r9, #4
 361 0146 09F13209 		add	r9, r9, #50
 362 014a A7FB0937 		umull	r3, r7, r7, r9
 363 014e C7F34317 		ubfx	r7, r7, #5, #4
 364 0152 2F44     		add	r7, r7, r5
 365 0154 C8F80870 		str	r7, [r8, #8]
 366 0158 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 367              	.LVL33:
 368              	.L25:
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 369              		.loc 1 2437 0 discriminator 1
 370 015c 40F68511 		movw	r1, #2437
 371 0160 6148     		ldr	r0, .L27+4
 372              	.LVL34:
 373 0162 FFF7FEFF 		bl	assert_failed
 374              	.LVL35:
 375 0166 53E7     		b	.L13
 376              	.LVL36:
 377              	.L26:
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 378              		.loc 1 2488 0
 379 0168 D4F80080 		ldr	r8, [r4]
 380 016c 03F18043 		add	r3, r3, #1073741824
 381 0170 03F51043 		add	r3, r3, #36864
ARM GAS  /tmp/cczJWHrP.s 			page 52


 382 0174 9845     		cmp	r8, r3
 383 0176 5CD0     		beq	.L19
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 384              		.loc 1 2488 0 is_stmt 0 discriminator 1
 385 0178 03F58063 		add	r3, r3, #1024
 386 017c 9845     		cmp	r8, r3
 387 017e 58D0     		beq	.L19
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 388              		.loc 1 2500 0 is_stmt 1
 389 0180 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 390              	.LVL37:
 391 0184 00EB8000 		add	r0, r0, r0, lsl #2
 392 0188 00EB8000 		add	r0, r0, r0, lsl #2
 393 018c 6568     		ldr	r5, [r4, #4]
 394 018e 6D00     		lsls	r5, r5, #1
 395 0190 B0FBF5F5 		udiv	r5, r0, r5
 396 0194 564F     		ldr	r7, .L27+12
 397 0196 A7FB0535 		umull	r3, r5, r7, r5
 398 019a 6D09     		lsrs	r5, r5, #5
 399 019c 2E01     		lsls	r6, r5, #4
 400 019e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 401              	.LVL38:
 402 01a2 00EB8000 		add	r0, r0, r0, lsl #2
 403 01a6 00EB8000 		add	r0, r0, r0, lsl #2
 404 01aa 6568     		ldr	r5, [r4, #4]
 405 01ac 6D00     		lsls	r5, r5, #1
 406 01ae B0FBF5FA 		udiv	r10, r0, r5
 407 01b2 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 408              	.LVL39:
 409 01b6 00EB8000 		add	r0, r0, r0, lsl #2
 410 01ba 00EB8000 		add	r0, r0, r0, lsl #2
 411 01be 6568     		ldr	r5, [r4, #4]
 412 01c0 6D00     		lsls	r5, r5, #1
 413 01c2 B0FBF5F5 		udiv	r5, r0, r5
 414 01c6 A7FB0535 		umull	r3, r5, r7, r5
 415 01ca 6D09     		lsrs	r5, r5, #5
 416 01cc 4FF06409 		mov	r9, #100
 417 01d0 09FB15A5 		mls	r5, r9, r5, r10
 418 01d4 ED00     		lsls	r5, r5, #3
 419 01d6 3235     		adds	r5, r5, #50
 420 01d8 A7FB0535 		umull	r3, r5, r7, r5
 421 01dc 6D09     		lsrs	r5, r5, #5
 422 01de 6D00     		lsls	r5, r5, #1
 423 01e0 05F4F875 		and	r5, r5, #496
 424 01e4 3544     		add	r5, r5, r6
 425 01e6 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 426              	.LVL40:
 427 01ea 00EB8000 		add	r0, r0, r0, lsl #2
 428 01ee 00EB8000 		add	r0, r0, r0, lsl #2
 429 01f2 6668     		ldr	r6, [r4, #4]
 430 01f4 7600     		lsls	r6, r6, #1
 431 01f6 B0FBF6F6 		udiv	r6, r0, r6
 432 01fa FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 433              	.LVL41:
 434 01fe 00EB8000 		add	r0, r0, r0, lsl #2
 435 0202 00EB8000 		add	r0, r0, r0, lsl #2
 436 0206 6368     		ldr	r3, [r4, #4]
ARM GAS  /tmp/cczJWHrP.s 			page 53


 437 0208 5B00     		lsls	r3, r3, #1
 438 020a B0FBF3F3 		udiv	r3, r0, r3
 439 020e A7FB0323 		umull	r2, r3, r7, r3
 440 0212 5B09     		lsrs	r3, r3, #5
 441 0214 09FB1369 		mls	r9, r9, r3, r6
 442 0218 4FEAC909 		lsl	r9, r9, #3
 443 021c 09F13209 		add	r9, r9, #50
 444 0220 A7FB0937 		umull	r3, r7, r7, r9
 445 0224 C7F34217 		ubfx	r7, r7, #5, #3
 446 0228 2F44     		add	r7, r7, r5
 447 022a C8F80870 		str	r7, [r8, #8]
 448 022e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 449              	.LVL42:
 450              	.L19:
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 451              		.loc 1 2490 0
 452 0232 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 453              	.LVL43:
 454 0236 00EB8000 		add	r0, r0, r0, lsl #2
 455 023a 00EB8000 		add	r0, r0, r0, lsl #2
 456 023e 6568     		ldr	r5, [r4, #4]
 457 0240 6D00     		lsls	r5, r5, #1
 458 0242 B0FBF5F5 		udiv	r5, r0, r5
 459 0246 2A4F     		ldr	r7, .L27+12
 460 0248 A7FB0535 		umull	r3, r5, r7, r5
 461 024c 6D09     		lsrs	r5, r5, #5
 462 024e 2E01     		lsls	r6, r5, #4
 463 0250 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 464              	.LVL44:
 465 0254 00EB8000 		add	r0, r0, r0, lsl #2
 466 0258 00EB8000 		add	r0, r0, r0, lsl #2
 467 025c 6568     		ldr	r5, [r4, #4]
 468 025e 6D00     		lsls	r5, r5, #1
 469 0260 B0FBF5FA 		udiv	r10, r0, r5
 470 0264 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 471              	.LVL45:
 472 0268 00EB8000 		add	r0, r0, r0, lsl #2
 473 026c 00EB8000 		add	r0, r0, r0, lsl #2
 474 0270 6568     		ldr	r5, [r4, #4]
 475 0272 6D00     		lsls	r5, r5, #1
 476 0274 B0FBF5F5 		udiv	r5, r0, r5
 477 0278 A7FB0535 		umull	r3, r5, r7, r5
 478 027c 6D09     		lsrs	r5, r5, #5
 479 027e 4FF06409 		mov	r9, #100
 480 0282 09FB15A5 		mls	r5, r9, r5, r10
 481 0286 ED00     		lsls	r5, r5, #3
 482 0288 3235     		adds	r5, r5, #50
 483 028a A7FB0535 		umull	r3, r5, r7, r5
 484 028e 6D09     		lsrs	r5, r5, #5
 485 0290 6D00     		lsls	r5, r5, #1
 486 0292 05F4F875 		and	r5, r5, #496
 487 0296 3544     		add	r5, r5, r6
 488 0298 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 489              	.LVL46:
 490 029c 00EB8000 		add	r0, r0, r0, lsl #2
 491 02a0 00EB8000 		add	r0, r0, r0, lsl #2
 492 02a4 6668     		ldr	r6, [r4, #4]
ARM GAS  /tmp/cczJWHrP.s 			page 54


 493 02a6 7600     		lsls	r6, r6, #1
 494 02a8 B0FBF6F6 		udiv	r6, r0, r6
 495 02ac FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 496              	.LVL47:
 497 02b0 00EB8000 		add	r0, r0, r0, lsl #2
 498 02b4 00EB8000 		add	r0, r0, r0, lsl #2
 499 02b8 6368     		ldr	r3, [r4, #4]
 500 02ba 5B00     		lsls	r3, r3, #1
 501 02bc B0FBF3F3 		udiv	r3, r0, r3
 502 02c0 A7FB0323 		umull	r2, r3, r7, r3
 503 02c4 5B09     		lsrs	r3, r3, #5
 504 02c6 09FB1369 		mls	r9, r9, r3, r6
 505 02ca 4FEAC909 		lsl	r9, r9, #3
 506 02ce 09F13209 		add	r9, r9, #50
 507 02d2 A7FB0937 		umull	r3, r7, r7, r9
 508 02d6 C7F34217 		ubfx	r7, r7, #5, #3
 509 02da 2F44     		add	r7, r7, r5
 510 02dc C8F80870 		str	r7, [r8, #8]
 511 02e0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 512              	.LVL48:
 513              	.L28:
 514              		.align	2
 515              	.L27:
 516 02e4 A037A000 		.word	10500000
 517 02e8 00000000 		.word	.LC0
 518 02ec 00100140 		.word	1073811456
 519 02f0 1F85EB51 		.word	1374389535
 520              	.LVL49:
 521              	.L22:
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 522              		.loc 1 2509 0
 523 02f4 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 524              	.LVL50:
 525 02f8 00EB8000 		add	r0, r0, r0, lsl #2
 526 02fc 00EB8000 		add	r0, r0, r0, lsl #2
 527 0300 6568     		ldr	r5, [r4, #4]
 528 0302 AD00     		lsls	r5, r5, #2
 529 0304 B0FBF5F5 		udiv	r5, r0, r5
 530 0308 264F     		ldr	r7, .L29
 531 030a A7FB0535 		umull	r3, r5, r7, r5
 532 030e 6D09     		lsrs	r5, r5, #5
 533 0310 2E01     		lsls	r6, r5, #4
 534 0312 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 535              	.LVL51:
 536 0316 00EB8000 		add	r0, r0, r0, lsl #2
 537 031a 00EB8000 		add	r0, r0, r0, lsl #2
 538 031e 6568     		ldr	r5, [r4, #4]
 539 0320 AD00     		lsls	r5, r5, #2
 540 0322 B0FBF5FA 		udiv	r10, r0, r5
 541 0326 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 542              	.LVL52:
 543 032a 00EB8000 		add	r0, r0, r0, lsl #2
 544 032e 00EB8000 		add	r0, r0, r0, lsl #2
 545 0332 6568     		ldr	r5, [r4, #4]
 546 0334 AD00     		lsls	r5, r5, #2
 547 0336 B0FBF5F5 		udiv	r5, r0, r5
 548 033a A7FB0535 		umull	r3, r5, r7, r5
ARM GAS  /tmp/cczJWHrP.s 			page 55


 549 033e 6D09     		lsrs	r5, r5, #5
 550 0340 4FF06409 		mov	r9, #100
 551 0344 09FB15A5 		mls	r5, r9, r5, r10
 552 0348 2D01     		lsls	r5, r5, #4
 553 034a 3235     		adds	r5, r5, #50
 554 034c A7FB0535 		umull	r3, r5, r7, r5
 555 0350 6D09     		lsrs	r5, r5, #5
 556 0352 05F0F005 		and	r5, r5, #240
 557 0356 3544     		add	r5, r5, r6
 558 0358 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 559              	.LVL53:
 560 035c 00EB8000 		add	r0, r0, r0, lsl #2
 561 0360 00EB8000 		add	r0, r0, r0, lsl #2
 562 0364 6668     		ldr	r6, [r4, #4]
 563 0366 B600     		lsls	r6, r6, #2
 564 0368 B0FBF6F6 		udiv	r6, r0, r6
 565 036c FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 566              	.LVL54:
 567 0370 00EB8000 		add	r0, r0, r0, lsl #2
 568 0374 00EB8000 		add	r0, r0, r0, lsl #2
 569 0378 6368     		ldr	r3, [r4, #4]
 570 037a 9B00     		lsls	r3, r3, #2
 571 037c B0FBF3F3 		udiv	r3, r0, r3
 572 0380 A7FB0323 		umull	r2, r3, r7, r3
 573 0384 5B09     		lsrs	r3, r3, #5
 574 0386 09FB1369 		mls	r9, r9, r3, r6
 575 038a 4FEA0919 		lsl	r9, r9, #4
 576 038e 09F13209 		add	r9, r9, #50
 577 0392 A7FB0937 		umull	r3, r7, r7, r9
 578 0396 C7F34317 		ubfx	r7, r7, #5, #4
 579 039a 2F44     		add	r7, r7, r5
 580 039c C8F80870 		str	r7, [r8, #8]
 581 03a0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 582              	.LVL55:
 583              	.L30:
 584              		.align	2
 585              	.L29:
 586 03a4 1F85EB51 		.word	1374389535
 587              		.cfi_endproc
 588              	.LFE177:
 590              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 591              		.align	1
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv4-sp-d16
 597              	UART_WaitOnFlagUntilTimeout:
 598              	.LFB166:
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
 599              		.loc 1 2109 0
 600              		.cfi_startproc
 601              		@ args = 4, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              	.LVL56:
 604 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 605              	.LCFI1:
 606              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cczJWHrP.s 			page 56


 607              		.cfi_offset 4, -24
 608              		.cfi_offset 5, -20
 609              		.cfi_offset 6, -16
 610              		.cfi_offset 7, -12
 611              		.cfi_offset 8, -8
 612              		.cfi_offset 14, -4
 613 0004 0546     		mov	r5, r0
 614 0006 0F46     		mov	r7, r1
 615 0008 1646     		mov	r6, r2
 616 000a 9846     		mov	r8, r3
 617 000c 069C     		ldr	r4, [sp, #24]
 618              	.LVL57:
 619              	.L33:
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 620              		.loc 1 2111 0
 621 000e 2B68     		ldr	r3, [r5]
 622 0010 1B68     		ldr	r3, [r3]
 623 0012 37EA0303 		bics	r3, r7, r3
 624 0016 0CBF     		ite	eq
 625 0018 0123     		moveq	r3, #1
 626 001a 0023     		movne	r3, #0
 627 001c B342     		cmp	r3, r6
 628 001e 1ED1     		bne	.L38
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 629              		.loc 1 2114 0
 630 0020 B4F1FF3F 		cmp	r4, #-1
 631 0024 F3D0     		beq	.L33
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 632              		.loc 1 2116 0
 633 0026 2CB1     		cbz	r4, .L34
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 634              		.loc 1 2116 0 is_stmt 0 discriminator 1
 635 0028 FFF7FEFF 		bl	HAL_GetTick
 636              	.LVL58:
 637 002c A0EB0800 		sub	r0, r0, r8
 638 0030 8442     		cmp	r4, r0
 639 0032 ECD2     		bcs	.L33
 640              	.L34:
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 641              		.loc 1 2119 0 is_stmt 1
 642 0034 2A68     		ldr	r2, [r5]
 643 0036 D368     		ldr	r3, [r2, #12]
 644 0038 23F4D073 		bic	r3, r3, #416
 645 003c D360     		str	r3, [r2, #12]
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 646              		.loc 1 2120 0
 647 003e 2A68     		ldr	r2, [r5]
 648 0040 5369     		ldr	r3, [r2, #20]
 649 0042 23F00103 		bic	r3, r3, #1
 650 0046 5361     		str	r3, [r2, #20]
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 651              		.loc 1 2122 0
 652 0048 2023     		movs	r3, #32
 653 004a 85F83930 		strb	r3, [r5, #57]
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 654              		.loc 1 2123 0
 655 004e 85F83A30 		strb	r3, [r5, #58]
ARM GAS  /tmp/cczJWHrP.s 			page 57


2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 656              		.loc 1 2126 0
 657 0052 0023     		movs	r3, #0
 658 0054 85F83830 		strb	r3, [r5, #56]
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 659              		.loc 1 2128 0
 660 0058 0320     		movs	r0, #3
 661 005a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 662              	.LVL59:
 663              	.L38:
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 664              		.loc 1 2133 0
 665 005e 0020     		movs	r0, #0
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 666              		.loc 1 2134 0
 667 0060 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 668              		.cfi_endproc
 669              	.LFE166:
 671              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 672              		.align	1
 673              		.weak	HAL_UART_MspInit
 674              		.syntax unified
 675              		.thumb
 676              		.thumb_func
 677              		.fpu fpv4-sp-d16
 679              	HAL_UART_MspInit:
 680              	.LFB128:
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    /* Prevent unused argument(s) compilation warning */
 681              		.loc 1 528 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 0, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686              	.LVL60:
 687 0000 7047     		bx	lr
 688              		.cfi_endproc
 689              	.LFE128:
 691              		.section	.text.HAL_UART_Init,"ax",%progbits
 692              		.align	1
 693              		.global	HAL_UART_Init
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 697              		.fpu fpv4-sp-d16
 699              	HAL_UART_Init:
 700              	.LFB123:
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 701              		.loc 1 245 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 0
 704              		@ frame_needed = 0, uses_anonymous_args = 0
 705              	.LVL61:
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 706              		.loc 1 247 0
 707 0000 0028     		cmp	r0, #0
 708 0002 00F08680 		beq	.L48
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
ARM GAS  /tmp/cczJWHrP.s 			page 58


 709              		.loc 1 245 0
 710 0006 10B5     		push	{r4, lr}
 711              	.LCFI2:
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 4, -8
 714              		.cfi_offset 14, -4
 715 0008 0446     		mov	r4, r0
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 716              		.loc 1 253 0
 717 000a 8369     		ldr	r3, [r0, #24]
 718 000c 2BB3     		cbz	r3, .L42
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 719              		.loc 1 256 0
 720 000e 0368     		ldr	r3, [r0]
 721 0010 414A     		ldr	r2, .L54
 722 0012 9342     		cmp	r3, r2
 723 0014 10D0     		beq	.L43
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 724              		.loc 1 256 0 is_stmt 0 discriminator 1
 725 0016 A2F54C42 		sub	r2, r2, #52224
 726 001a 9342     		cmp	r3, r2
 727 001c 0CD0     		beq	.L43
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 728              		.loc 1 256 0 discriminator 2
 729 001e 02F58062 		add	r2, r2, #1024
 730 0022 9342     		cmp	r3, r2
 731 0024 08D0     		beq	.L43
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 732              		.loc 1 256 0 discriminator 3
 733 0026 02F54C42 		add	r2, r2, #52224
 734 002a 9342     		cmp	r3, r2
 735 002c 04D0     		beq	.L43
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 736              		.loc 1 256 0 discriminator 4
 737 002e 4FF48071 		mov	r1, #256
 738 0032 3A48     		ldr	r0, .L54+4
 739              	.LVL62:
 740 0034 FFF7FEFF 		bl	assert_failed
 741              	.LVL63:
 742              	.L43:
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 743              		.loc 1 257 0 is_stmt 1
 744 0038 A369     		ldr	r3, [r4, #24]
 745 003a 5BB3     		cbz	r3, .L44
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 746              		.loc 1 257 0 is_stmt 0 discriminator 1
 747 003c B3F5807F 		cmp	r3, #256
 748 0040 28D0     		beq	.L44
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 749              		.loc 1 257 0 discriminator 2
 750 0042 B3F5007F 		cmp	r3, #512
 751 0046 25D0     		beq	.L44
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 752              		.loc 1 257 0 discriminator 3
 753 0048 B3F5407F 		cmp	r3, #768
 754 004c 22D0     		beq	.L44
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  /tmp/cczJWHrP.s 			page 59


 755              		.loc 1 257 0 discriminator 4
 756 004e 40F20111 		movw	r1, #257
 757 0052 3248     		ldr	r0, .L54+4
 758 0054 FFF7FEFF 		bl	assert_failed
 759              	.LVL64:
 760 0058 1CE0     		b	.L44
 761              	.LVL65:
 762              	.L42:
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 763              		.loc 1 261 0 is_stmt 1
 764 005a 0368     		ldr	r3, [r0]
 765 005c 2E4A     		ldr	r2, .L54
 766 005e 9342     		cmp	r3, r2
 767 0060 18D0     		beq	.L44
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 768              		.loc 1 261 0 is_stmt 0 discriminator 1
 769 0062 A2F54C42 		sub	r2, r2, #52224
 770 0066 9342     		cmp	r3, r2
 771 0068 14D0     		beq	.L44
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 772              		.loc 1 261 0 discriminator 2
 773 006a 02F58062 		add	r2, r2, #1024
 774 006e 9342     		cmp	r3, r2
 775 0070 10D0     		beq	.L44
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 776              		.loc 1 261 0 discriminator 3
 777 0072 02F58062 		add	r2, r2, #1024
 778 0076 9342     		cmp	r3, r2
 779 0078 0CD0     		beq	.L44
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 780              		.loc 1 261 0 discriminator 4
 781 007a 02F58062 		add	r2, r2, #1024
 782 007e 9342     		cmp	r3, r2
 783 0080 08D0     		beq	.L44
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 784              		.loc 1 261 0 discriminator 5
 785 0082 02F54442 		add	r2, r2, #50176
 786 0086 9342     		cmp	r3, r2
 787 0088 04D0     		beq	.L44
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 788              		.loc 1 261 0 discriminator 6
 789 008a 40F20511 		movw	r1, #261
 790 008e 2348     		ldr	r0, .L54+4
 791              	.LVL66:
 792 0090 FFF7FEFF 		bl	assert_failed
 793              	.LVL67:
 794              	.L44:
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 795              		.loc 1 263 0 is_stmt 1
 796 0094 A368     		ldr	r3, [r4, #8]
 797 0096 3BB1     		cbz	r3, .L45
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 798              		.loc 1 263 0 is_stmt 0 discriminator 1
 799 0098 B3F5805F 		cmp	r3, #4096
 800 009c 04D0     		beq	.L45
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 801              		.loc 1 263 0 discriminator 2
ARM GAS  /tmp/cczJWHrP.s 			page 60


 802 009e 40F20711 		movw	r1, #263
 803 00a2 1E48     		ldr	r0, .L54+4
 804 00a4 FFF7FEFF 		bl	assert_failed
 805              	.LVL68:
 806              	.L45:
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 807              		.loc 1 264 0 is_stmt 1
 808 00a8 E369     		ldr	r3, [r4, #28]
 809 00aa 3BB1     		cbz	r3, .L46
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 810              		.loc 1 264 0 is_stmt 0 discriminator 1
 811 00ac B3F5004F 		cmp	r3, #32768
 812 00b0 04D0     		beq	.L46
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 813              		.loc 1 264 0 discriminator 2
 814 00b2 4FF48471 		mov	r1, #264
 815 00b6 1948     		ldr	r0, .L54+4
 816 00b8 FFF7FEFF 		bl	assert_failed
 817              	.LVL69:
 818              	.L46:
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {  
 819              		.loc 1 266 0 is_stmt 1
 820 00bc 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 821 00c0 0BB3     		cbz	r3, .L53
 822              	.L47:
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 823              		.loc 1 274 0
 824 00c2 2423     		movs	r3, #36
 825 00c4 84F83930 		strb	r3, [r4, #57]
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 826              		.loc 1 277 0
 827 00c8 2268     		ldr	r2, [r4]
 828 00ca D368     		ldr	r3, [r2, #12]
 829 00cc 23F40053 		bic	r3, r3, #8192
 830 00d0 D360     		str	r3, [r2, #12]
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 831              		.loc 1 280 0
 832 00d2 2046     		mov	r0, r4
 833 00d4 FFF7FEFF 		bl	UART_SetConfig
 834              	.LVL70:
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 835              		.loc 1 285 0
 836 00d8 2268     		ldr	r2, [r4]
 837 00da 1369     		ldr	r3, [r2, #16]
 838 00dc 23F49043 		bic	r3, r3, #18432
 839 00e0 1361     		str	r3, [r2, #16]
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 840              		.loc 1 286 0
 841 00e2 2268     		ldr	r2, [r4]
 842 00e4 5369     		ldr	r3, [r2, #20]
 843 00e6 23F02A03 		bic	r3, r3, #42
 844 00ea 5361     		str	r3, [r2, #20]
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 845              		.loc 1 289 0
 846 00ec 2268     		ldr	r2, [r4]
 847 00ee D368     		ldr	r3, [r2, #12]
 848 00f0 43F40053 		orr	r3, r3, #8192
ARM GAS  /tmp/cczJWHrP.s 			page 61


 849 00f4 D360     		str	r3, [r2, #12]
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 850              		.loc 1 292 0
 851 00f6 0020     		movs	r0, #0
 852 00f8 E063     		str	r0, [r4, #60]
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 853              		.loc 1 293 0
 854 00fa 2023     		movs	r3, #32
 855 00fc 84F83930 		strb	r3, [r4, #57]
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 856              		.loc 1 294 0
 857 0100 84F83A30 		strb	r3, [r4, #58]
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 858              		.loc 1 296 0
 859 0104 10BD     		pop	{r4, pc}
 860              	.LVL71:
 861              	.L53:
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 862              		.loc 1 269 0
 863 0106 84F83830 		strb	r3, [r4, #56]
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 864              		.loc 1 271 0
 865 010a 2046     		mov	r0, r4
 866 010c FFF7FEFF 		bl	HAL_UART_MspInit
 867              	.LVL72:
 868 0110 D7E7     		b	.L47
 869              	.LVL73:
 870              	.L48:
 871              	.LCFI3:
 872              		.cfi_def_cfa_offset 0
 873              		.cfi_restore 4
 874              		.cfi_restore 14
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 875              		.loc 1 249 0
 876 0112 0120     		movs	r0, #1
 877              	.LVL74:
 878 0114 7047     		bx	lr
 879              	.L55:
 880 0116 00BF     		.align	2
 881              	.L54:
 882 0118 00100140 		.word	1073811456
 883 011c 00000000 		.word	.LC0
 884              		.cfi_endproc
 885              	.LFE123:
 887              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 888              		.align	1
 889              		.global	HAL_HalfDuplex_Init
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 893              		.fpu fpv4-sp-d16
 895              	HAL_HalfDuplex_Init:
 896              	.LFB124:
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 897              		.loc 1 307 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cczJWHrP.s 			page 62


 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              	.LVL75:
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 902              		.loc 1 309 0
 903 0000 0028     		cmp	r0, #0
 904 0002 62D0     		beq	.L62
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 905              		.loc 1 307 0
 906 0004 10B5     		push	{r4, lr}
 907              	.LCFI4:
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 4, -8
 910              		.cfi_offset 14, -4
 911 0006 0446     		mov	r4, r0
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 912              		.loc 1 315 0
 913 0008 0368     		ldr	r3, [r0]
 914 000a 314A     		ldr	r2, .L68
 915 000c 9342     		cmp	r3, r2
 916 000e 18D0     		beq	.L58
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 917              		.loc 1 315 0 is_stmt 0 discriminator 1
 918 0010 A2F54C42 		sub	r2, r2, #52224
 919 0014 9342     		cmp	r3, r2
 920 0016 14D0     		beq	.L58
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 921              		.loc 1 315 0 discriminator 2
 922 0018 02F58062 		add	r2, r2, #1024
 923 001c 9342     		cmp	r3, r2
 924 001e 10D0     		beq	.L58
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 925              		.loc 1 315 0 discriminator 3
 926 0020 02F58062 		add	r2, r2, #1024
 927 0024 9342     		cmp	r3, r2
 928 0026 0CD0     		beq	.L58
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 929              		.loc 1 315 0 discriminator 4
 930 0028 02F58062 		add	r2, r2, #1024
 931 002c 9342     		cmp	r3, r2
 932 002e 08D0     		beq	.L58
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 933              		.loc 1 315 0 discriminator 5
 934 0030 02F54442 		add	r2, r2, #50176
 935 0034 9342     		cmp	r3, r2
 936 0036 04D0     		beq	.L58
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 937              		.loc 1 315 0 discriminator 6
 938 0038 40F23B11 		movw	r1, #315
 939 003c 2548     		ldr	r0, .L68+4
 940              	.LVL76:
 941 003e FFF7FEFF 		bl	assert_failed
 942              	.LVL77:
 943              	.L58:
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 944              		.loc 1 316 0 is_stmt 1
 945 0042 A368     		ldr	r3, [r4, #8]
 946 0044 3BB1     		cbz	r3, .L59
ARM GAS  /tmp/cczJWHrP.s 			page 63


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 947              		.loc 1 316 0 is_stmt 0 discriminator 1
 948 0046 B3F5805F 		cmp	r3, #4096
 949 004a 04D0     		beq	.L59
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 950              		.loc 1 316 0 discriminator 2
 951 004c 4FF49E71 		mov	r1, #316
 952 0050 2048     		ldr	r0, .L68+4
 953 0052 FFF7FEFF 		bl	assert_failed
 954              	.LVL78:
 955              	.L59:
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 956              		.loc 1 317 0 is_stmt 1
 957 0056 E369     		ldr	r3, [r4, #28]
 958 0058 3BB1     		cbz	r3, .L60
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 959              		.loc 1 317 0 is_stmt 0 discriminator 1
 960 005a B3F5004F 		cmp	r3, #32768
 961 005e 04D0     		beq	.L60
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 962              		.loc 1 317 0 discriminator 2
 963 0060 40F23D11 		movw	r1, #317
 964 0064 1B48     		ldr	r0, .L68+4
 965 0066 FFF7FEFF 		bl	assert_failed
 966              	.LVL79:
 967              	.L60:
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 968              		.loc 1 319 0 is_stmt 1
 969 006a 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 970 006e 33B3     		cbz	r3, .L67
 971              	.L61:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 972              		.loc 1 327 0
 973 0070 2423     		movs	r3, #36
 974 0072 84F83930 		strb	r3, [r4, #57]
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 975              		.loc 1 330 0
 976 0076 2268     		ldr	r2, [r4]
 977 0078 D368     		ldr	r3, [r2, #12]
 978 007a 23F40053 		bic	r3, r3, #8192
 979 007e D360     		str	r3, [r2, #12]
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 980              		.loc 1 333 0
 981 0080 2046     		mov	r0, r4
 982 0082 FFF7FEFF 		bl	UART_SetConfig
 983              	.LVL80:
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 984              		.loc 1 338 0
 985 0086 2268     		ldr	r2, [r4]
 986 0088 1369     		ldr	r3, [r2, #16]
 987 008a 23F49043 		bic	r3, r3, #18432
 988 008e 1361     		str	r3, [r2, #16]
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 989              		.loc 1 339 0
 990 0090 2268     		ldr	r2, [r4]
 991 0092 5369     		ldr	r3, [r2, #20]
 992 0094 23F02203 		bic	r3, r3, #34
ARM GAS  /tmp/cczJWHrP.s 			page 64


 993 0098 5361     		str	r3, [r2, #20]
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 994              		.loc 1 342 0
 995 009a 2268     		ldr	r2, [r4]
 996 009c 5369     		ldr	r3, [r2, #20]
 997 009e 43F00803 		orr	r3, r3, #8
 998 00a2 5361     		str	r3, [r2, #20]
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 999              		.loc 1 345 0
 1000 00a4 2268     		ldr	r2, [r4]
 1001 00a6 D368     		ldr	r3, [r2, #12]
 1002 00a8 43F40053 		orr	r3, r3, #8192
 1003 00ac D360     		str	r3, [r2, #12]
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 1004              		.loc 1 348 0
 1005 00ae 0020     		movs	r0, #0
 1006 00b0 E063     		str	r0, [r4, #60]
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 1007              		.loc 1 349 0
 1008 00b2 2023     		movs	r3, #32
 1009 00b4 84F83930 		strb	r3, [r4, #57]
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1010              		.loc 1 350 0
 1011 00b8 84F83A30 		strb	r3, [r4, #58]
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1012              		.loc 1 352 0
 1013 00bc 10BD     		pop	{r4, pc}
 1014              	.LVL81:
 1015              	.L67:
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 1016              		.loc 1 322 0
 1017 00be 84F83830 		strb	r3, [r4, #56]
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1018              		.loc 1 324 0
 1019 00c2 2046     		mov	r0, r4
 1020 00c4 FFF7FEFF 		bl	HAL_UART_MspInit
 1021              	.LVL82:
 1022 00c8 D2E7     		b	.L61
 1023              	.LVL83:
 1024              	.L62:
 1025              	.LCFI5:
 1026              		.cfi_def_cfa_offset 0
 1027              		.cfi_restore 4
 1028              		.cfi_restore 14
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1029              		.loc 1 311 0
 1030 00ca 0120     		movs	r0, #1
 1031              	.LVL84:
 1032 00cc 7047     		bx	lr
 1033              	.L69:
 1034 00ce 00BF     		.align	2
 1035              	.L68:
 1036 00d0 00100140 		.word	1073811456
 1037 00d4 00000000 		.word	.LC0
 1038              		.cfi_endproc
 1039              	.LFE124:
 1041              		.section	.text.HAL_LIN_Init,"ax",%progbits
ARM GAS  /tmp/cczJWHrP.s 			page 65


 1042              		.align	1
 1043              		.global	HAL_LIN_Init
 1044              		.syntax unified
 1045              		.thumb
 1046              		.thumb_func
 1047              		.fpu fpv4-sp-d16
 1049              	HAL_LIN_Init:
 1050              	.LFB125:
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1051              		.loc 1 367 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055              	.LVL85:
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1056              		.loc 1 369 0
 1057 0000 0028     		cmp	r0, #0
 1058 0002 73D0     		beq	.L77
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1059              		.loc 1 367 0
 1060 0004 38B5     		push	{r3, r4, r5, lr}
 1061              	.LCFI6:
 1062              		.cfi_def_cfa_offset 16
 1063              		.cfi_offset 3, -16
 1064              		.cfi_offset 4, -12
 1065              		.cfi_offset 5, -8
 1066              		.cfi_offset 14, -4
 1067 0006 0446     		mov	r4, r0
 1068 0008 0D46     		mov	r5, r1
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 1069              		.loc 1 375 0
 1070 000a 0368     		ldr	r3, [r0]
 1071 000c 384A     		ldr	r2, .L85
 1072 000e 9342     		cmp	r3, r2
 1073 0010 18D0     		beq	.L72
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 1074              		.loc 1 375 0 is_stmt 0 discriminator 1
 1075 0012 A2F54C42 		sub	r2, r2, #52224
 1076 0016 9342     		cmp	r3, r2
 1077 0018 14D0     		beq	.L72
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 1078              		.loc 1 375 0 discriminator 2
 1079 001a 02F58062 		add	r2, r2, #1024
 1080 001e 9342     		cmp	r3, r2
 1081 0020 10D0     		beq	.L72
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 1082              		.loc 1 375 0 discriminator 3
 1083 0022 02F58062 		add	r2, r2, #1024
 1084 0026 9342     		cmp	r3, r2
 1085 0028 0CD0     		beq	.L72
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 1086              		.loc 1 375 0 discriminator 4
 1087 002a 02F58062 		add	r2, r2, #1024
 1088 002e 9342     		cmp	r3, r2
 1089 0030 08D0     		beq	.L72
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 1090              		.loc 1 375 0 discriminator 5
ARM GAS  /tmp/cczJWHrP.s 			page 66


 1091 0032 02F54442 		add	r2, r2, #50176
 1092 0036 9342     		cmp	r3, r2
 1093 0038 04D0     		beq	.L72
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 1094              		.loc 1 375 0 discriminator 6
 1095 003a 40F27711 		movw	r1, #375
 1096              	.LVL86:
 1097 003e 2D48     		ldr	r0, .L85+4
 1098              	.LVL87:
 1099 0040 FFF7FEFF 		bl	assert_failed
 1100              	.LVL88:
 1101              	.L72:
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 1102              		.loc 1 376 0 is_stmt 1
 1103 0044 35B1     		cbz	r5, .L73
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 1104              		.loc 1 376 0 is_stmt 0 discriminator 1
 1105 0046 202D     		cmp	r5, #32
 1106 0048 04D0     		beq	.L73
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 1107              		.loc 1 376 0 discriminator 2
 1108 004a 4FF4BC71 		mov	r1, #376
 1109 004e 2948     		ldr	r0, .L85+4
 1110 0050 FFF7FEFF 		bl	assert_failed
 1111              	.LVL89:
 1112              	.L73:
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 1113              		.loc 1 377 0 is_stmt 1
 1114 0054 A368     		ldr	r3, [r4, #8]
 1115 0056 002B     		cmp	r3, #0
 1116 0058 36D1     		bne	.L82
 1117              	.L74:
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1118              		.loc 1 378 0
 1119 005a E369     		ldr	r3, [r4, #28]
 1120 005c 002B     		cmp	r3, #0
 1121 005e 39D1     		bne	.L83
 1122              	.L75:
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1123              		.loc 1 380 0
 1124 0060 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 1125 0064 002B     		cmp	r3, #0
 1126 0066 3BD0     		beq	.L84
 1127              	.L76:
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1128              		.loc 1 388 0
 1129 0068 2423     		movs	r3, #36
 1130 006a 84F83930 		strb	r3, [r4, #57]
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1131              		.loc 1 391 0
 1132 006e 2268     		ldr	r2, [r4]
 1133 0070 D368     		ldr	r3, [r2, #12]
 1134 0072 23F40053 		bic	r3, r3, #8192
 1135 0076 D360     		str	r3, [r2, #12]
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1136              		.loc 1 394 0
 1137 0078 2046     		mov	r0, r4
ARM GAS  /tmp/cczJWHrP.s 			page 67


 1138 007a FFF7FEFF 		bl	UART_SetConfig
 1139              	.LVL90:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 1140              		.loc 1 399 0
 1141 007e 2268     		ldr	r2, [r4]
 1142 0080 1369     		ldr	r3, [r2, #16]
 1143 0082 23F40063 		bic	r3, r3, #2048
 1144 0086 1361     		str	r3, [r2, #16]
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1145              		.loc 1 400 0
 1146 0088 2268     		ldr	r2, [r4]
 1147 008a 5369     		ldr	r3, [r2, #20]
 1148 008c 23F02A03 		bic	r3, r3, #42
 1149 0090 5361     		str	r3, [r2, #20]
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1150              		.loc 1 403 0
 1151 0092 2268     		ldr	r2, [r4]
 1152 0094 1369     		ldr	r3, [r2, #16]
 1153 0096 43F48043 		orr	r3, r3, #16384
 1154 009a 1361     		str	r3, [r2, #16]
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 1155              		.loc 1 406 0
 1156 009c 2268     		ldr	r2, [r4]
 1157 009e 1369     		ldr	r3, [r2, #16]
 1158 00a0 23F02003 		bic	r3, r3, #32
 1159 00a4 1361     		str	r3, [r2, #16]
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1160              		.loc 1 407 0
 1161 00a6 2368     		ldr	r3, [r4]
 1162 00a8 1969     		ldr	r1, [r3, #16]
 1163 00aa 0D43     		orrs	r5, r5, r1
 1164              	.LVL91:
 1165 00ac 1D61     		str	r5, [r3, #16]
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1166              		.loc 1 410 0
 1167 00ae 2268     		ldr	r2, [r4]
 1168 00b0 D368     		ldr	r3, [r2, #12]
 1169 00b2 43F40053 		orr	r3, r3, #8192
 1170 00b6 D360     		str	r3, [r2, #12]
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 1171              		.loc 1 413 0
 1172 00b8 0020     		movs	r0, #0
 1173 00ba E063     		str	r0, [r4, #60]
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 1174              		.loc 1 414 0
 1175 00bc 2023     		movs	r3, #32
 1176 00be 84F83930 		strb	r3, [r4, #57]
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1177              		.loc 1 415 0
 1178 00c2 84F83A30 		strb	r3, [r4, #58]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1179              		.loc 1 417 0
 1180 00c6 38BD     		pop	{r3, r4, r5, pc}
 1181              	.LVL92:
 1182              	.L82:
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 1183              		.loc 1 377 0 discriminator 1
ARM GAS  /tmp/cczJWHrP.s 			page 68


 1184 00c8 40F27911 		movw	r1, #377
 1185 00cc 0948     		ldr	r0, .L85+4
 1186 00ce FFF7FEFF 		bl	assert_failed
 1187              	.LVL93:
 1188 00d2 C2E7     		b	.L74
 1189              	.L83:
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1190              		.loc 1 378 0 discriminator 1
 1191 00d4 4FF4BD71 		mov	r1, #378
 1192 00d8 0648     		ldr	r0, .L85+4
 1193 00da FFF7FEFF 		bl	assert_failed
 1194              	.LVL94:
 1195 00de BFE7     		b	.L75
 1196              	.L84:
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 1197              		.loc 1 383 0
 1198 00e0 84F83830 		strb	r3, [r4, #56]
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1199              		.loc 1 385 0
 1200 00e4 2046     		mov	r0, r4
 1201 00e6 FFF7FEFF 		bl	HAL_UART_MspInit
 1202              	.LVL95:
 1203 00ea BDE7     		b	.L76
 1204              	.LVL96:
 1205              	.L77:
 1206              	.LCFI7:
 1207              		.cfi_def_cfa_offset 0
 1208              		.cfi_restore 3
 1209              		.cfi_restore 4
 1210              		.cfi_restore 5
 1211              		.cfi_restore 14
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1212              		.loc 1 371 0
 1213 00ec 0120     		movs	r0, #1
 1214              	.LVL97:
 1215 00ee 7047     		bx	lr
 1216              	.L86:
 1217              		.align	2
 1218              	.L85:
 1219 00f0 00100140 		.word	1073811456
 1220 00f4 00000000 		.word	.LC0
 1221              		.cfi_endproc
 1222              	.LFE125:
 1224              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 1225              		.align	1
 1226              		.global	HAL_MultiProcessor_Init
 1227              		.syntax unified
 1228              		.thumb
 1229              		.thumb_func
 1230              		.fpu fpv4-sp-d16
 1232              	HAL_MultiProcessor_Init:
 1233              	.LFB126:
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1234              		.loc 1 433 0
 1235              		.cfi_startproc
 1236              		@ args = 0, pretend = 0, frame = 0
 1237              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cczJWHrP.s 			page 69


 1238              	.LVL98:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1239              		.loc 1 435 0
 1240 0000 0028     		cmp	r0, #0
 1241 0002 00F08480 		beq	.L95
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1242              		.loc 1 433 0
 1243 0006 70B5     		push	{r4, r5, r6, lr}
 1244              	.LCFI8:
 1245              		.cfi_def_cfa_offset 16
 1246              		.cfi_offset 4, -16
 1247              		.cfi_offset 5, -12
 1248              		.cfi_offset 6, -8
 1249              		.cfi_offset 14, -4
 1250 0008 0446     		mov	r4, r0
 1251 000a 1546     		mov	r5, r2
 1252 000c 0E46     		mov	r6, r1
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 1253              		.loc 1 441 0
 1254 000e 0368     		ldr	r3, [r0]
 1255 0010 404A     		ldr	r2, .L102
 1256              	.LVL99:
 1257 0012 9342     		cmp	r3, r2
 1258 0014 18D0     		beq	.L89
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 1259              		.loc 1 441 0 is_stmt 0 discriminator 1
 1260 0016 A2F54C42 		sub	r2, r2, #52224
 1261 001a 9342     		cmp	r3, r2
 1262 001c 14D0     		beq	.L89
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 1263              		.loc 1 441 0 discriminator 2
 1264 001e 02F58062 		add	r2, r2, #1024
 1265 0022 9342     		cmp	r3, r2
 1266 0024 10D0     		beq	.L89
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 1267              		.loc 1 441 0 discriminator 3
 1268 0026 02F58062 		add	r2, r2, #1024
 1269 002a 9342     		cmp	r3, r2
 1270 002c 0CD0     		beq	.L89
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 1271              		.loc 1 441 0 discriminator 4
 1272 002e 02F58062 		add	r2, r2, #1024
 1273 0032 9342     		cmp	r3, r2
 1274 0034 08D0     		beq	.L89
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 1275              		.loc 1 441 0 discriminator 5
 1276 0036 02F54442 		add	r2, r2, #50176
 1277 003a 9342     		cmp	r3, r2
 1278 003c 04D0     		beq	.L89
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 1279              		.loc 1 441 0 discriminator 6
 1280 003e 40F2B911 		movw	r1, #441
 1281              	.LVL100:
 1282 0042 3548     		ldr	r0, .L102+4
 1283              	.LVL101:
 1284 0044 FFF7FEFF 		bl	assert_failed
 1285              	.LVL102:
ARM GAS  /tmp/cczJWHrP.s 			page 70


 1286              	.L89:
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 1287              		.loc 1 442 0 is_stmt 1
 1288 0048 3DB1     		cbz	r5, .L90
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 1289              		.loc 1 442 0 is_stmt 0 discriminator 1
 1290 004a B5F5006F 		cmp	r5, #2048
 1291 004e 04D0     		beq	.L90
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 1292              		.loc 1 442 0 discriminator 2
 1293 0050 4FF4DD71 		mov	r1, #442
 1294 0054 3048     		ldr	r0, .L102+4
 1295 0056 FFF7FEFF 		bl	assert_failed
 1296              	.LVL103:
 1297              	.L90:
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 1298              		.loc 1 443 0 is_stmt 1
 1299 005a 0F2E     		cmp	r6, #15
 1300 005c 4BD8     		bhi	.L100
 1301              	.L91:
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 1302              		.loc 1 444 0
 1303 005e A368     		ldr	r3, [r4, #8]
 1304 0060 3BB1     		cbz	r3, .L92
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 1305              		.loc 1 444 0 is_stmt 0 discriminator 1
 1306 0062 B3F5805F 		cmp	r3, #4096
 1307 0066 04D0     		beq	.L92
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 1308              		.loc 1 444 0 discriminator 2
 1309 0068 4FF4DE71 		mov	r1, #444
 1310 006c 2A48     		ldr	r0, .L102+4
 1311 006e FFF7FEFF 		bl	assert_failed
 1312              	.LVL104:
 1313              	.L92:
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1314              		.loc 1 445 0 is_stmt 1
 1315 0072 E369     		ldr	r3, [r4, #28]
 1316 0074 3BB1     		cbz	r3, .L93
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1317              		.loc 1 445 0 is_stmt 0 discriminator 1
 1318 0076 B3F5004F 		cmp	r3, #32768
 1319 007a 04D0     		beq	.L93
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1320              		.loc 1 445 0 discriminator 2
 1321 007c 40F2BD11 		movw	r1, #445
 1322 0080 2548     		ldr	r0, .L102+4
 1323 0082 FFF7FEFF 		bl	assert_failed
 1324              	.LVL105:
 1325              	.L93:
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1326              		.loc 1 447 0 is_stmt 1
 1327 0086 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 1328 008a 002B     		cmp	r3, #0
 1329 008c 39D0     		beq	.L101
 1330              	.L94:
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cczJWHrP.s 			page 71


 1331              		.loc 1 455 0
 1332 008e 2423     		movs	r3, #36
 1333 0090 84F83930 		strb	r3, [r4, #57]
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1334              		.loc 1 458 0
 1335 0094 2268     		ldr	r2, [r4]
 1336 0096 D368     		ldr	r3, [r2, #12]
 1337 0098 23F40053 		bic	r3, r3, #8192
 1338 009c D360     		str	r3, [r2, #12]
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1339              		.loc 1 461 0
 1340 009e 2046     		mov	r0, r4
 1341 00a0 FFF7FEFF 		bl	UART_SetConfig
 1342              	.LVL106:
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 1343              		.loc 1 466 0
 1344 00a4 2268     		ldr	r2, [r4]
 1345 00a6 1369     		ldr	r3, [r2, #16]
 1346 00a8 23F49043 		bic	r3, r3, #18432
 1347 00ac 1361     		str	r3, [r2, #16]
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1348              		.loc 1 467 0
 1349 00ae 2268     		ldr	r2, [r4]
 1350 00b0 5369     		ldr	r3, [r2, #20]
 1351 00b2 23F02A03 		bic	r3, r3, #42
 1352 00b6 5361     		str	r3, [r2, #20]
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 1353              		.loc 1 470 0
 1354 00b8 2268     		ldr	r2, [r4]
 1355 00ba 1369     		ldr	r3, [r2, #16]
 1356 00bc 23F00F03 		bic	r3, r3, #15
 1357 00c0 1361     		str	r3, [r2, #16]
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1358              		.loc 1 472 0
 1359 00c2 2368     		ldr	r3, [r4]
 1360 00c4 1969     		ldr	r1, [r3, #16]
 1361 00c6 0E43     		orrs	r6, r6, r1
 1362 00c8 1E61     		str	r6, [r3, #16]
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 1363              		.loc 1 475 0
 1364 00ca 2268     		ldr	r2, [r4]
 1365 00cc D368     		ldr	r3, [r2, #12]
 1366 00ce 23F40063 		bic	r3, r3, #2048
 1367 00d2 D360     		str	r3, [r2, #12]
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1368              		.loc 1 476 0
 1369 00d4 2368     		ldr	r3, [r4]
 1370 00d6 DA68     		ldr	r2, [r3, #12]
 1371 00d8 1543     		orrs	r5, r5, r2
 1372              	.LVL107:
 1373 00da DD60     		str	r5, [r3, #12]
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1374              		.loc 1 479 0
 1375 00dc 2268     		ldr	r2, [r4]
 1376 00de D368     		ldr	r3, [r2, #12]
 1377 00e0 43F40053 		orr	r3, r3, #8192
 1378 00e4 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/cczJWHrP.s 			page 72


 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState= HAL_UART_STATE_READY;
 1379              		.loc 1 482 0
 1380 00e6 0020     		movs	r0, #0
 1381 00e8 E063     		str	r0, [r4, #60]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState= HAL_UART_STATE_READY;
 1382              		.loc 1 483 0
 1383 00ea 2023     		movs	r3, #32
 1384 00ec 84F83930 		strb	r3, [r4, #57]
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1385              		.loc 1 484 0
 1386 00f0 84F83A30 		strb	r3, [r4, #58]
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1387              		.loc 1 486 0
 1388 00f4 70BD     		pop	{r4, r5, r6, pc}
 1389              	.LVL108:
 1390              	.L100:
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 1391              		.loc 1 443 0 discriminator 1
 1392 00f6 40F2BB11 		movw	r1, #443
 1393 00fa 0748     		ldr	r0, .L102+4
 1394 00fc FFF7FEFF 		bl	assert_failed
 1395              	.LVL109:
 1396 0100 ADE7     		b	.L91
 1397              	.L101:
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 1398              		.loc 1 450 0
 1399 0102 84F83830 		strb	r3, [r4, #56]
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1400              		.loc 1 452 0
 1401 0106 2046     		mov	r0, r4
 1402 0108 FFF7FEFF 		bl	HAL_UART_MspInit
 1403              	.LVL110:
 1404 010c BFE7     		b	.L94
 1405              	.LVL111:
 1406              	.L95:
 1407              	.LCFI9:
 1408              		.cfi_def_cfa_offset 0
 1409              		.cfi_restore 4
 1410              		.cfi_restore 5
 1411              		.cfi_restore 6
 1412              		.cfi_restore 14
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1413              		.loc 1 437 0
 1414 010e 0120     		movs	r0, #1
 1415              	.LVL112:
 1416 0110 7047     		bx	lr
 1417              	.L103:
 1418 0112 00BF     		.align	2
 1419              	.L102:
 1420 0114 00100140 		.word	1073811456
 1421 0118 00000000 		.word	.LC0
 1422              		.cfi_endproc
 1423              	.LFE126:
 1425              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1426              		.align	1
 1427              		.weak	HAL_UART_MspDeInit
 1428              		.syntax unified
ARM GAS  /tmp/cczJWHrP.s 			page 73


 1429              		.thumb
 1430              		.thumb_func
 1431              		.fpu fpv4-sp-d16
 1433              	HAL_UART_MspDeInit:
 1434              	.LFB129:
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1435              		.loc 1 543 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 1439              		@ link register save eliminated.
 1440              	.LVL113:
 1441 0000 7047     		bx	lr
 1442              		.cfi_endproc
 1443              	.LFE129:
 1445              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 1446              		.align	1
 1447              		.global	HAL_UART_DeInit
 1448              		.syntax unified
 1449              		.thumb
 1450              		.thumb_func
 1451              		.fpu fpv4-sp-d16
 1453              	HAL_UART_DeInit:
 1454              	.LFB127:
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1455              		.loc 1 496 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459              	.LVL114:
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1460              		.loc 1 498 0
 1461 0000 68B3     		cbz	r0, .L108
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 1462              		.loc 1 496 0
 1463 0002 10B5     		push	{r4, lr}
 1464              	.LCFI10:
 1465              		.cfi_def_cfa_offset 8
 1466              		.cfi_offset 4, -8
 1467              		.cfi_offset 14, -4
 1468 0004 0446     		mov	r4, r0
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1469              		.loc 1 504 0
 1470 0006 0368     		ldr	r3, [r0]
 1471 0008 164A     		ldr	r2, .L113
 1472 000a 9342     		cmp	r3, r2
 1473 000c 18D0     		beq	.L107
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1474              		.loc 1 504 0 is_stmt 0 discriminator 1
 1475 000e A2F54C42 		sub	r2, r2, #52224
 1476 0012 9342     		cmp	r3, r2
 1477 0014 14D0     		beq	.L107
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1478              		.loc 1 504 0 discriminator 2
 1479 0016 02F58062 		add	r2, r2, #1024
 1480 001a 9342     		cmp	r3, r2
 1481 001c 10D0     		beq	.L107
ARM GAS  /tmp/cczJWHrP.s 			page 74


 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1482              		.loc 1 504 0 discriminator 3
 1483 001e 02F58062 		add	r2, r2, #1024
 1484 0022 9342     		cmp	r3, r2
 1485 0024 0CD0     		beq	.L107
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1486              		.loc 1 504 0 discriminator 4
 1487 0026 02F58062 		add	r2, r2, #1024
 1488 002a 9342     		cmp	r3, r2
 1489 002c 08D0     		beq	.L107
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1490              		.loc 1 504 0 discriminator 5
 1491 002e 02F54442 		add	r2, r2, #50176
 1492 0032 9342     		cmp	r3, r2
 1493 0034 04D0     		beq	.L107
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1494              		.loc 1 504 0 discriminator 6
 1495 0036 4FF4FC71 		mov	r1, #504
 1496 003a 0B48     		ldr	r0, .L113+4
 1497              	.LVL115:
 1498 003c FFF7FEFF 		bl	assert_failed
 1499              	.LVL116:
 1500              	.L107:
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1501              		.loc 1 506 0 is_stmt 1
 1502 0040 2423     		movs	r3, #36
 1503 0042 84F83930 		strb	r3, [r4, #57]
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 1504              		.loc 1 509 0
 1505 0046 2046     		mov	r0, r4
 1506 0048 FFF7FEFF 		bl	HAL_UART_MspDeInit
 1507              	.LVL117:
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 1508              		.loc 1 511 0
 1509 004c 0020     		movs	r0, #0
 1510 004e E063     		str	r0, [r4, #60]
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 1511              		.loc 1 512 0
 1512 0050 84F83900 		strb	r0, [r4, #57]
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1513              		.loc 1 513 0
 1514 0054 84F83A00 		strb	r0, [r4, #58]
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1515              		.loc 1 516 0
 1516 0058 84F83800 		strb	r0, [r4, #56]
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1517              		.loc 1 518 0
 1518 005c 10BD     		pop	{r4, pc}
 1519              	.LVL118:
 1520              	.L108:
 1521              	.LCFI11:
 1522              		.cfi_def_cfa_offset 0
 1523              		.cfi_restore 4
 1524              		.cfi_restore 14
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1525              		.loc 1 500 0
 1526 005e 0120     		movs	r0, #1
ARM GAS  /tmp/cczJWHrP.s 			page 75


 1527              	.LVL119:
 1528 0060 7047     		bx	lr
 1529              	.L114:
 1530 0062 00BF     		.align	2
 1531              	.L113:
 1532 0064 00100140 		.word	1073811456
 1533 0068 00000000 		.word	.LC0
 1534              		.cfi_endproc
 1535              	.LFE127:
 1537              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 1538              		.align	1
 1539              		.global	HAL_UART_Transmit
 1540              		.syntax unified
 1541              		.thumb
 1542              		.thumb_func
 1543              		.fpu fpv4-sp-d16
 1545              	HAL_UART_Transmit:
 1546              	.LFB130:
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 1547              		.loc 1 617 0
 1548              		.cfi_startproc
 1549              		@ args = 0, pretend = 0, frame = 0
 1550              		@ frame_needed = 0, uses_anonymous_args = 0
 1551              	.LVL120:
 1552 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1553              	.LCFI12:
 1554              		.cfi_def_cfa_offset 24
 1555              		.cfi_offset 4, -24
 1556              		.cfi_offset 5, -20
 1557              		.cfi_offset 6, -16
 1558              		.cfi_offset 7, -12
 1559              		.cfi_offset 8, -8
 1560              		.cfi_offset 14, -4
 1561 0004 82B0     		sub	sp, sp, #8
 1562              	.LCFI13:
 1563              		.cfi_def_cfa_offset 32
 1564 0006 1E46     		mov	r6, r3
 1565              	.LVL121:
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1566              		.loc 1 622 0
 1567 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1568              	.LVL122:
 1569 000c DBB2     		uxtb	r3, r3
 1570 000e 202B     		cmp	r3, #32
 1571 0010 04D0     		beq	.L130
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1572              		.loc 1 685 0
 1573 0012 0223     		movs	r3, #2
 1574              	.LVL123:
 1575              	.L116:
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1576              		.loc 1 687 0
 1577 0014 1846     		mov	r0, r3
 1578 0016 02B0     		add	sp, sp, #8
 1579              	.LCFI14:
 1580              		.cfi_remember_state
 1581              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/cczJWHrP.s 			page 76


 1582              		@ sp needed
 1583 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1584              	.LVL124:
 1585              	.L130:
 1586              	.LCFI15:
 1587              		.cfi_restore_state
 1588 001c 0446     		mov	r4, r0
 1589 001e 0D46     		mov	r5, r1
 1590 0020 9046     		mov	r8, r2
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1591              		.loc 1 624 0
 1592 0022 0029     		cmp	r1, #0
 1593 0024 55D0     		beq	.L123
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1594              		.loc 1 624 0 is_stmt 0 discriminator 1
 1595 0026 002A     		cmp	r2, #0
 1596 0028 55D0     		beq	.L124
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1597              		.loc 1 630 0 is_stmt 1
 1598 002a 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1599 002e 012B     		cmp	r3, #1
 1600 0030 01D1     		bne	.L131
 1601 0032 0223     		movs	r3, #2
 1602 0034 EEE7     		b	.L116
 1603              	.L131:
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1604              		.loc 1 630 0 is_stmt 0 discriminator 2
 1605 0036 0123     		movs	r3, #1
 1606 0038 80F83830 		strb	r3, [r0, #56]
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1607              		.loc 1 632 0 is_stmt 1 discriminator 2
 1608 003c 0023     		movs	r3, #0
 1609 003e C363     		str	r3, [r0, #60]
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 1610              		.loc 1 633 0 discriminator 2
 1611 0040 2123     		movs	r3, #33
 1612 0042 80F83930 		strb	r3, [r0, #57]
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1613              		.loc 1 636 0 discriminator 2
 1614 0046 FFF7FEFF 		bl	HAL_GetTick
 1615              	.LVL125:
 1616 004a 0746     		mov	r7, r0
 1617              	.LVL126:
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1618              		.loc 1 638 0 discriminator 2
 1619 004c A4F82480 		strh	r8, [r4, #36]	@ movhi
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while(huart->TxXferCount > 0U)
 1620              		.loc 1 639 0 discriminator 2
 1621 0050 A4F82680 		strh	r8, [r4, #38]	@ movhi
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1622              		.loc 1 640 0 discriminator 2
 1623 0054 10E0     		b	.L117
 1624              	.LVL127:
 1625              	.L133:
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1626              		.loc 1 645 0
 1627 0056 0096     		str	r6, [sp]
ARM GAS  /tmp/cczJWHrP.s 			page 77


 1628 0058 3B46     		mov	r3, r7
 1629 005a 0022     		movs	r2, #0
 1630 005c 8021     		movs	r1, #128
 1631 005e 2046     		mov	r0, r4
 1632 0060 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1633              	.LVL128:
 1634 0064 0028     		cmp	r0, #0
 1635 0066 38D1     		bne	.L126
 1636              	.LVL129:
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if(huart->Init.Parity == UART_PARITY_NONE)
 1637              		.loc 1 650 0
 1638 0068 2268     		ldr	r2, [r4]
 1639 006a 2B88     		ldrh	r3, [r5]
 1640 006c C3F30803 		ubfx	r3, r3, #0, #9
 1641 0070 5360     		str	r3, [r2, #4]
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1642              		.loc 1 651 0
 1643 0072 2369     		ldr	r3, [r4, #16]
 1644 0074 CBB9     		cbnz	r3, .L119
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1645              		.loc 1 653 0
 1646 0076 0235     		adds	r5, r5, #2
 1647              	.LVL130:
 1648              	.L117:
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1649              		.loc 1 640 0
 1650 0078 E38C     		ldrh	r3, [r4, #38]
 1651 007a 9BB2     		uxth	r3, r3
 1652 007c BBB1     		cbz	r3, .L132
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1653              		.loc 1 642 0
 1654 007e E38C     		ldrh	r3, [r4, #38]
 1655 0080 9BB2     		uxth	r3, r3
 1656 0082 013B     		subs	r3, r3, #1
 1657 0084 9BB2     		uxth	r3, r3
 1658 0086 E384     		strh	r3, [r4, #38]	@ movhi
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1659              		.loc 1 643 0
 1660 0088 A368     		ldr	r3, [r4, #8]
 1661 008a B3F5805F 		cmp	r3, #4096
 1662 008e E2D0     		beq	.L133
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1663              		.loc 1 662 0
 1664 0090 0096     		str	r6, [sp]
 1665 0092 3B46     		mov	r3, r7
 1666 0094 0022     		movs	r2, #0
 1667 0096 8021     		movs	r1, #128
 1668 0098 2046     		mov	r0, r4
 1669 009a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1670              	.LVL131:
 1671 009e F0B9     		cbnz	r0, .L127
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       } 
 1672              		.loc 1 666 0
 1673 00a0 2368     		ldr	r3, [r4]
 1674              	.LVL132:
 1675 00a2 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1676 00a4 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/cczJWHrP.s 			page 78


 1677 00a6 0135     		adds	r5, r5, #1
 1678              	.LVL133:
 1679 00a8 E6E7     		b	.L117
 1680              	.LVL134:
 1681              	.L119:
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1682              		.loc 1 657 0
 1683 00aa 0135     		adds	r5, r5, #1
 1684              	.LVL135:
 1685 00ac E4E7     		b	.L117
 1686              	.LVL136:
 1687              	.L132:
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 1688              		.loc 1 670 0
 1689 00ae 0096     		str	r6, [sp]
 1690 00b0 3B46     		mov	r3, r7
 1691 00b2 0022     		movs	r2, #0
 1692 00b4 4021     		movs	r1, #64
 1693 00b6 2046     		mov	r0, r4
 1694 00b8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1695              	.LVL137:
 1696 00bc 0346     		mov	r3, r0
 1697 00be 08B1     		cbz	r0, .L134
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1698              		.loc 1 672 0
 1699 00c0 0323     		movs	r3, #3
 1700 00c2 A7E7     		b	.L116
 1701              	.L134:
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1702              		.loc 1 676 0
 1703 00c4 2022     		movs	r2, #32
 1704 00c6 84F83920 		strb	r2, [r4, #57]
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1705              		.loc 1 679 0
 1706 00ca 0022     		movs	r2, #0
 1707 00cc 84F83820 		strb	r2, [r4, #56]
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1708              		.loc 1 681 0
 1709 00d0 A0E7     		b	.L116
 1710              	.LVL138:
 1711              	.L123:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1712              		.loc 1 626 0
 1713 00d2 0123     		movs	r3, #1
 1714 00d4 9EE7     		b	.L116
 1715              	.L124:
 1716 00d6 0123     		movs	r3, #1
 1717 00d8 9CE7     		b	.L116
 1718              	.LVL139:
 1719              	.L126:
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1720              		.loc 1 647 0
 1721 00da 0323     		movs	r3, #3
 1722 00dc 9AE7     		b	.L116
 1723              	.L127:
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1724              		.loc 1 664 0
ARM GAS  /tmp/cczJWHrP.s 			page 79


 1725 00de 0323     		movs	r3, #3
 1726 00e0 98E7     		b	.L116
 1727              		.cfi_endproc
 1728              	.LFE130:
 1730              		.section	.text.HAL_UART_Receive,"ax",%progbits
 1731              		.align	1
 1732              		.global	HAL_UART_Receive
 1733              		.syntax unified
 1734              		.thumb
 1735              		.thumb_func
 1736              		.fpu fpv4-sp-d16
 1738              	HAL_UART_Receive:
 1739              	.LFB131:
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 1740              		.loc 1 699 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744              	.LVL140:
 1745 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1746              	.LCFI16:
 1747              		.cfi_def_cfa_offset 24
 1748              		.cfi_offset 4, -24
 1749              		.cfi_offset 5, -20
 1750              		.cfi_offset 6, -16
 1751              		.cfi_offset 7, -12
 1752              		.cfi_offset 8, -8
 1753              		.cfi_offset 14, -4
 1754 0004 82B0     		sub	sp, sp, #8
 1755              	.LCFI17:
 1756              		.cfi_def_cfa_offset 32
 1757 0006 1E46     		mov	r6, r3
 1758              	.LVL141:
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   { 
 1759              		.loc 1 704 0
 1760 0008 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 1761              	.LVL142:
 1762 000c DBB2     		uxtb	r3, r3
 1763 000e 202B     		cmp	r3, #32
 1764 0010 03D0     		beq	.L150
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1765              		.loc 1 774 0
 1766 0012 0220     		movs	r0, #2
 1767              	.LVL143:
 1768              	.L136:
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1769              		.loc 1 776 0
 1770 0014 02B0     		add	sp, sp, #8
 1771              	.LCFI18:
 1772              		.cfi_remember_state
 1773              		.cfi_def_cfa_offset 24
 1774              		@ sp needed
 1775 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1776              	.LVL144:
 1777              	.L150:
 1778              	.LCFI19:
 1779              		.cfi_restore_state
ARM GAS  /tmp/cczJWHrP.s 			page 80


 1780 001a 0446     		mov	r4, r0
 1781 001c 0D46     		mov	r5, r1
 1782 001e 9046     		mov	r8, r2
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1783              		.loc 1 706 0
 1784 0020 0029     		cmp	r1, #0
 1785 0022 58D0     		beq	.L144
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1786              		.loc 1 706 0 is_stmt 0 discriminator 1
 1787 0024 002A     		cmp	r2, #0
 1788 0026 58D0     		beq	.L145
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1789              		.loc 1 712 0 is_stmt 1
 1790 0028 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1791 002c 012B     		cmp	r3, #1
 1792 002e 01D1     		bne	.L151
 1793 0030 0220     		movs	r0, #2
 1794              	.LVL145:
 1795 0032 EFE7     		b	.L136
 1796              	.LVL146:
 1797              	.L151:
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1798              		.loc 1 712 0 is_stmt 0 discriminator 2
 1799 0034 0123     		movs	r3, #1
 1800 0036 80F83830 		strb	r3, [r0, #56]
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1801              		.loc 1 714 0 is_stmt 1 discriminator 2
 1802 003a 0023     		movs	r3, #0
 1803 003c C363     		str	r3, [r0, #60]
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 1804              		.loc 1 715 0 discriminator 2
 1805 003e 2223     		movs	r3, #34
 1806 0040 80F83A30 		strb	r3, [r0, #58]
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 1807              		.loc 1 718 0 discriminator 2
 1808 0044 FFF7FEFF 		bl	HAL_GetTick
 1809              	.LVL147:
 1810 0048 0746     		mov	r7, r0
 1811              	.LVL148:
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1812              		.loc 1 720 0 discriminator 2
 1813 004a A4F82C80 		strh	r8, [r4, #44]	@ movhi
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1814              		.loc 1 721 0 discriminator 2
 1815 004e A4F82E80 		strh	r8, [r4, #46]	@ movhi
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1816              		.loc 1 724 0 discriminator 2
 1817 0052 1DE0     		b	.L137
 1818              	.LVL149:
 1819              	.L153:
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1820              		.loc 1 729 0
 1821 0054 0096     		str	r6, [sp]
 1822 0056 3B46     		mov	r3, r7
 1823 0058 0022     		movs	r2, #0
 1824 005a 2021     		movs	r1, #32
 1825 005c 2046     		mov	r0, r4
ARM GAS  /tmp/cczJWHrP.s 			page 81


 1826 005e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1827              	.LVL150:
 1828 0062 0028     		cmp	r0, #0
 1829 0064 3BD1     		bne	.L147
 1830              	.LVL151:
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1831              		.loc 1 734 0
 1832 0066 2369     		ldr	r3, [r4, #16]
 1833 0068 33B9     		cbnz	r3, .L139
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=2U;
 1834              		.loc 1 736 0
 1835 006a 2368     		ldr	r3, [r4]
 1836 006c 5B68     		ldr	r3, [r3, #4]
 1837 006e C3F30803 		ubfx	r3, r3, #0, #9
 1838 0072 25F8023B 		strh	r3, [r5], #2	@ movhi
 1839              	.LVL152:
 1840 0076 0BE0     		b	.L137
 1841              	.LVL153:
 1842              	.L139:
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pData +=1U;
 1843              		.loc 1 741 0
 1844 0078 2368     		ldr	r3, [r4]
 1845 007a 5B68     		ldr	r3, [r3, #4]
 1846 007c DBB2     		uxtb	r3, r3
 1847 007e 25F8013B 		strh	r3, [r5], #1	@ movhi
 1848              	.LVL154:
 1849 0082 05E0     		b	.L137
 1850              	.LVL155:
 1851              	.L141:
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1852              		.loc 1 758 0
 1853 0084 2368     		ldr	r3, [r4]
 1854 0086 5B68     		ldr	r3, [r3, #4]
 1855 0088 03F07F03 		and	r3, r3, #127
 1856 008c 2B70     		strb	r3, [r5]
 1857 008e 0135     		adds	r5, r5, #1
 1858              	.LVL156:
 1859              	.L137:
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1860              		.loc 1 724 0
 1861 0090 E38D     		ldrh	r3, [r4, #46]
 1862 0092 9BB2     		uxth	r3, r3
 1863 0094 C3B1     		cbz	r3, .L152
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.WordLength == UART_WORDLENGTH_9B)
 1864              		.loc 1 726 0
 1865 0096 E38D     		ldrh	r3, [r4, #46]
 1866 0098 9BB2     		uxth	r3, r3
 1867 009a 013B     		subs	r3, r3, #1
 1868 009c 9BB2     		uxth	r3, r3
 1869 009e E385     		strh	r3, [r4, #46]	@ movhi
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 1870              		.loc 1 727 0
 1871 00a0 A368     		ldr	r3, [r4, #8]
 1872 00a2 B3F5805F 		cmp	r3, #4096
 1873 00a6 D5D0     		beq	.L153
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         { 
 1874              		.loc 1 748 0
ARM GAS  /tmp/cczJWHrP.s 			page 82


 1875 00a8 0096     		str	r6, [sp]
 1876 00aa 3B46     		mov	r3, r7
 1877 00ac 0022     		movs	r2, #0
 1878 00ae 2021     		movs	r1, #32
 1879 00b0 2046     		mov	r0, r4
 1880 00b2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1881              	.LVL157:
 1882 00b6 A0B9     		cbnz	r0, .L148
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 1883              		.loc 1 752 0
 1884 00b8 2369     		ldr	r3, [r4, #16]
 1885 00ba 002B     		cmp	r3, #0
 1886 00bc E2D1     		bne	.L141
 1887              	.LVL158:
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1888              		.loc 1 754 0
 1889 00be 2368     		ldr	r3, [r4]
 1890 00c0 5B68     		ldr	r3, [r3, #4]
 1891 00c2 2B70     		strb	r3, [r5]
 1892 00c4 0135     		adds	r5, r5, #1
 1893              	.LVL159:
 1894 00c6 E3E7     		b	.L137
 1895              	.L152:
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1896              		.loc 1 765 0
 1897 00c8 2023     		movs	r3, #32
 1898 00ca 84F83A30 		strb	r3, [r4, #58]
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1899              		.loc 1 768 0
 1900 00ce 0020     		movs	r0, #0
 1901 00d0 84F83800 		strb	r0, [r4, #56]
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1902              		.loc 1 770 0
 1903 00d4 9EE7     		b	.L136
 1904              	.LVL160:
 1905              	.L144:
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1906              		.loc 1 708 0
 1907 00d6 0120     		movs	r0, #1
 1908              	.LVL161:
 1909 00d8 9CE7     		b	.L136
 1910              	.LVL162:
 1911              	.L145:
 1912 00da 0120     		movs	r0, #1
 1913              	.LVL163:
 1914 00dc 9AE7     		b	.L136
 1915              	.LVL164:
 1916              	.L147:
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1917              		.loc 1 731 0
 1918 00de 0320     		movs	r0, #3
 1919 00e0 98E7     		b	.L136
 1920              	.L148:
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 1921              		.loc 1 750 0
 1922 00e2 0320     		movs	r0, #3
 1923 00e4 96E7     		b	.L136
ARM GAS  /tmp/cczJWHrP.s 			page 83


 1924              		.cfi_endproc
 1925              	.LFE131:
 1927              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1928              		.align	1
 1929              		.global	HAL_UART_Transmit_IT
 1930              		.syntax unified
 1931              		.thumb
 1932              		.thumb_func
 1933              		.fpu fpv4-sp-d16
 1935              	HAL_UART_Transmit_IT:
 1936              	.LFB132:
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 1937              		.loc 1 787 0
 1938              		.cfi_startproc
 1939              		@ args = 0, pretend = 0, frame = 0
 1940              		@ frame_needed = 0, uses_anonymous_args = 0
 1941              		@ link register save eliminated.
 1942              	.LVL165:
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 1943              		.loc 1 789 0
 1944 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 1945 0004 DBB2     		uxtb	r3, r3
 1946 0006 202B     		cmp	r3, #32
 1947 0008 01D0     		beq	.L160
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1948              		.loc 1 816 0
 1949 000a 0220     		movs	r0, #2
 1950              	.LVL166:
 1951 000c 7047     		bx	lr
 1952              	.LVL167:
 1953              	.L160:
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1954              		.loc 1 791 0
 1955 000e A9B1     		cbz	r1, .L157
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1956              		.loc 1 791 0 is_stmt 0 discriminator 1
 1957 0010 B2B1     		cbz	r2, .L158
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1958              		.loc 1 797 0 is_stmt 1
 1959 0012 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 1960 0016 012B     		cmp	r3, #1
 1961 0018 14D0     		beq	.L159
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1962              		.loc 1 799 0 discriminator 2
 1963 001a 0162     		str	r1, [r0, #32]
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1964              		.loc 1 800 0 discriminator 2
 1965 001c 8284     		strh	r2, [r0, #36]	@ movhi
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1966              		.loc 1 801 0 discriminator 2
 1967 001e C284     		strh	r2, [r0, #38]	@ movhi
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1968              		.loc 1 803 0 discriminator 2
 1969 0020 0023     		movs	r3, #0
 1970 0022 C363     		str	r3, [r0, #60]
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1971              		.loc 1 804 0 discriminator 2
ARM GAS  /tmp/cczJWHrP.s 			page 84


 1972 0024 2122     		movs	r2, #33
 1973              	.LVL168:
 1974 0026 80F83920 		strb	r2, [r0, #57]
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 1975              		.loc 1 807 0 discriminator 2
 1976 002a 80F83830 		strb	r3, [r0, #56]
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 1977              		.loc 1 810 0 discriminator 2
 1978 002e 0168     		ldr	r1, [r0]
 1979              	.LVL169:
 1980 0030 CA68     		ldr	r2, [r1, #12]
 1981 0032 42F08002 		orr	r2, r2, #128
 1982 0036 CA60     		str	r2, [r1, #12]
 1983              	.LVL170:
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 1984              		.loc 1 812 0 discriminator 2
 1985 0038 1846     		mov	r0, r3
 1986              	.LVL171:
 1987 003a 7047     		bx	lr
 1988              	.LVL172:
 1989              	.L157:
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 1990              		.loc 1 793 0
 1991 003c 0120     		movs	r0, #1
 1992              	.LVL173:
 1993 003e 7047     		bx	lr
 1994              	.LVL174:
 1995              	.L158:
 1996 0040 0120     		movs	r0, #1
 1997              	.LVL175:
 1998 0042 7047     		bx	lr
 1999              	.LVL176:
 2000              	.L159:
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2001              		.loc 1 797 0
 2002 0044 0220     		movs	r0, #2
 2003              	.LVL177:
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2004              		.loc 1 818 0
 2005 0046 7047     		bx	lr
 2006              		.cfi_endproc
 2007              	.LFE132:
 2009              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 2010              		.align	1
 2011              		.global	HAL_UART_Receive_IT
 2012              		.syntax unified
 2013              		.thumb
 2014              		.thumb_func
 2015              		.fpu fpv4-sp-d16
 2017              	HAL_UART_Receive_IT:
 2018              	.LFB133:
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */ 
 2019              		.loc 1 829 0
 2020              		.cfi_startproc
 2021              		@ args = 0, pretend = 0, frame = 0
 2022              		@ frame_needed = 0, uses_anonymous_args = 0
 2023              		@ link register save eliminated.
ARM GAS  /tmp/cczJWHrP.s 			page 85


 2024              	.LVL178:
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2025              		.loc 1 831 0
 2026 0000 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2027 0004 DBB2     		uxtb	r3, r3
 2028 0006 202B     		cmp	r3, #32
 2029 0008 01D0     		beq	.L167
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2030              		.loc 1 861 0
 2031 000a 0220     		movs	r0, #2
 2032              	.LVL179:
 2033 000c 7047     		bx	lr
 2034              	.LVL180:
 2035              	.L167:
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2036              		.loc 1 833 0
 2037 000e D1B1     		cbz	r1, .L164
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2038              		.loc 1 833 0 is_stmt 0 discriminator 1
 2039 0010 DAB1     		cbz	r2, .L165
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2040              		.loc 1 839 0 is_stmt 1
 2041 0012 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2042 0016 012B     		cmp	r3, #1
 2043 0018 19D0     		beq	.L166
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 2044              		.loc 1 841 0 discriminator 2
 2045 001a 8162     		str	r1, [r0, #40]
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 2046              		.loc 1 842 0 discriminator 2
 2047 001c 8285     		strh	r2, [r0, #44]	@ movhi
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2048              		.loc 1 843 0 discriminator 2
 2049 001e C285     		strh	r2, [r0, #46]	@ movhi
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2050              		.loc 1 845 0 discriminator 2
 2051 0020 0023     		movs	r3, #0
 2052 0022 C363     		str	r3, [r0, #60]
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2053              		.loc 1 846 0 discriminator 2
 2054 0024 2222     		movs	r2, #34
 2055              	.LVL181:
 2056 0026 80F83A20 		strb	r2, [r0, #58]
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 2057              		.loc 1 849 0 discriminator 2
 2058 002a 80F83830 		strb	r3, [r0, #56]
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2059              		.loc 1 852 0 discriminator 2
 2060 002e 0168     		ldr	r1, [r0]
 2061              	.LVL182:
 2062 0030 4A69     		ldr	r2, [r1, #20]
 2063 0032 42F00102 		orr	r2, r2, #1
 2064 0036 4A61     		str	r2, [r1, #20]
 2065              	.LVL183:
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2066              		.loc 1 855 0 discriminator 2
 2067 0038 0168     		ldr	r1, [r0]
ARM GAS  /tmp/cczJWHrP.s 			page 86


 2068 003a CA68     		ldr	r2, [r1, #12]
 2069 003c 42F49072 		orr	r2, r2, #288
 2070 0040 CA60     		str	r2, [r1, #12]
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2071              		.loc 1 857 0 discriminator 2
 2072 0042 1846     		mov	r0, r3
 2073              	.LVL184:
 2074 0044 7047     		bx	lr
 2075              	.LVL185:
 2076              	.L164:
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2077              		.loc 1 835 0
 2078 0046 0120     		movs	r0, #1
 2079              	.LVL186:
 2080 0048 7047     		bx	lr
 2081              	.LVL187:
 2082              	.L165:
 2083 004a 0120     		movs	r0, #1
 2084              	.LVL188:
 2085 004c 7047     		bx	lr
 2086              	.LVL189:
 2087              	.L166:
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2088              		.loc 1 839 0
 2089 004e 0220     		movs	r0, #2
 2090              	.LVL190:
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2091              		.loc 1 863 0
 2092 0050 7047     		bx	lr
 2093              		.cfi_endproc
 2094              	.LFE133:
 2096              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 2097              		.align	1
 2098              		.global	HAL_UART_Transmit_DMA
 2099              		.syntax unified
 2100              		.thumb
 2101              		.thumb_func
 2102              		.fpu fpv4-sp-d16
 2104              	HAL_UART_Transmit_DMA:
 2105              	.LFB134:
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 2106              		.loc 1 874 0
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 0
 2109              		@ frame_needed = 0, uses_anonymous_args = 0
 2110              	.LVL191:
 2111 0000 38B5     		push	{r3, r4, r5, lr}
 2112              	.LCFI20:
 2113              		.cfi_def_cfa_offset 16
 2114              		.cfi_offset 3, -16
 2115              		.cfi_offset 4, -12
 2116              		.cfi_offset 5, -8
 2117              		.cfi_offset 14, -4
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2118              		.loc 1 878 0
 2119 0002 90F83940 		ldrb	r4, [r0, #57]	@ zero_extendqisi2
 2120 0006 E4B2     		uxtb	r4, r4
ARM GAS  /tmp/cczJWHrP.s 			page 87


 2121 0008 202C     		cmp	r4, #32
 2122 000a 01D0     		beq	.L175
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2123              		.loc 1 925 0
 2124 000c 0220     		movs	r0, #2
 2125              	.LVL192:
 2126 000e 38BD     		pop	{r3, r4, r5, pc}
 2127              	.LVL193:
 2128              	.L175:
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2129              		.loc 1 880 0
 2130 0010 0029     		cmp	r1, #0
 2131 0012 31D0     		beq	.L171
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2132              		.loc 1 880 0 is_stmt 0 discriminator 1
 2133 0014 002A     		cmp	r2, #0
 2134 0016 31D0     		beq	.L172
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2135              		.loc 1 886 0 is_stmt 1
 2136 0018 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2137 001c 012B     		cmp	r3, #1
 2138 001e 01D1     		bne	.L176
 2139 0020 0220     		movs	r0, #2
 2140              	.LVL194:
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2141              		.loc 1 927 0
 2142 0022 38BD     		pop	{r3, r4, r5, pc}
 2143              	.LVL195:
 2144              	.L176:
 2145 0024 1346     		mov	r3, r2
 2146 0026 0446     		mov	r4, r0
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2147              		.loc 1 886 0 discriminator 2
 2148 0028 0122     		movs	r2, #1
 2149              	.LVL196:
 2150 002a 80F83820 		strb	r2, [r0, #56]
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 2151              		.loc 1 888 0 discriminator 2
 2152 002e 0162     		str	r1, [r0, #32]
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 2153              		.loc 1 889 0 discriminator 2
 2154 0030 8384     		strh	r3, [r0, #36]	@ movhi
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2155              		.loc 1 890 0 discriminator 2
 2156 0032 C384     		strh	r3, [r0, #38]	@ movhi
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 2157              		.loc 1 892 0 discriminator 2
 2158 0034 0025     		movs	r5, #0
 2159 0036 C563     		str	r5, [r0, #60]
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2160              		.loc 1 893 0 discriminator 2
 2161 0038 2122     		movs	r2, #33
 2162 003a 80F83920 		strb	r2, [r0, #57]
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2163              		.loc 1 896 0 discriminator 2
 2164 003e 026B     		ldr	r2, [r0, #48]
 2165 0040 0F48     		ldr	r0, .L177
ARM GAS  /tmp/cczJWHrP.s 			page 88


 2166              	.LVL197:
 2167 0042 D063     		str	r0, [r2, #60]
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2168              		.loc 1 899 0 discriminator 2
 2169 0044 226B     		ldr	r2, [r4, #48]
 2170 0046 0F48     		ldr	r0, .L177+4
 2171 0048 1064     		str	r0, [r2, #64]
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2172              		.loc 1 902 0 discriminator 2
 2173 004a 226B     		ldr	r2, [r4, #48]
 2174 004c 0E48     		ldr	r0, .L177+8
 2175 004e D064     		str	r0, [r2, #76]
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2176              		.loc 1 905 0 discriminator 2
 2177 0050 226B     		ldr	r2, [r4, #48]
 2178 0052 1565     		str	r5, [r2, #80]
 2179              	.LVL198:
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2180              		.loc 1 909 0 discriminator 2
 2181 0054 2268     		ldr	r2, [r4]
 2182 0056 0432     		adds	r2, r2, #4
 2183 0058 206B     		ldr	r0, [r4, #48]
 2184 005a FFF7FEFF 		bl	HAL_DMA_Start_IT
 2185              	.LVL199:
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2186              		.loc 1 912 0 discriminator 2
 2187 005e 2368     		ldr	r3, [r4]
 2188 0060 6FF04002 		mvn	r2, #64
 2189 0064 1A60     		str	r2, [r3]
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2190              		.loc 1 915 0 discriminator 2
 2191 0066 84F83850 		strb	r5, [r4, #56]
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2192              		.loc 1 919 0 discriminator 2
 2193 006a 2268     		ldr	r2, [r4]
 2194 006c 5369     		ldr	r3, [r2, #20]
 2195 006e 43F08003 		orr	r3, r3, #128
 2196 0072 5361     		str	r3, [r2, #20]
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2197              		.loc 1 921 0 discriminator 2
 2198 0074 2846     		mov	r0, r5
 2199 0076 38BD     		pop	{r3, r4, r5, pc}
 2200              	.LVL200:
 2201              	.L171:
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2202              		.loc 1 882 0
 2203 0078 0120     		movs	r0, #1
 2204              	.LVL201:
 2205 007a 38BD     		pop	{r3, r4, r5, pc}
 2206              	.LVL202:
 2207              	.L172:
 2208 007c 0120     		movs	r0, #1
 2209              	.LVL203:
 2210 007e 38BD     		pop	{r3, r4, r5, pc}
 2211              	.L178:
 2212              		.align	2
 2213              	.L177:
ARM GAS  /tmp/cczJWHrP.s 			page 89


 2214 0080 00000000 		.word	UART_DMATransmitCplt
 2215 0084 00000000 		.word	UART_DMATxHalfCplt
 2216 0088 00000000 		.word	UART_DMAError
 2217              		.cfi_endproc
 2218              	.LFE134:
 2220              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 2221              		.align	1
 2222              		.global	HAL_UART_Receive_DMA
 2223              		.syntax unified
 2224              		.thumb
 2225              		.thumb_func
 2226              		.fpu fpv4-sp-d16
 2228              	HAL_UART_Receive_DMA:
 2229              	.LFB135:
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
 2230              		.loc 1 939 0
 2231              		.cfi_startproc
 2232              		@ args = 0, pretend = 0, frame = 8
 2233              		@ frame_needed = 0, uses_anonymous_args = 0
 2234              	.LVL204:
 2235 0000 30B5     		push	{r4, r5, lr}
 2236              	.LCFI21:
 2237              		.cfi_def_cfa_offset 12
 2238              		.cfi_offset 4, -12
 2239              		.cfi_offset 5, -8
 2240              		.cfi_offset 14, -4
 2241 0002 83B0     		sub	sp, sp, #12
 2242              	.LCFI22:
 2243              		.cfi_def_cfa_offset 24
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2244              		.loc 1 943 0
 2245 0004 90F83A40 		ldrb	r4, [r0, #58]	@ zero_extendqisi2
 2246 0008 E4B2     		uxtb	r4, r4
 2247 000a 202C     		cmp	r4, #32
 2248 000c 02D0     		beq	.L186
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2249              		.loc 1 995 0
 2250 000e 0220     		movs	r0, #2
 2251              	.LVL205:
 2252              	.L180:
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2253              		.loc 1 997 0
 2254 0010 03B0     		add	sp, sp, #12
 2255              	.LCFI23:
 2256              		.cfi_remember_state
 2257              		.cfi_def_cfa_offset 12
 2258              		@ sp needed
 2259 0012 30BD     		pop	{r4, r5, pc}
 2260              	.LVL206:
 2261              	.L186:
 2262              	.LCFI24:
 2263              		.cfi_restore_state
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2264              		.loc 1 945 0
 2265 0014 0029     		cmp	r1, #0
 2266 0016 3DD0     		beq	.L182
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  /tmp/cczJWHrP.s 			page 90


 2267              		.loc 1 945 0 is_stmt 0 discriminator 1
 2268 0018 002A     		cmp	r2, #0
 2269 001a 3DD0     		beq	.L183
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2270              		.loc 1 951 0 is_stmt 1
 2271 001c 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2272 0020 012B     		cmp	r3, #1
 2273 0022 01D1     		bne	.L187
 2274 0024 0220     		movs	r0, #2
 2275              	.LVL207:
 2276 0026 F3E7     		b	.L180
 2277              	.LVL208:
 2278              	.L187:
 2279 0028 1346     		mov	r3, r2
 2280 002a 0A46     		mov	r2, r1
 2281              	.LVL209:
 2282 002c 0446     		mov	r4, r0
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2283              		.loc 1 951 0 is_stmt 0 discriminator 2
 2284 002e 0121     		movs	r1, #1
 2285              	.LVL210:
 2286 0030 80F83810 		strb	r1, [r0, #56]
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 2287              		.loc 1 953 0 is_stmt 1 discriminator 2
 2288 0034 8262     		str	r2, [r0, #40]
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2289              		.loc 1 954 0 discriminator 2
 2290 0036 8385     		strh	r3, [r0, #44]	@ movhi
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2291              		.loc 1 956 0 discriminator 2
 2292 0038 0025     		movs	r5, #0
 2293 003a C563     		str	r5, [r0, #60]
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 2294              		.loc 1 957 0 discriminator 2
 2295 003c 2221     		movs	r1, #34
 2296 003e 80F83A10 		strb	r1, [r0, #58]
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2297              		.loc 1 960 0 discriminator 2
 2298 0042 416B     		ldr	r1, [r0, #52]
 2299 0044 1548     		ldr	r0, .L188
 2300              	.LVL211:
 2301 0046 C863     		str	r0, [r1, #60]
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2302              		.loc 1 963 0 discriminator 2
 2303 0048 616B     		ldr	r1, [r4, #52]
 2304 004a 1548     		ldr	r0, .L188+4
 2305 004c 0864     		str	r0, [r1, #64]
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2306              		.loc 1 966 0 discriminator 2
 2307 004e 616B     		ldr	r1, [r4, #52]
 2308 0050 1448     		ldr	r0, .L188+8
 2309 0052 C864     		str	r0, [r1, #76]
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2310              		.loc 1 969 0 discriminator 2
 2311 0054 616B     		ldr	r1, [r4, #52]
 2312 0056 0D65     		str	r5, [r1, #80]
 2313              	.LVL212:
ARM GAS  /tmp/cczJWHrP.s 			page 91


 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2314              		.loc 1 973 0 discriminator 2
 2315 0058 2168     		ldr	r1, [r4]
 2316 005a 0431     		adds	r1, r1, #4
 2317 005c 606B     		ldr	r0, [r4, #52]
 2318 005e FFF7FEFF 		bl	HAL_DMA_Start_IT
 2319              	.LVL213:
 2320              	.LBB2:
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2321              		.loc 1 976 0 discriminator 2
 2322 0062 0195     		str	r5, [sp, #4]
 2323 0064 2368     		ldr	r3, [r4]
 2324 0066 1A68     		ldr	r2, [r3]
 2325 0068 0192     		str	r2, [sp, #4]
 2326 006a 5A68     		ldr	r2, [r3, #4]
 2327 006c 0192     		str	r2, [sp, #4]
 2328 006e 019A     		ldr	r2, [sp, #4]
 2329              	.LBE2:
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2330              		.loc 1 979 0 discriminator 2
 2331 0070 84F83850 		strb	r5, [r4, #56]
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2332              		.loc 1 982 0 discriminator 2
 2333 0074 DA68     		ldr	r2, [r3, #12]
 2334 0076 42F48072 		orr	r2, r2, #256
 2335 007a DA60     		str	r2, [r3, #12]
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2336              		.loc 1 985 0 discriminator 2
 2337 007c 2268     		ldr	r2, [r4]
 2338 007e 5369     		ldr	r3, [r2, #20]
 2339 0080 43F00103 		orr	r3, r3, #1
 2340 0084 5361     		str	r3, [r2, #20]
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2341              		.loc 1 989 0 discriminator 2
 2342 0086 2268     		ldr	r2, [r4]
 2343 0088 5369     		ldr	r3, [r2, #20]
 2344 008a 43F04003 		orr	r3, r3, #64
 2345 008e 5361     		str	r3, [r2, #20]
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2346              		.loc 1 991 0 discriminator 2
 2347 0090 2846     		mov	r0, r5
 2348 0092 BDE7     		b	.L180
 2349              	.LVL214:
 2350              	.L182:
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2351              		.loc 1 947 0
 2352 0094 0120     		movs	r0, #1
 2353              	.LVL215:
 2354 0096 BBE7     		b	.L180
 2355              	.LVL216:
 2356              	.L183:
 2357 0098 0120     		movs	r0, #1
 2358              	.LVL217:
 2359 009a B9E7     		b	.L180
 2360              	.L189:
 2361              		.align	2
 2362              	.L188:
ARM GAS  /tmp/cczJWHrP.s 			page 92


 2363 009c 00000000 		.word	UART_DMAReceiveCplt
 2364 00a0 00000000 		.word	UART_DMARxHalfCplt
 2365 00a4 00000000 		.word	UART_DMAError
 2366              		.cfi_endproc
 2367              	.LFE135:
 2369              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2370              		.align	1
 2371              		.global	HAL_UART_DMAPause
 2372              		.syntax unified
 2373              		.thumb
 2374              		.thumb_func
 2375              		.fpu fpv4-sp-d16
 2377              	HAL_UART_DMAPause:
 2378              	.LFB136:
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t dmarequest = 0x00U;
 2379              		.loc 1 1006 0
 2380              		.cfi_startproc
 2381              		@ args = 0, pretend = 0, frame = 0
 2382              		@ frame_needed = 0, uses_anonymous_args = 0
 2383              		@ link register save eliminated.
 2384              	.LVL218:
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2385              		.loc 1 1010 0
 2386 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2387 0004 012B     		cmp	r3, #1
 2388 0006 31D0     		beq	.L194
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2389              		.loc 1 1010 0 is_stmt 0 discriminator 2
 2390 0008 0123     		movs	r3, #1
 2391 000a 80F83830 		strb	r3, [r0, #56]
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2392              		.loc 1 1011 0 is_stmt 1 discriminator 2
 2393 000e 0168     		ldr	r1, [r0]
 2394 0010 4A69     		ldr	r2, [r1, #20]
 2395 0012 02F08002 		and	r2, r2, #128
 2396              	.LVL219:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2397              		.loc 1 1012 0 discriminator 2
 2398 0016 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2399 001a DBB2     		uxtb	r3, r3
 2400 001c 212B     		cmp	r3, #33
 2401 001e 0DD0     		beq	.L195
 2402              	.L192:
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2403              		.loc 1 1017 0
 2404 0020 0168     		ldr	r1, [r0]
 2405 0022 4A69     		ldr	r2, [r1, #20]
 2406              	.LVL220:
 2407 0024 02F04002 		and	r2, r2, #64
 2408              	.LVL221:
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2409              		.loc 1 1018 0
 2410 0028 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2411 002c DBB2     		uxtb	r3, r3
 2412 002e 222B     		cmp	r3, #34
 2413 0030 0BD0     		beq	.L196
 2414              	.LVL222:
ARM GAS  /tmp/cczJWHrP.s 			page 93


 2415              	.L193:
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2416              		.loc 1 1029 0
 2417 0032 0023     		movs	r3, #0
 2418 0034 80F83830 		strb	r3, [r0, #56]
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2419              		.loc 1 1031 0
 2420 0038 1846     		mov	r0, r3
 2421              	.LVL223:
 2422 003a 7047     		bx	lr
 2423              	.LVL224:
 2424              	.L195:
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2425              		.loc 1 1012 0 discriminator 1
 2426 003c 002A     		cmp	r2, #0
 2427 003e EFD0     		beq	.L192
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2428              		.loc 1 1015 0
 2429 0040 4B69     		ldr	r3, [r1, #20]
 2430 0042 23F08003 		bic	r3, r3, #128
 2431 0046 4B61     		str	r3, [r1, #20]
 2432 0048 EAE7     		b	.L192
 2433              	.L196:
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2434              		.loc 1 1018 0 discriminator 1
 2435 004a 002A     		cmp	r2, #0
 2436 004c F1D0     		beq	.L193
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2437              		.loc 1 1021 0
 2438 004e CB68     		ldr	r3, [r1, #12]
 2439 0050 23F48073 		bic	r3, r3, #256
 2440 0054 CB60     		str	r3, [r1, #12]
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2441              		.loc 1 1022 0
 2442 0056 0268     		ldr	r2, [r0]
 2443              	.LVL225:
 2444 0058 5369     		ldr	r3, [r2, #20]
 2445 005a 23F00103 		bic	r3, r3, #1
 2446 005e 5361     		str	r3, [r2, #20]
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2447              		.loc 1 1025 0
 2448 0060 0268     		ldr	r2, [r0]
 2449 0062 5369     		ldr	r3, [r2, #20]
 2450 0064 23F04003 		bic	r3, r3, #64
 2451 0068 5361     		str	r3, [r2, #20]
 2452 006a E2E7     		b	.L193
 2453              	.LVL226:
 2454              	.L194:
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2455              		.loc 1 1010 0
 2456 006c 0220     		movs	r0, #2
 2457              	.LVL227:
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2458              		.loc 1 1032 0
 2459 006e 7047     		bx	lr
 2460              		.cfi_endproc
 2461              	.LFE136:
ARM GAS  /tmp/cczJWHrP.s 			page 94


 2463              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2464              		.align	1
 2465              		.global	HAL_UART_DMAResume
 2466              		.syntax unified
 2467              		.thumb
 2468              		.thumb_func
 2469              		.fpu fpv4-sp-d16
 2471              	HAL_UART_DMAResume:
 2472              	.LFB137:
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 2473              		.loc 1 1041 0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 8
 2476              		@ frame_needed = 0, uses_anonymous_args = 0
 2477              		@ link register save eliminated.
 2478              	.LVL228:
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2479              		.loc 1 1043 0
 2480 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 2481 0004 012B     		cmp	r3, #1
 2482 0006 34D0     		beq	.L201
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2483              		.loc 1 1043 0 is_stmt 0 discriminator 2
 2484 0008 0123     		movs	r3, #1
 2485 000a 80F83830 		strb	r3, [r0, #56]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2486              		.loc 1 1045 0 is_stmt 1 discriminator 2
 2487 000e 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2488 0012 DBB2     		uxtb	r3, r3
 2489 0014 212B     		cmp	r3, #33
 2490 0016 09D0     		beq	.L207
 2491              	.L199:
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2492              		.loc 1 1050 0
 2493 0018 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 2494 001c DBB2     		uxtb	r3, r3
 2495 001e 222B     		cmp	r3, #34
 2496 0020 0AD0     		beq	.L208
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2497              		.loc 1 1064 0
 2498 0022 0023     		movs	r3, #0
 2499 0024 80F83830 		strb	r3, [r0, #56]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2500              		.loc 1 1066 0
 2501 0028 1846     		mov	r0, r3
 2502              	.LVL229:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2503              		.loc 1 1067 0
 2504 002a 7047     		bx	lr
 2505              	.LVL230:
 2506              	.L207:
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2507              		.loc 1 1048 0
 2508 002c 0268     		ldr	r2, [r0]
 2509 002e 5369     		ldr	r3, [r2, #20]
 2510 0030 43F08003 		orr	r3, r3, #128
 2511 0034 5361     		str	r3, [r2, #20]
ARM GAS  /tmp/cczJWHrP.s 			page 95


 2512 0036 EFE7     		b	.L199
 2513              	.L208:
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
 2514              		.loc 1 1041 0
 2515 0038 82B0     		sub	sp, sp, #8
 2516              	.LCFI25:
 2517              		.cfi_def_cfa_offset 8
 2518              	.LBB3:
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2519              		.loc 1 1053 0
 2520 003a 0023     		movs	r3, #0
 2521 003c 0193     		str	r3, [sp, #4]
 2522 003e 0368     		ldr	r3, [r0]
 2523 0040 1A68     		ldr	r2, [r3]
 2524 0042 0192     		str	r2, [sp, #4]
 2525 0044 5A68     		ldr	r2, [r3, #4]
 2526 0046 0192     		str	r2, [sp, #4]
 2527 0048 019A     		ldr	r2, [sp, #4]
 2528              	.LBE3:
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2529              		.loc 1 1056 0
 2530 004a DA68     		ldr	r2, [r3, #12]
 2531 004c 42F48072 		orr	r2, r2, #256
 2532 0050 DA60     		str	r2, [r3, #12]
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2533              		.loc 1 1057 0
 2534 0052 0268     		ldr	r2, [r0]
 2535 0054 5369     		ldr	r3, [r2, #20]
 2536 0056 43F00103 		orr	r3, r3, #1
 2537 005a 5361     		str	r3, [r2, #20]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2538              		.loc 1 1060 0
 2539 005c 0268     		ldr	r2, [r0]
 2540 005e 5369     		ldr	r3, [r2, #20]
 2541 0060 43F04003 		orr	r3, r3, #64
 2542 0064 5361     		str	r3, [r2, #20]
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2543              		.loc 1 1064 0
 2544 0066 0023     		movs	r3, #0
 2545 0068 80F83830 		strb	r3, [r0, #56]
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2546              		.loc 1 1066 0
 2547 006c 1846     		mov	r0, r3
 2548              	.LVL231:
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2549              		.loc 1 1067 0
 2550 006e 02B0     		add	sp, sp, #8
 2551              	.LCFI26:
 2552              		.cfi_def_cfa_offset 0
 2553              		@ sp needed
 2554 0070 7047     		bx	lr
 2555              	.LVL232:
 2556              	.L201:
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2557              		.loc 1 1043 0
 2558 0072 0220     		movs	r0, #2
 2559              	.LVL233:
ARM GAS  /tmp/cczJWHrP.s 			page 96


 2560 0074 7047     		bx	lr
 2561              		.cfi_endproc
 2562              	.LFE137:
 2564              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2565              		.align	1
 2566              		.global	HAL_UART_DMAStop
 2567              		.syntax unified
 2568              		.thumb
 2569              		.thumb_func
 2570              		.fpu fpv4-sp-d16
 2572              	HAL_UART_DMAStop:
 2573              	.LFB138:
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2574              		.loc 1 1076 0
 2575              		.cfi_startproc
 2576              		@ args = 0, pretend = 0, frame = 0
 2577              		@ frame_needed = 0, uses_anonymous_args = 0
 2578              	.LVL234:
 2579 0000 10B5     		push	{r4, lr}
 2580              	.LCFI27:
 2581              		.cfi_def_cfa_offset 8
 2582              		.cfi_offset 4, -8
 2583              		.cfi_offset 14, -4
 2584 0002 0446     		mov	r4, r0
 2585              	.LVL235:
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2586              		.loc 1 1085 0
 2587 0004 0168     		ldr	r1, [r0]
 2588 0006 4A69     		ldr	r2, [r1, #20]
 2589              	.LVL236:
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2590              		.loc 1 1086 0
 2591 0008 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 2592 000c DBB2     		uxtb	r3, r3
 2593 000e 212B     		cmp	r3, #33
 2594 0010 0AD0     		beq	.L215
 2595              	.LVL237:
 2596              	.L210:
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2597              		.loc 1 1099 0
 2598 0012 2168     		ldr	r1, [r4]
 2599 0014 4A69     		ldr	r2, [r1, #20]
 2600 0016 02F04002 		and	r2, r2, #64
 2601              	.LVL238:
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2602              		.loc 1 1100 0
 2603 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 2604 001e DBB2     		uxtb	r3, r3
 2605 0020 222B     		cmp	r3, #34
 2606 0022 11D0     		beq	.L216
 2607              	.LVL239:
 2608              	.L212:
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2609              		.loc 1 1113 0
 2610 0024 0020     		movs	r0, #0
 2611 0026 10BD     		pop	{r4, pc}
 2612              	.LVL240:
ARM GAS  /tmp/cczJWHrP.s 			page 97


 2613              	.L215:
 2614 0028 02F08002 		and	r2, r2, #128
 2615              	.LVL241:
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2616              		.loc 1 1086 0 discriminator 1
 2617 002c 002A     		cmp	r2, #0
 2618 002e F0D0     		beq	.L210
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2619              		.loc 1 1088 0
 2620 0030 4B69     		ldr	r3, [r1, #20]
 2621 0032 23F08003 		bic	r3, r3, #128
 2622 0036 4B61     		str	r3, [r1, #20]
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2623              		.loc 1 1091 0
 2624 0038 006B     		ldr	r0, [r0, #48]
 2625              	.LVL242:
 2626 003a 08B1     		cbz	r0, .L211
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2627              		.loc 1 1093 0
 2628 003c FFF7FEFF 		bl	HAL_DMA_Abort
 2629              	.LVL243:
 2630              	.L211:
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2631              		.loc 1 1095 0
 2632 0040 2046     		mov	r0, r4
 2633 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 2634              	.LVL244:
 2635 0046 E4E7     		b	.L210
 2636              	.LVL245:
 2637              	.L216:
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2638              		.loc 1 1100 0 discriminator 1
 2639 0048 002A     		cmp	r2, #0
 2640 004a EBD0     		beq	.L212
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2641              		.loc 1 1102 0
 2642 004c 4B69     		ldr	r3, [r1, #20]
 2643 004e 23F04003 		bic	r3, r3, #64
 2644 0052 4B61     		str	r3, [r1, #20]
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2645              		.loc 1 1105 0
 2646 0054 606B     		ldr	r0, [r4, #52]
 2647 0056 08B1     		cbz	r0, .L213
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2648              		.loc 1 1107 0
 2649 0058 FFF7FEFF 		bl	HAL_DMA_Abort
 2650              	.LVL246:
 2651              	.L213:
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2652              		.loc 1 1109 0
 2653 005c 2046     		mov	r0, r4
 2654 005e FFF7FEFF 		bl	UART_EndRxTransfer
 2655              	.LVL247:
 2656 0062 DFE7     		b	.L212
 2657              		.cfi_endproc
 2658              	.LFE138:
 2660              		.section	.text.HAL_UART_Abort,"ax",%progbits
ARM GAS  /tmp/cczJWHrP.s 			page 98


 2661              		.align	1
 2662              		.global	HAL_UART_Abort
 2663              		.syntax unified
 2664              		.thumb
 2665              		.thumb_func
 2666              		.fpu fpv4-sp-d16
 2668              	HAL_UART_Abort:
 2669              	.LFB139:
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2670              		.loc 1 1128 0
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 0
 2673              		@ frame_needed = 0, uses_anonymous_args = 0
 2674              	.LVL248:
 2675 0000 10B5     		push	{r4, lr}
 2676              	.LCFI28:
 2677              		.cfi_def_cfa_offset 8
 2678              		.cfi_offset 4, -8
 2679              		.cfi_offset 14, -4
 2680 0002 0446     		mov	r4, r0
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2681              		.loc 1 1130 0
 2682 0004 0268     		ldr	r2, [r0]
 2683 0006 D368     		ldr	r3, [r2, #12]
 2684 0008 23F4F073 		bic	r3, r3, #480
 2685 000c D360     		str	r3, [r2, #12]
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2686              		.loc 1 1131 0
 2687 000e 0268     		ldr	r2, [r0]
 2688 0010 5369     		ldr	r3, [r2, #20]
 2689 0012 23F00103 		bic	r3, r3, #1
 2690 0016 5361     		str	r3, [r2, #20]
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2691              		.loc 1 1134 0
 2692 0018 0368     		ldr	r3, [r0]
 2693 001a 5A69     		ldr	r2, [r3, #20]
 2694 001c 12F0800F 		tst	r2, #128
 2695 0020 0AD0     		beq	.L218
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2696              		.loc 1 1136 0
 2697 0022 5A69     		ldr	r2, [r3, #20]
 2698 0024 22F08002 		bic	r2, r2, #128
 2699 0028 5A61     		str	r2, [r3, #20]
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2700              		.loc 1 1139 0
 2701 002a 036B     		ldr	r3, [r0, #48]
 2702 002c 23B1     		cbz	r3, .L218
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2703              		.loc 1 1143 0
 2704 002e 0022     		movs	r2, #0
 2705 0030 1A65     		str	r2, [r3, #80]
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2706              		.loc 1 1145 0
 2707 0032 006B     		ldr	r0, [r0, #48]
 2708              	.LVL249:
 2709 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 2710              	.LVL250:
ARM GAS  /tmp/cczJWHrP.s 			page 99


 2711              	.L218:
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2712              		.loc 1 1150 0
 2713 0038 2368     		ldr	r3, [r4]
 2714 003a 5A69     		ldr	r2, [r3, #20]
 2715 003c 12F0400F 		tst	r2, #64
 2716 0040 0AD0     		beq	.L219
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2717              		.loc 1 1152 0
 2718 0042 5A69     		ldr	r2, [r3, #20]
 2719 0044 22F04002 		bic	r2, r2, #64
 2720 0048 5A61     		str	r2, [r3, #20]
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2721              		.loc 1 1155 0
 2722 004a 636B     		ldr	r3, [r4, #52]
 2723 004c 23B1     		cbz	r3, .L219
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2724              		.loc 1 1159 0
 2725 004e 0022     		movs	r2, #0
 2726 0050 1A65     		str	r2, [r3, #80]
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2727              		.loc 1 1161 0
 2728 0052 606B     		ldr	r0, [r4, #52]
 2729 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2730              	.LVL251:
 2731              	.L219:
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 2732              		.loc 1 1166 0
 2733 0058 0020     		movs	r0, #0
 2734 005a E084     		strh	r0, [r4, #38]	@ movhi
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2735              		.loc 1 1167 0
 2736 005c E085     		strh	r0, [r4, #46]	@ movhi
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2737              		.loc 1 1170 0
 2738 005e E063     		str	r0, [r4, #60]
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2739              		.loc 1 1173 0
 2740 0060 2023     		movs	r3, #32
 2741 0062 84F83A30 		strb	r3, [r4, #58]
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2742              		.loc 1 1174 0
 2743 0066 84F83930 		strb	r3, [r4, #57]
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2744              		.loc 1 1177 0
 2745 006a 10BD     		pop	{r4, pc}
 2746              		.cfi_endproc
 2747              	.LFE139:
 2749              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2750              		.align	1
 2751              		.global	HAL_UART_AbortTransmit
 2752              		.syntax unified
 2753              		.thumb
 2754              		.thumb_func
 2755              		.fpu fpv4-sp-d16
 2757              	HAL_UART_AbortTransmit:
 2758              	.LFB140:
ARM GAS  /tmp/cczJWHrP.s 			page 100


1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 2759              		.loc 1 1192 0
 2760              		.cfi_startproc
 2761              		@ args = 0, pretend = 0, frame = 0
 2762              		@ frame_needed = 0, uses_anonymous_args = 0
 2763              	.LVL252:
 2764 0000 10B5     		push	{r4, lr}
 2765              	.LCFI29:
 2766              		.cfi_def_cfa_offset 8
 2767              		.cfi_offset 4, -8
 2768              		.cfi_offset 14, -4
 2769 0002 0446     		mov	r4, r0
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2770              		.loc 1 1194 0
 2771 0004 0268     		ldr	r2, [r0]
 2772 0006 D368     		ldr	r3, [r2, #12]
 2773 0008 23F0C003 		bic	r3, r3, #192
 2774 000c D360     		str	r3, [r2, #12]
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2775              		.loc 1 1197 0
 2776 000e 0368     		ldr	r3, [r0]
 2777 0010 5A69     		ldr	r2, [r3, #20]
 2778 0012 12F0800F 		tst	r2, #128
 2779 0016 0AD0     		beq	.L222
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2780              		.loc 1 1199 0
 2781 0018 5A69     		ldr	r2, [r3, #20]
 2782 001a 22F08002 		bic	r2, r2, #128
 2783 001e 5A61     		str	r2, [r3, #20]
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2784              		.loc 1 1202 0
 2785 0020 036B     		ldr	r3, [r0, #48]
 2786 0022 23B1     		cbz	r3, .L222
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2787              		.loc 1 1206 0
 2788 0024 0022     		movs	r2, #0
 2789 0026 1A65     		str	r2, [r3, #80]
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2790              		.loc 1 1208 0
 2791 0028 006B     		ldr	r0, [r0, #48]
 2792              	.LVL253:
 2793 002a FFF7FEFF 		bl	HAL_DMA_Abort
 2794              	.LVL254:
 2795              	.L222:
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2796              		.loc 1 1213 0
 2797 002e 0020     		movs	r0, #0
 2798 0030 E084     		strh	r0, [r4, #38]	@ movhi
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2799              		.loc 1 1216 0
 2800 0032 2023     		movs	r3, #32
 2801 0034 84F83930 		strb	r3, [r4, #57]
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2802              		.loc 1 1219 0
 2803 0038 10BD     		pop	{r4, pc}
 2804              		.cfi_endproc
 2805              	.LFE140:
ARM GAS  /tmp/cczJWHrP.s 			page 101


 2807              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2808              		.align	1
 2809              		.global	HAL_UART_AbortReceive
 2810              		.syntax unified
 2811              		.thumb
 2812              		.thumb_func
 2813              		.fpu fpv4-sp-d16
 2815              	HAL_UART_AbortReceive:
 2816              	.LFB141:
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2817              		.loc 1 1234 0
 2818              		.cfi_startproc
 2819              		@ args = 0, pretend = 0, frame = 0
 2820              		@ frame_needed = 0, uses_anonymous_args = 0
 2821              	.LVL255:
 2822 0000 10B5     		push	{r4, lr}
 2823              	.LCFI30:
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 4, -8
 2826              		.cfi_offset 14, -4
 2827 0002 0446     		mov	r4, r0
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2828              		.loc 1 1236 0
 2829 0004 0268     		ldr	r2, [r0]
 2830 0006 D368     		ldr	r3, [r2, #12]
 2831 0008 23F49073 		bic	r3, r3, #288
 2832 000c D360     		str	r3, [r2, #12]
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2833              		.loc 1 1237 0
 2834 000e 0268     		ldr	r2, [r0]
 2835 0010 5369     		ldr	r3, [r2, #20]
 2836 0012 23F00103 		bic	r3, r3, #1
 2837 0016 5361     		str	r3, [r2, #20]
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2838              		.loc 1 1240 0
 2839 0018 0368     		ldr	r3, [r0]
 2840 001a 5A69     		ldr	r2, [r3, #20]
 2841 001c 12F0400F 		tst	r2, #64
 2842 0020 0AD0     		beq	.L225
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2843              		.loc 1 1242 0
 2844 0022 5A69     		ldr	r2, [r3, #20]
 2845 0024 22F04002 		bic	r2, r2, #64
 2846 0028 5A61     		str	r2, [r3, #20]
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2847              		.loc 1 1245 0
 2848 002a 436B     		ldr	r3, [r0, #52]
 2849 002c 23B1     		cbz	r3, .L225
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2850              		.loc 1 1249 0
 2851 002e 0022     		movs	r2, #0
 2852 0030 1A65     		str	r2, [r3, #80]
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 2853              		.loc 1 1251 0
 2854 0032 406B     		ldr	r0, [r0, #52]
 2855              	.LVL256:
 2856 0034 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  /tmp/cczJWHrP.s 			page 102


 2857              	.LVL257:
 2858              	.L225:
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2859              		.loc 1 1256 0
 2860 0038 0020     		movs	r0, #0
 2861 003a E085     		strh	r0, [r4, #46]	@ movhi
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2862              		.loc 1 1259 0
 2863 003c 2023     		movs	r3, #32
 2864 003e 84F83A30 		strb	r3, [r4, #58]
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2865              		.loc 1 1262 0
 2866 0042 10BD     		pop	{r4, pc}
 2867              		.cfi_endproc
 2868              	.LFE141:
 2870              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 2871              		.align	1
 2872              		.weak	HAL_UART_TxCpltCallback
 2873              		.syntax unified
 2874              		.thumb
 2875              		.thumb_func
 2876              		.fpu fpv4-sp-d16
 2878              	HAL_UART_TxCpltCallback:
 2879              	.LFB146:
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2880              		.loc 1 1651 0
 2881              		.cfi_startproc
 2882              		@ args = 0, pretend = 0, frame = 0
 2883              		@ frame_needed = 0, uses_anonymous_args = 0
 2884              		@ link register save eliminated.
 2885              	.LVL258:
 2886 0000 7047     		bx	lr
 2887              		.cfi_endproc
 2888              	.LFE146:
 2890              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 2891              		.align	1
 2892              		.syntax unified
 2893              		.thumb
 2894              		.thumb_func
 2895              		.fpu fpv4-sp-d16
 2897              	UART_DMATransmitCplt:
 2898              	.LFB161:
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2899              		.loc 1 1993 0
 2900              		.cfi_startproc
 2901              		@ args = 0, pretend = 0, frame = 0
 2902              		@ frame_needed = 0, uses_anonymous_args = 0
 2903              	.LVL259:
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2904              		.loc 1 1993 0
 2905 0000 08B5     		push	{r3, lr}
 2906              	.LCFI31:
 2907              		.cfi_def_cfa_offset 8
 2908              		.cfi_offset 3, -8
 2909              		.cfi_offset 14, -4
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 2910              		.loc 1 1994 0
ARM GAS  /tmp/cczJWHrP.s 			page 103


 2911 0002 836B     		ldr	r3, [r0, #56]
 2912              	.LVL260:
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 2913              		.loc 1 1996 0
 2914 0004 0268     		ldr	r2, [r0]
 2915 0006 1268     		ldr	r2, [r2]
 2916 0008 12F4807F 		tst	r2, #256
 2917 000c 0CD1     		bne	.L229
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2918              		.loc 1 1998 0
 2919 000e 0022     		movs	r2, #0
 2920 0010 DA84     		strh	r2, [r3, #38]	@ movhi
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2921              		.loc 1 2002 0
 2922 0012 1968     		ldr	r1, [r3]
 2923 0014 4A69     		ldr	r2, [r1, #20]
 2924 0016 22F08002 		bic	r2, r2, #128
 2925 001a 4A61     		str	r2, [r1, #20]
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2926              		.loc 1 2005 0
 2927 001c 1A68     		ldr	r2, [r3]
 2928 001e D368     		ldr	r3, [r2, #12]
 2929              	.LVL261:
 2930 0020 43F04003 		orr	r3, r3, #64
 2931 0024 D360     		str	r3, [r2, #12]
 2932 0026 08BD     		pop	{r3, pc}
 2933              	.LVL262:
 2934              	.L229:
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 2935              		.loc 1 2011 0
 2936 0028 1846     		mov	r0, r3
 2937              	.LVL263:
 2938 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2939              	.LVL264:
 2940 002e 08BD     		pop	{r3, pc}
 2941              		.cfi_endproc
 2942              	.LFE161:
 2944              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 2945              		.align	1
 2946              		.syntax unified
 2947              		.thumb
 2948              		.thumb_func
 2949              		.fpu fpv4-sp-d16
 2951              	UART_EndTransmit_IT:
 2952              	.LFB175:
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */    
 2953              		.loc 1 2352 0
 2954              		.cfi_startproc
 2955              		@ args = 0, pretend = 0, frame = 0
 2956              		@ frame_needed = 0, uses_anonymous_args = 0
 2957              	.LVL265:
 2958 0000 08B5     		push	{r3, lr}
 2959              	.LCFI32:
 2960              		.cfi_def_cfa_offset 8
 2961              		.cfi_offset 3, -8
 2962              		.cfi_offset 14, -4
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
ARM GAS  /tmp/cczJWHrP.s 			page 104


 2963              		.loc 1 2354 0
 2964 0002 0168     		ldr	r1, [r0]
 2965 0004 CB68     		ldr	r3, [r1, #12]
 2966 0006 23F04003 		bic	r3, r3, #64
 2967 000a CB60     		str	r3, [r1, #12]
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 2968              		.loc 1 2357 0
 2969 000c 2023     		movs	r3, #32
 2970 000e 80F83930 		strb	r3, [r0, #57]
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 2971              		.loc 1 2359 0
 2972 0012 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 2973              	.LVL266:
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 2974              		.loc 1 2362 0
 2975 0016 0020     		movs	r0, #0
 2976 0018 08BD     		pop	{r3, pc}
 2977              		.cfi_endproc
 2978              	.LFE175:
 2980              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 2981              		.align	1
 2982              		.weak	HAL_UART_TxHalfCpltCallback
 2983              		.syntax unified
 2984              		.thumb
 2985              		.thumb_func
 2986              		.fpu fpv4-sp-d16
 2988              	HAL_UART_TxHalfCpltCallback:
 2989              	.LFB147:
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2990              		.loc 1 1666 0
 2991              		.cfi_startproc
 2992              		@ args = 0, pretend = 0, frame = 0
 2993              		@ frame_needed = 0, uses_anonymous_args = 0
 2994              		@ link register save eliminated.
 2995              	.LVL267:
 2996 0000 7047     		bx	lr
 2997              		.cfi_endproc
 2998              	.LFE147:
 3000              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 3001              		.align	1
 3002              		.syntax unified
 3003              		.thumb
 3004              		.thumb_func
 3005              		.fpu fpv4-sp-d16
 3007              	UART_DMATxHalfCplt:
 3008              	.LFB162:
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3009              		.loc 1 2022 0
 3010              		.cfi_startproc
 3011              		@ args = 0, pretend = 0, frame = 0
 3012              		@ frame_needed = 0, uses_anonymous_args = 0
 3013              	.LVL268:
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3014              		.loc 1 2022 0
 3015 0000 08B5     		push	{r3, lr}
 3016              	.LCFI33:
 3017              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cczJWHrP.s 			page 105


 3018              		.cfi_offset 3, -8
 3019              		.cfi_offset 14, -4
 3020              	.LVL269:
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3021              		.loc 1 2025 0
 3022 0002 806B     		ldr	r0, [r0, #56]
 3023              	.LVL270:
 3024 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 3025              	.LVL271:
 3026 0008 08BD     		pop	{r3, pc}
 3027              		.cfi_endproc
 3028              	.LFE162:
 3030              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3031              		.align	1
 3032              		.weak	HAL_UART_RxCpltCallback
 3033              		.syntax unified
 3034              		.thumb
 3035              		.thumb_func
 3036              		.fpu fpv4-sp-d16
 3038              	HAL_UART_RxCpltCallback:
 3039              	.LFB148:
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3040              		.loc 1 1681 0
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 0, uses_anonymous_args = 0
 3044              		@ link register save eliminated.
 3045              	.LVL272:
 3046 0000 7047     		bx	lr
 3047              		.cfi_endproc
 3048              	.LFE148:
 3050              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 3051              		.align	1
 3052              		.syntax unified
 3053              		.thumb
 3054              		.thumb_func
 3055              		.fpu fpv4-sp-d16
 3057              	UART_DMAReceiveCplt:
 3058              	.LFB163:
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3059              		.loc 1 2034 0
 3060              		.cfi_startproc
 3061              		@ args = 0, pretend = 0, frame = 0
 3062              		@ frame_needed = 0, uses_anonymous_args = 0
 3063              	.LVL273:
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3064              		.loc 1 2034 0
 3065 0000 08B5     		push	{r3, lr}
 3066              	.LCFI34:
 3067              		.cfi_def_cfa_offset 8
 3068              		.cfi_offset 3, -8
 3069              		.cfi_offset 14, -4
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
 3070              		.loc 1 2035 0
 3071 0002 836B     		ldr	r3, [r0, #56]
 3072              	.LVL274:
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/cczJWHrP.s 			page 106


 3073              		.loc 1 2037 0
 3074 0004 0268     		ldr	r2, [r0]
 3075 0006 1268     		ldr	r2, [r2]
 3076 0008 12F4807F 		tst	r2, #256
 3077 000c 13D1     		bne	.L239
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3078              		.loc 1 2039 0
 3079 000e 0022     		movs	r2, #0
 3080 0010 DA85     		strh	r2, [r3, #46]	@ movhi
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3081              		.loc 1 2042 0
 3082 0012 1968     		ldr	r1, [r3]
 3083 0014 CA68     		ldr	r2, [r1, #12]
 3084 0016 22F48072 		bic	r2, r2, #256
 3085 001a CA60     		str	r2, [r1, #12]
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     
 3086              		.loc 1 2043 0
 3087 001c 1968     		ldr	r1, [r3]
 3088 001e 4A69     		ldr	r2, [r1, #20]
 3089 0020 22F00102 		bic	r2, r2, #1
 3090 0024 4A61     		str	r2, [r1, #20]
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 	
 3091              		.loc 1 2047 0
 3092 0026 1968     		ldr	r1, [r3]
 3093 0028 4A69     		ldr	r2, [r1, #20]
 3094 002a 22F04002 		bic	r2, r2, #64
 3095 002e 4A61     		str	r2, [r1, #20]
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3096              		.loc 1 2050 0
 3097 0030 2022     		movs	r2, #32
 3098 0032 83F83A20 		strb	r2, [r3, #58]
 3099              	.L239:
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3100              		.loc 1 2052 0
 3101 0036 1846     		mov	r0, r3
 3102              	.LVL275:
 3103 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 3104              	.LVL276:
 3105 003c 08BD     		pop	{r3, pc}
 3106              		.cfi_endproc
 3107              	.LFE163:
 3109              		.section	.text.UART_Receive_IT,"ax",%progbits
 3110              		.align	1
 3111              		.syntax unified
 3112              		.thumb
 3113              		.thumb_func
 3114              		.fpu fpv4-sp-d16
 3116              	UART_Receive_IT:
 3117              	.LFB176:
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t* tmp;
 3118              		.loc 1 2371 0
 3119              		.cfi_startproc
 3120              		@ args = 0, pretend = 0, frame = 0
 3121              		@ frame_needed = 0, uses_anonymous_args = 0
 3122              	.LVL277:
 3123 0000 08B5     		push	{r3, lr}
 3124              	.LCFI35:
ARM GAS  /tmp/cczJWHrP.s 			page 107


 3125              		.cfi_def_cfa_offset 8
 3126              		.cfi_offset 3, -8
 3127              		.cfi_offset 14, -4
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3128              		.loc 1 2375 0
 3129 0002 90F83A30 		ldrb	r3, [r0, #58]	@ zero_extendqisi2
 3130 0006 DBB2     		uxtb	r3, r3
 3131 0008 222B     		cmp	r3, #34
 3132 000a 01D0     		beq	.L250
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3133              		.loc 1 2422 0
 3134 000c 0220     		movs	r0, #2
 3135              	.LVL278:
 3136 000e 08BD     		pop	{r3, pc}
 3137              	.LVL279:
 3138              	.L250:
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3139              		.loc 1 2377 0
 3140 0010 8368     		ldr	r3, [r0, #8]
 3141 0012 B3F5805F 		cmp	r3, #4096
 3142 0016 0FD0     		beq	.L251
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3143              		.loc 1 2393 0
 3144 0018 0369     		ldr	r3, [r0, #16]
 3145 001a 0BBB     		cbnz	r3, .L246
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3146              		.loc 1 2395 0
 3147 001c 836A     		ldr	r3, [r0, #40]
 3148 001e 5A1C     		adds	r2, r3, #1
 3149 0020 8262     		str	r2, [r0, #40]
 3150 0022 0268     		ldr	r2, [r0]
 3151 0024 5268     		ldr	r2, [r2, #4]
 3152 0026 1A70     		strb	r2, [r3]
 3153              	.L245:
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3154              		.loc 1 2403 0
 3155 0028 C38D     		ldrh	r3, [r0, #46]
 3156 002a 9BB2     		uxth	r3, r3
 3157 002c 013B     		subs	r3, r3, #1
 3158 002e 9BB2     		uxth	r3, r3
 3159 0030 C385     		strh	r3, [r0, #46]	@ movhi
 3160 0032 F3B1     		cbz	r3, .L252
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3161              		.loc 1 2418 0
 3162 0034 0020     		movs	r0, #0
 3163              	.LVL280:
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3164              		.loc 1 2424 0
 3165 0036 08BD     		pop	{r3, pc}
 3166              	.LVL281:
 3167              	.L251:
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(huart->Init.Parity == UART_PARITY_NONE)
 3168              		.loc 1 2379 0
 3169 0038 826A     		ldr	r2, [r0, #40]
 3170              	.LVL282:
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3171              		.loc 1 2380 0
ARM GAS  /tmp/cczJWHrP.s 			page 108


 3172 003a 0369     		ldr	r3, [r0, #16]
 3173 003c 43B9     		cbnz	r3, .L244
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 2U;
 3174              		.loc 1 2382 0
 3175 003e 0368     		ldr	r3, [r0]
 3176 0040 5B68     		ldr	r3, [r3, #4]
 3177 0042 C3F30803 		ubfx	r3, r3, #0, #9
 3178 0046 1380     		strh	r3, [r2]	@ movhi
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3179              		.loc 1 2383 0
 3180 0048 836A     		ldr	r3, [r0, #40]
 3181 004a 0233     		adds	r3, r3, #2
 3182 004c 8362     		str	r3, [r0, #40]
 3183 004e EBE7     		b	.L245
 3184              	.L244:
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->pRxBuffPtr += 1U;
 3185              		.loc 1 2387 0
 3186 0050 0368     		ldr	r3, [r0]
 3187 0052 5B68     		ldr	r3, [r3, #4]
 3188 0054 DBB2     		uxtb	r3, r3
 3189 0056 1380     		strh	r3, [r2]	@ movhi
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3190              		.loc 1 2388 0
 3191 0058 836A     		ldr	r3, [r0, #40]
 3192 005a 0133     		adds	r3, r3, #1
 3193 005c 8362     		str	r3, [r0, #40]
 3194 005e E3E7     		b	.L245
 3195              	.LVL283:
 3196              	.L246:
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3197              		.loc 1 2399 0
 3198 0060 826A     		ldr	r2, [r0, #40]
 3199 0062 531C     		adds	r3, r2, #1
 3200 0064 8362     		str	r3, [r0, #40]
 3201 0066 0368     		ldr	r3, [r0]
 3202 0068 5B68     		ldr	r3, [r3, #4]
 3203 006a 03F07F03 		and	r3, r3, #127
 3204 006e 1370     		strb	r3, [r2]
 3205 0070 DAE7     		b	.L245
 3206              	.L252:
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3207              		.loc 1 2406 0
 3208 0072 0268     		ldr	r2, [r0]
 3209 0074 D368     		ldr	r3, [r2, #12]
 3210 0076 23F49073 		bic	r3, r3, #288
 3211 007a D360     		str	r3, [r2, #12]
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3212              		.loc 1 2409 0
 3213 007c 0268     		ldr	r2, [r0]
 3214 007e 5369     		ldr	r3, [r2, #20]
 3215 0080 23F00103 		bic	r3, r3, #1
 3216 0084 5361     		str	r3, [r2, #20]
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      
 3217              		.loc 1 2412 0
 3218 0086 2023     		movs	r3, #32
 3219 0088 80F83A30 		strb	r3, [r0, #58]
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  /tmp/cczJWHrP.s 			page 109


 3220              		.loc 1 2414 0
 3221 008c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 3222              	.LVL284:
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3223              		.loc 1 2416 0
 3224 0090 0020     		movs	r0, #0
 3225 0092 08BD     		pop	{r3, pc}
 3226              		.cfi_endproc
 3227              	.LFE176:
 3229              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 3230              		.align	1
 3231              		.weak	HAL_UART_RxHalfCpltCallback
 3232              		.syntax unified
 3233              		.thumb
 3234              		.thumb_func
 3235              		.fpu fpv4-sp-d16
 3237              	HAL_UART_RxHalfCpltCallback:
 3238              	.LFB149:
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3239              		.loc 1 1696 0
 3240              		.cfi_startproc
 3241              		@ args = 0, pretend = 0, frame = 0
 3242              		@ frame_needed = 0, uses_anonymous_args = 0
 3243              		@ link register save eliminated.
 3244              	.LVL285:
 3245 0000 7047     		bx	lr
 3246              		.cfi_endproc
 3247              	.LFE149:
 3249              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 3250              		.align	1
 3251              		.syntax unified
 3252              		.thumb
 3253              		.thumb_func
 3254              		.fpu fpv4-sp-d16
 3256              	UART_DMARxHalfCplt:
 3257              	.LFB164:
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3258              		.loc 1 2062 0
 3259              		.cfi_startproc
 3260              		@ args = 0, pretend = 0, frame = 0
 3261              		@ frame_needed = 0, uses_anonymous_args = 0
 3262              	.LVL286:
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = (UART_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 3263              		.loc 1 2062 0
 3264 0000 08B5     		push	{r3, lr}
 3265              	.LCFI36:
 3266              		.cfi_def_cfa_offset 8
 3267              		.cfi_offset 3, -8
 3268              		.cfi_offset 14, -4
 3269              	.LVL287:
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3270              		.loc 1 2065 0
 3271 0002 806B     		ldr	r0, [r0, #56]
 3272              	.LVL288:
 3273 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 3274              	.LVL289:
 3275 0008 08BD     		pop	{r3, pc}
ARM GAS  /tmp/cczJWHrP.s 			page 110


 3276              		.cfi_endproc
 3277              	.LFE164:
 3279              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 3280              		.align	1
 3281              		.weak	HAL_UART_ErrorCallback
 3282              		.syntax unified
 3283              		.thumb
 3284              		.thumb_func
 3285              		.fpu fpv4-sp-d16
 3287              	HAL_UART_ErrorCallback:
 3288              	.LFB150:
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3289              		.loc 1 1711 0
 3290              		.cfi_startproc
 3291              		@ args = 0, pretend = 0, frame = 0
 3292              		@ frame_needed = 0, uses_anonymous_args = 0
 3293              		@ link register save eliminated.
 3294              	.LVL290:
 3295 0000 7047     		bx	lr
 3296              		.cfi_endproc
 3297              	.LFE150:
 3299              		.section	.text.UART_DMAError,"ax",%progbits
 3300              		.align	1
 3301              		.syntax unified
 3302              		.thumb
 3303              		.thumb_func
 3304              		.fpu fpv4-sp-d16
 3306              	UART_DMAError:
 3307              	.LFB165:
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3308              		.loc 1 2074 0
 3309              		.cfi_startproc
 3310              		@ args = 0, pretend = 0, frame = 0
 3311              		@ frame_needed = 0, uses_anonymous_args = 0
 3312              	.LVL291:
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 3313              		.loc 1 2074 0
 3314 0000 10B5     		push	{r4, lr}
 3315              	.LCFI37:
 3316              		.cfi_def_cfa_offset 8
 3317              		.cfi_offset 4, -8
 3318              		.cfi_offset 14, -4
 3319              	.LVL292:
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3320              		.loc 1 2076 0
 3321 0002 846B     		ldr	r4, [r0, #56]
 3322              	.LVL293:
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 3323              		.loc 1 2079 0
 3324 0004 2368     		ldr	r3, [r4]
 3325 0006 5A69     		ldr	r2, [r3, #20]
 3326              	.LVL294:
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3327              		.loc 1 2080 0
 3328 0008 94F83930 		ldrb	r3, [r4, #57]	@ zero_extendqisi2
 3329 000c DBB2     		uxtb	r3, r3
 3330 000e 212B     		cmp	r3, #33
ARM GAS  /tmp/cczJWHrP.s 			page 111


 3331 0010 10D0     		beq	.L261
 3332              	.LVL295:
 3333              	.L258:
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 3334              		.loc 1 2087 0
 3335 0012 2368     		ldr	r3, [r4]
 3336 0014 5A69     		ldr	r2, [r3, #20]
 3337 0016 02F04002 		and	r2, r2, #64
 3338              	.LVL296:
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3339              		.loc 1 2088 0
 3340 001a 94F83A30 		ldrb	r3, [r4, #58]	@ zero_extendqisi2
 3341 001e DBB2     		uxtb	r3, r3
 3342 0020 222B     		cmp	r3, #34
 3343 0022 11D0     		beq	.L262
 3344              	.LVL297:
 3345              	.L259:
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 3346              		.loc 1 2094 0
 3347 0024 E36B     		ldr	r3, [r4, #60]
 3348 0026 43F01003 		orr	r3, r3, #16
 3349 002a E363     		str	r3, [r4, #60]
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3350              		.loc 1 2095 0
 3351 002c 2046     		mov	r0, r4
 3352 002e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3353              	.LVL298:
 3354 0032 10BD     		pop	{r4, pc}
 3355              	.LVL299:
 3356              	.L261:
 3357 0034 02F08002 		and	r2, r2, #128
 3358              	.LVL300:
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3359              		.loc 1 2080 0 discriminator 1
 3360 0038 002A     		cmp	r2, #0
 3361 003a EAD0     		beq	.L258
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 3362              		.loc 1 2082 0
 3363 003c 0023     		movs	r3, #0
 3364 003e E384     		strh	r3, [r4, #38]	@ movhi
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3365              		.loc 1 2083 0
 3366 0040 2046     		mov	r0, r4
 3367              	.LVL301:
 3368 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 3369              	.LVL302:
 3370 0046 E4E7     		b	.L258
 3371              	.LVL303:
 3372              	.L262:
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3373              		.loc 1 2088 0 discriminator 1
 3374 0048 002A     		cmp	r2, #0
 3375 004a EBD0     		beq	.L259
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 3376              		.loc 1 2090 0
 3377 004c 0023     		movs	r3, #0
 3378 004e E385     		strh	r3, [r4, #46]	@ movhi
ARM GAS  /tmp/cczJWHrP.s 			page 112


2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3379              		.loc 1 2091 0
 3380 0050 2046     		mov	r0, r4
 3381 0052 FFF7FEFF 		bl	UART_EndRxTransfer
 3382              	.LVL304:
 3383 0056 E5E7     		b	.L259
 3384              		.cfi_endproc
 3385              	.LFE165:
 3387              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3388              		.align	1
 3389              		.global	HAL_UART_IRQHandler
 3390              		.syntax unified
 3391              		.thumb
 3392              		.thumb_func
 3393              		.fpu fpv4-sp-d16
 3395              	HAL_UART_IRQHandler:
 3396              	.LFB145:
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t isrflags   = READ_REG(huart->Instance->SR);
 3397              		.loc 1 1524 0
 3398              		.cfi_startproc
 3399              		@ args = 0, pretend = 0, frame = 0
 3400              		@ frame_needed = 0, uses_anonymous_args = 0
 3401              	.LVL305:
 3402 0000 10B5     		push	{r4, lr}
 3403              	.LCFI38:
 3404              		.cfi_def_cfa_offset 8
 3405              		.cfi_offset 4, -8
 3406              		.cfi_offset 14, -4
 3407 0002 0446     		mov	r4, r0
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3408              		.loc 1 1525 0
 3409 0004 0268     		ldr	r2, [r0]
 3410 0006 1368     		ldr	r3, [r2]
 3411              	.LVL306:
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3412              		.loc 1 1526 0
 3413 0008 D168     		ldr	r1, [r2, #12]
 3414              	.LVL307:
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    uint32_t errorflags = 0x00U;
 3415              		.loc 1 1527 0
 3416 000a 5269     		ldr	r2, [r2, #20]
 3417              	.LVL308:
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3418              		.loc 1 1533 0
 3419 000c 13F00F00 		ands	r0, r3, #15
 3420              	.LVL309:
 3421 0010 05D1     		bne	.L264
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3422              		.loc 1 1536 0
 3423 0012 13F0200F 		tst	r3, #32
 3424 0016 02D0     		beq	.L264
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3425              		.loc 1 1536 0 is_stmt 0 discriminator 1
 3426 0018 11F0200F 		tst	r1, #32
 3427 001c 53D1     		bne	.L279
 3428              	.L264:
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  /tmp/cczJWHrP.s 			page 113


 3429              		.loc 1 1544 0 is_stmt 1
 3430 001e 0028     		cmp	r0, #0
 3431 0020 67D0     		beq	.L266
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3432              		.loc 1 1544 0 is_stmt 0 discriminator 1
 3433 0022 12F00102 		ands	r2, r2, #1
 3434              	.LVL310:
 3435 0026 02D1     		bne	.L267
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3436              		.loc 1 1544 0 discriminator 2
 3437 0028 11F4907F 		tst	r1, #288
 3438 002c 61D0     		beq	.L266
 3439              	.L267:
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3440              		.loc 1 1547 0 is_stmt 1
 3441 002e 13F0010F 		tst	r3, #1
 3442 0032 06D0     		beq	.L268
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3443              		.loc 1 1547 0 is_stmt 0 discriminator 1
 3444 0034 11F4807F 		tst	r1, #256
 3445 0038 03D0     		beq	.L268
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3446              		.loc 1 1549 0 is_stmt 1
 3447 003a E06B     		ldr	r0, [r4, #60]
 3448              	.LVL311:
 3449 003c 40F00100 		orr	r0, r0, #1
 3450 0040 E063     		str	r0, [r4, #60]
 3451              	.L268:
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3452              		.loc 1 1553 0
 3453 0042 13F0040F 		tst	r3, #4
 3454 0046 04D0     		beq	.L269
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3455              		.loc 1 1553 0 is_stmt 0 discriminator 1
 3456 0048 1AB1     		cbz	r2, .L269
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3457              		.loc 1 1555 0 is_stmt 1
 3458 004a E06B     		ldr	r0, [r4, #60]
 3459 004c 40F00200 		orr	r0, r0, #2
 3460 0050 E063     		str	r0, [r4, #60]
 3461              	.L269:
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3462              		.loc 1 1559 0
 3463 0052 13F0020F 		tst	r3, #2
 3464 0056 04D0     		beq	.L270
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3465              		.loc 1 1559 0 is_stmt 0 discriminator 1
 3466 0058 1AB1     		cbz	r2, .L270
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3467              		.loc 1 1561 0 is_stmt 1
 3468 005a E06B     		ldr	r0, [r4, #60]
 3469 005c 40F00400 		orr	r0, r0, #4
 3470 0060 E063     		str	r0, [r4, #60]
 3471              	.L270:
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 3472              		.loc 1 1565 0
 3473 0062 13F0080F 		tst	r3, #8
ARM GAS  /tmp/cczJWHrP.s 			page 114


 3474 0066 04D0     		beq	.L271
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     { 
 3475              		.loc 1 1565 0 is_stmt 0 discriminator 1
 3476 0068 1AB1     		cbz	r2, .L271
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3477              		.loc 1 1567 0 is_stmt 1
 3478 006a E26B     		ldr	r2, [r4, #60]
 3479 006c 42F00802 		orr	r2, r2, #8
 3480 0070 E263     		str	r2, [r4, #60]
 3481              	.L271:
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3482              		.loc 1 1571 0
 3483 0072 E26B     		ldr	r2, [r4, #60]
 3484 0074 002A     		cmp	r2, #0
 3485 0076 48D0     		beq	.L263
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3486              		.loc 1 1574 0
 3487 0078 13F0200F 		tst	r3, #32
 3488 007c 02D0     		beq	.L272
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3489              		.loc 1 1574 0 is_stmt 0 discriminator 1
 3490 007e 11F0200F 		tst	r1, #32
 3491 0082 24D1     		bne	.L280
 3492              	.LVL312:
 3493              	.L272:
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if(((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 3494              		.loc 1 1581 0 is_stmt 1
 3495 0084 2368     		ldr	r3, [r4]
 3496 0086 5B69     		ldr	r3, [r3, #20]
 3497 0088 03F04003 		and	r3, r3, #64
 3498              	.LVL313:
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3499              		.loc 1 1582 0
 3500 008c E26B     		ldr	r2, [r4, #60]
 3501 008e 12F0080F 		tst	r2, #8
 3502 0092 00D1     		bne	.L273
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3503              		.loc 1 1582 0 is_stmt 0 discriminator 1
 3504 0094 3BB3     		cbz	r3, .L274
 3505              	.L273:
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         
 3506              		.loc 1 1587 0 is_stmt 1
 3507 0096 2046     		mov	r0, r4
 3508 0098 FFF7FEFF 		bl	UART_EndRxTransfer
 3509              	.LVL314:
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 3510              		.loc 1 1590 0
 3511 009c 2368     		ldr	r3, [r4]
 3512 009e 5A69     		ldr	r2, [r3, #20]
 3513 00a0 12F0400F 		tst	r2, #64
 3514 00a4 1BD0     		beq	.L275
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           
 3515              		.loc 1 1592 0
 3516 00a6 5A69     		ldr	r2, [r3, #20]
 3517 00a8 22F04002 		bic	r2, r2, #64
 3518 00ac 5A61     		str	r2, [r3, #20]
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
ARM GAS  /tmp/cczJWHrP.s 			page 115


 3519              		.loc 1 1595 0
 3520 00ae 636B     		ldr	r3, [r4, #52]
 3521 00b0 8BB1     		cbz	r3, .L276
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if(HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3522              		.loc 1 1599 0
 3523 00b2 1A4A     		ldr	r2, .L283
 3524 00b4 1A65     		str	r2, [r3, #80]
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
 3525              		.loc 1 1600 0
 3526 00b6 606B     		ldr	r0, [r4, #52]
 3527 00b8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3528              	.LVL315:
 3529 00bc 28B3     		cbz	r0, .L263
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
 3530              		.loc 1 1603 0
 3531 00be 606B     		ldr	r0, [r4, #52]
 3532 00c0 036D     		ldr	r3, [r0, #80]
 3533 00c2 9847     		blx	r3
 3534              	.LVL316:
 3535 00c4 10BD     		pop	{r4, pc}
 3536              	.LVL317:
 3537              	.L279:
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 3538              		.loc 1 1538 0
 3539 00c6 2046     		mov	r0, r4
 3540              	.LVL318:
 3541 00c8 FFF7FEFF 		bl	UART_Receive_IT
 3542              	.LVL319:
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3543              		.loc 1 1539 0
 3544 00cc 10BD     		pop	{r4, pc}
 3545              	.LVL320:
 3546              	.L280:
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3547              		.loc 1 1576 0
 3548 00ce 2046     		mov	r0, r4
 3549 00d0 FFF7FEFF 		bl	UART_Receive_IT
 3550              	.LVL321:
 3551 00d4 D6E7     		b	.L272
 3552              	.LVL322:
 3553              	.L276:
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
 3554              		.loc 1 1609 0
 3555 00d6 2046     		mov	r0, r4
 3556 00d8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3557              	.LVL323:
 3558 00dc 10BD     		pop	{r4, pc}
 3559              	.LVL324:
 3560              	.L275:
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
 3561              		.loc 1 1615 0
 3562 00de 2046     		mov	r0, r4
 3563 00e0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3564              	.LVL325:
 3565 00e4 10BD     		pop	{r4, pc}
 3566              	.LVL326:
 3567              	.L274:
ARM GAS  /tmp/cczJWHrP.s 			page 116


1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3568              		.loc 1 1622 0
 3569 00e6 2046     		mov	r0, r4
 3570 00e8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3571              	.LVL327:
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3572              		.loc 1 1623 0
 3573 00ec 0023     		movs	r3, #0
 3574 00ee E363     		str	r3, [r4, #60]
 3575 00f0 10BD     		pop	{r4, pc}
 3576              	.LVL328:
 3577              	.L266:
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3578              		.loc 1 1630 0
 3579 00f2 13F0800F 		tst	r3, #128
 3580 00f6 02D0     		beq	.L277
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3581              		.loc 1 1630 0 is_stmt 0 discriminator 1
 3582 00f8 11F0800F 		tst	r1, #128
 3583 00fc 06D1     		bne	.L281
 3584              	.L277:
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3585              		.loc 1 1637 0 is_stmt 1
 3586 00fe 13F0400F 		tst	r3, #64
 3587 0102 02D0     		beq	.L263
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3588              		.loc 1 1637 0 is_stmt 0 discriminator 1
 3589 0104 11F0400F 		tst	r1, #64
 3590 0108 04D1     		bne	.L282
 3591              	.LVL329:
 3592              	.L263:
 3593 010a 10BD     		pop	{r4, pc}
 3594              	.LVL330:
 3595              	.L281:
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3596              		.loc 1 1632 0 is_stmt 1
 3597 010c 2046     		mov	r0, r4
 3598              	.LVL331:
 3599 010e FFF7FEFF 		bl	UART_Transmit_IT
 3600              	.LVL332:
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3601              		.loc 1 1633 0
 3602 0112 10BD     		pop	{r4, pc}
 3603              	.LVL333:
 3604              	.L282:
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 3605              		.loc 1 1639 0
 3606 0114 2046     		mov	r0, r4
 3607              	.LVL334:
 3608 0116 FFF7FEFF 		bl	UART_EndTransmit_IT
 3609              	.LVL335:
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3610              		.loc 1 1640 0
 3611 011a F6E7     		b	.L263
 3612              	.L284:
 3613              		.align	2
 3614              	.L283:
ARM GAS  /tmp/cczJWHrP.s 			page 117


 3615 011c 00000000 		.word	UART_DMAAbortOnError
 3616              		.cfi_endproc
 3617              	.LFE145:
 3619              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 3620              		.align	1
 3621              		.syntax unified
 3622              		.thumb
 3623              		.thumb_func
 3624              		.fpu fpv4-sp-d16
 3626              	UART_DMAAbortOnError:
 3627              	.LFB169:
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3628              		.loc 1 2172 0
 3629              		.cfi_startproc
 3630              		@ args = 0, pretend = 0, frame = 0
 3631              		@ frame_needed = 0, uses_anonymous_args = 0
 3632              	.LVL336:
 3633 0000 08B5     		push	{r3, lr}
 3634              	.LCFI39:
 3635              		.cfi_def_cfa_offset 8
 3636              		.cfi_offset 3, -8
 3637              		.cfi_offset 14, -4
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3638              		.loc 1 2173 0
 3639 0002 806B     		ldr	r0, [r0, #56]
 3640              	.LVL337:
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 3641              		.loc 1 2174 0
 3642 0004 0023     		movs	r3, #0
 3643 0006 C385     		strh	r3, [r0, #46]	@ movhi
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3644              		.loc 1 2175 0
 3645 0008 C384     		strh	r3, [r0, #38]	@ movhi
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3646              		.loc 1 2177 0
 3647 000a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 3648              	.LVL338:
 3649 000e 08BD     		pop	{r3, pc}
 3650              		.cfi_endproc
 3651              	.LFE169:
 3653              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 3654              		.align	1
 3655              		.weak	HAL_UART_AbortCpltCallback
 3656              		.syntax unified
 3657              		.thumb
 3658              		.thumb_func
 3659              		.fpu fpv4-sp-d16
 3661              	HAL_UART_AbortCpltCallback:
 3662              	.LFB151:
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3663              		.loc 1 1725 0
 3664              		.cfi_startproc
 3665              		@ args = 0, pretend = 0, frame = 0
 3666              		@ frame_needed = 0, uses_anonymous_args = 0
 3667              		@ link register save eliminated.
 3668              	.LVL339:
 3669 0000 7047     		bx	lr
ARM GAS  /tmp/cczJWHrP.s 			page 118


 3670              		.cfi_endproc
 3671              	.LFE151:
 3673              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 3674              		.align	1
 3675              		.global	HAL_UART_Abort_IT
 3676              		.syntax unified
 3677              		.thumb
 3678              		.thumb_func
 3679              		.fpu fpv4-sp-d16
 3681              	HAL_UART_Abort_IT:
 3682              	.LFB142:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3683              		.loc 1 1279 0
 3684              		.cfi_startproc
 3685              		@ args = 0, pretend = 0, frame = 0
 3686              		@ frame_needed = 0, uses_anonymous_args = 0
 3687              	.LVL340:
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 3688              		.loc 1 1279 0
 3689 0000 10B5     		push	{r4, lr}
 3690              	.LCFI40:
 3691              		.cfi_def_cfa_offset 8
 3692              		.cfi_offset 4, -8
 3693              		.cfi_offset 14, -4
 3694 0002 0446     		mov	r4, r0
 3695              	.LVL341:
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3696              		.loc 1 1283 0
 3697 0004 0268     		ldr	r2, [r0]
 3698 0006 D368     		ldr	r3, [r2, #12]
 3699 0008 23F4F073 		bic	r3, r3, #480
 3700 000c D360     		str	r3, [r2, #12]
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3701              		.loc 1 1284 0
 3702 000e 0268     		ldr	r2, [r0]
 3703 0010 5369     		ldr	r3, [r2, #20]
 3704 0012 23F00103 		bic	r3, r3, #1
 3705 0016 5361     		str	r3, [r2, #20]
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3706              		.loc 1 1289 0
 3707 0018 036B     		ldr	r3, [r0, #48]
 3708 001a 33B1     		cbz	r3, .L289
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3709              		.loc 1 1293 0
 3710 001c 0268     		ldr	r2, [r0]
 3711 001e 5269     		ldr	r2, [r2, #20]
 3712 0020 12F0800F 		tst	r2, #128
 3713 0024 1DD0     		beq	.L290
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3714              		.loc 1 1295 0
 3715 0026 264A     		ldr	r2, .L302
 3716 0028 1A65     		str	r2, [r3, #80]
 3717              	.L289:
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3718              		.loc 1 1303 0
 3719 002a 636B     		ldr	r3, [r4, #52]
 3720 002c 33B1     		cbz	r3, .L291
ARM GAS  /tmp/cczJWHrP.s 			page 119


1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3721              		.loc 1 1307 0
 3722 002e 2268     		ldr	r2, [r4]
 3723 0030 5269     		ldr	r2, [r2, #20]
 3724 0032 12F0400F 		tst	r2, #64
 3725 0036 17D0     		beq	.L292
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3726              		.loc 1 1309 0
 3727 0038 224A     		ldr	r2, .L302+4
 3728 003a 1A65     		str	r2, [r3, #80]
 3729              	.L291:
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3730              		.loc 1 1318 0
 3731 003c 2368     		ldr	r3, [r4]
 3732 003e 5A69     		ldr	r2, [r3, #20]
 3733 0040 12F0800F 		tst	r2, #128
 3734 0044 13D0     		beq	.L296
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3735              		.loc 1 1321 0
 3736 0046 5A69     		ldr	r2, [r3, #20]
 3737 0048 22F08002 		bic	r2, r2, #128
 3738 004c 5A61     		str	r2, [r3, #20]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3739              		.loc 1 1324 0
 3740 004e 206B     		ldr	r0, [r4, #48]
 3741              	.LVL342:
 3742 0050 18B3     		cbz	r0, .L297
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3743              		.loc 1 1330 0
 3744 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3745              	.LVL343:
 3746 0056 10B3     		cbz	r0, .L298
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3747              		.loc 1 1332 0
 3748 0058 236B     		ldr	r3, [r4, #48]
 3749 005a 0022     		movs	r2, #0
 3750 005c 1A65     		str	r2, [r3, #80]
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3751              		.loc 1 1280 0
 3752 005e 0122     		movs	r2, #1
 3753 0060 06E0     		b	.L293
 3754              	.LVL344:
 3755              	.L290:
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3756              		.loc 1 1299 0
 3757 0062 0022     		movs	r2, #0
 3758 0064 1A65     		str	r2, [r3, #80]
 3759 0066 E0E7     		b	.L289
 3760              	.L292:
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 3761              		.loc 1 1313 0
 3762 0068 0022     		movs	r2, #0
 3763 006a 1A65     		str	r2, [r3, #80]
 3764 006c E6E7     		b	.L291
 3765              	.L296:
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3766              		.loc 1 1280 0
ARM GAS  /tmp/cczJWHrP.s 			page 120


 3767 006e 0122     		movs	r2, #1
 3768              	.LVL345:
 3769              	.L293:
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3770              		.loc 1 1342 0
 3771 0070 2368     		ldr	r3, [r4]
 3772 0072 5969     		ldr	r1, [r3, #20]
 3773 0074 11F0400F 		tst	r1, #64
 3774 0078 0CD0     		beq	.L294
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3775              		.loc 1 1344 0
 3776 007a 5969     		ldr	r1, [r3, #20]
 3777 007c 21F04001 		bic	r1, r1, #64
 3778 0080 5961     		str	r1, [r3, #20]
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3779              		.loc 1 1347 0
 3780 0082 606B     		ldr	r0, [r4, #52]
 3781 0084 30B1     		cbz	r0, .L294
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 3782              		.loc 1 1353 0
 3783 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3784              	.LVL346:
 3785 008a 50B1     		cbz	r0, .L299
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 3786              		.loc 1 1355 0
 3787 008c 636B     		ldr	r3, [r4, #52]
 3788 008e 0022     		movs	r2, #0
 3789 0090 1A65     		str	r2, [r3, #80]
 3790              	.LVL347:
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3791              		.loc 1 1356 0
 3792 0092 0122     		movs	r2, #1
 3793              	.LVL348:
 3794              	.L294:
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3795              		.loc 1 1366 0
 3796 0094 3AB9     		cbnz	r2, .L301
 3797              	.LVL349:
 3798              	.L295:
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3799              		.loc 1 1384 0
 3800 0096 0020     		movs	r0, #0
 3801 0098 10BD     		pop	{r4, pc}
 3802              	.LVL350:
 3803              	.L297:
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3804              		.loc 1 1280 0
 3805 009a 0122     		movs	r2, #1
 3806 009c E8E7     		b	.L293
 3807              	.L298:
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 3808              		.loc 1 1336 0
 3809 009e 0022     		movs	r2, #0
 3810 00a0 E6E7     		b	.L293
 3811              	.LVL351:
 3812              	.L299:
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
ARM GAS  /tmp/cczJWHrP.s 			page 121


 3813              		.loc 1 1360 0
 3814 00a2 0022     		movs	r2, #0
 3815 00a4 F6E7     		b	.L294
 3816              	.LVL352:
 3817              	.L301:
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 3818              		.loc 1 1369 0
 3819 00a6 0023     		movs	r3, #0
 3820 00a8 E384     		strh	r3, [r4, #38]	@ movhi
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3821              		.loc 1 1370 0
 3822 00aa E385     		strh	r3, [r4, #46]	@ movhi
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3823              		.loc 1 1373 0
 3824 00ac E363     		str	r3, [r4, #60]
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3825              		.loc 1 1376 0
 3826 00ae 2023     		movs	r3, #32
 3827 00b0 84F83930 		strb	r3, [r4, #57]
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3828              		.loc 1 1377 0
 3829 00b4 84F83A30 		strb	r3, [r4, #58]
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 3830              		.loc 1 1380 0
 3831 00b8 2046     		mov	r0, r4
 3832 00ba FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3833              	.LVL353:
 3834 00be EAE7     		b	.L295
 3835              	.L303:
 3836              		.align	2
 3837              	.L302:
 3838 00c0 00000000 		.word	UART_DMATxAbortCallback
 3839 00c4 00000000 		.word	UART_DMARxAbortCallback
 3840              		.cfi_endproc
 3841              	.LFE142:
 3843              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 3844              		.align	1
 3845              		.syntax unified
 3846              		.thumb
 3847              		.thumb_func
 3848              		.fpu fpv4-sp-d16
 3850              	UART_DMARxAbortCallback:
 3851              	.LFB171:
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3852              		.loc 1 2227 0
 3853              		.cfi_startproc
 3854              		@ args = 0, pretend = 0, frame = 0
 3855              		@ frame_needed = 0, uses_anonymous_args = 0
 3856              	.LVL354:
 3857 0000 08B5     		push	{r3, lr}
 3858              	.LCFI41:
 3859              		.cfi_def_cfa_offset 8
 3860              		.cfi_offset 3, -8
 3861              		.cfi_offset 14, -4
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3862              		.loc 1 2228 0
 3863 0002 806B     		ldr	r0, [r0, #56]
ARM GAS  /tmp/cczJWHrP.s 			page 122


 3864              	.LVL355:
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3865              		.loc 1 2230 0
 3866 0004 436B     		ldr	r3, [r0, #52]
 3867 0006 0022     		movs	r2, #0
 3868 0008 1A65     		str	r2, [r3, #80]
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3869              		.loc 1 2233 0
 3870 000a 036B     		ldr	r3, [r0, #48]
 3871 000c 13B1     		cbz	r3, .L305
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3872              		.loc 1 2235 0
 3873 000e 1B6D     		ldr	r3, [r3, #80]
 3874 0010 03B1     		cbz	r3, .L305
 3875              	.LVL356:
 3876              	.L304:
 3877 0012 08BD     		pop	{r3, pc}
 3878              	.LVL357:
 3879              	.L305:
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3880              		.loc 1 2242 0
 3881 0014 0023     		movs	r3, #0
 3882 0016 C384     		strh	r3, [r0, #38]	@ movhi
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3883              		.loc 1 2243 0
 3884 0018 C385     		strh	r3, [r0, #46]	@ movhi
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3885              		.loc 1 2246 0
 3886 001a C363     		str	r3, [r0, #60]
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3887              		.loc 1 2249 0
 3888 001c 2023     		movs	r3, #32
 3889 001e 80F83930 		strb	r3, [r0, #57]
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3890              		.loc 1 2250 0
 3891 0022 80F83A30 		strb	r3, [r0, #58]
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3892              		.loc 1 2253 0
 3893 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3894              	.LVL358:
 3895 002a F2E7     		b	.L304
 3896              		.cfi_endproc
 3897              	.LFE171:
 3899              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 3900              		.align	1
 3901              		.syntax unified
 3902              		.thumb
 3903              		.thumb_func
 3904              		.fpu fpv4-sp-d16
 3906              	UART_DMATxAbortCallback:
 3907              	.LFB170:
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3908              		.loc 1 2189 0
 3909              		.cfi_startproc
 3910              		@ args = 0, pretend = 0, frame = 0
 3911              		@ frame_needed = 0, uses_anonymous_args = 0
 3912              	.LVL359:
ARM GAS  /tmp/cczJWHrP.s 			page 123


 3913 0000 08B5     		push	{r3, lr}
 3914              	.LCFI42:
 3915              		.cfi_def_cfa_offset 8
 3916              		.cfi_offset 3, -8
 3917              		.cfi_offset 14, -4
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 3918              		.loc 1 2190 0
 3919 0002 806B     		ldr	r0, [r0, #56]
 3920              	.LVL360:
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3921              		.loc 1 2192 0
 3922 0004 036B     		ldr	r3, [r0, #48]
 3923 0006 0022     		movs	r2, #0
 3924 0008 1A65     		str	r2, [r3, #80]
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 3925              		.loc 1 2195 0
 3926 000a 436B     		ldr	r3, [r0, #52]
 3927 000c 13B1     		cbz	r3, .L309
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 3928              		.loc 1 2197 0
 3929 000e 1B6D     		ldr	r3, [r3, #80]
 3930 0010 03B1     		cbz	r3, .L309
 3931              	.LVL361:
 3932              	.L308:
 3933 0012 08BD     		pop	{r3, pc}
 3934              	.LVL362:
 3935              	.L309:
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3936              		.loc 1 2204 0
 3937 0014 0023     		movs	r3, #0
 3938 0016 C384     		strh	r3, [r0, #38]	@ movhi
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3939              		.loc 1 2205 0
 3940 0018 C385     		strh	r3, [r0, #46]	@ movhi
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3941              		.loc 1 2208 0
 3942 001a C363     		str	r3, [r0, #60]
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3943              		.loc 1 2211 0
 3944 001c 2023     		movs	r3, #32
 3945 001e 80F83930 		strb	r3, [r0, #57]
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3946              		.loc 1 2212 0
 3947 0022 80F83A30 		strb	r3, [r0, #58]
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3948              		.loc 1 2215 0
 3949 0026 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3950              	.LVL363:
 3951 002a F2E7     		b	.L308
 3952              		.cfi_endproc
 3953              	.LFE170:
 3955              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3956              		.align	1
 3957              		.weak	HAL_UART_AbortTransmitCpltCallback
 3958              		.syntax unified
 3959              		.thumb
 3960              		.thumb_func
ARM GAS  /tmp/cczJWHrP.s 			page 124


 3961              		.fpu fpv4-sp-d16
 3963              	HAL_UART_AbortTransmitCpltCallback:
 3964              	.LFB152:
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3965              		.loc 1 1739 0
 3966              		.cfi_startproc
 3967              		@ args = 0, pretend = 0, frame = 0
 3968              		@ frame_needed = 0, uses_anonymous_args = 0
 3969              		@ link register save eliminated.
 3970              	.LVL364:
 3971 0000 7047     		bx	lr
 3972              		.cfi_endproc
 3973              	.LFE152:
 3975              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3976              		.align	1
 3977              		.global	HAL_UART_AbortTransmit_IT
 3978              		.syntax unified
 3979              		.thumb
 3980              		.thumb_func
 3981              		.fpu fpv4-sp-d16
 3983              	HAL_UART_AbortTransmit_IT:
 3984              	.LFB143:
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3985              		.loc 1 1401 0
 3986              		.cfi_startproc
 3987              		@ args = 0, pretend = 0, frame = 0
 3988              		@ frame_needed = 0, uses_anonymous_args = 0
 3989              	.LVL365:
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 3990              		.loc 1 1401 0
 3991 0000 10B5     		push	{r4, lr}
 3992              	.LCFI43:
 3993              		.cfi_def_cfa_offset 8
 3994              		.cfi_offset 4, -8
 3995              		.cfi_offset 14, -4
 3996 0002 0446     		mov	r4, r0
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 3997              		.loc 1 1403 0
 3998 0004 0268     		ldr	r2, [r0]
 3999 0006 D368     		ldr	r3, [r2, #12]
 4000 0008 23F0C003 		bic	r3, r3, #192
 4001 000c D360     		str	r3, [r2, #12]
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4002              		.loc 1 1406 0
 4003 000e 0368     		ldr	r3, [r0]
 4004 0010 5A69     		ldr	r2, [r3, #20]
 4005 0012 12F0800F 		tst	r2, #128
 4006 0016 19D0     		beq	.L314
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4007              		.loc 1 1408 0
 4008 0018 5A69     		ldr	r2, [r3, #20]
 4009 001a 22F08002 		bic	r2, r2, #128
 4010 001e 5A61     		str	r2, [r3, #20]
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4011              		.loc 1 1411 0
 4012 0020 036B     		ldr	r3, [r0, #48]
 4013 0022 5BB1     		cbz	r3, .L315
ARM GAS  /tmp/cczJWHrP.s 			page 125


1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4014              		.loc 1 1415 0
 4015 0024 0D4A     		ldr	r2, .L319
 4016 0026 1A65     		str	r2, [r3, #80]
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4017              		.loc 1 1418 0
 4018 0028 006B     		ldr	r0, [r0, #48]
 4019              	.LVL366:
 4020 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4021              	.LVL367:
 4022 002e 08B9     		cbnz	r0, .L318
 4023              	.L316:
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4024              		.loc 1 1449 0
 4025 0030 0020     		movs	r0, #0
 4026 0032 10BD     		pop	{r4, pc}
 4027              	.LVL368:
 4028              	.L318:
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4029              		.loc 1 1421 0
 4030 0034 206B     		ldr	r0, [r4, #48]
 4031 0036 036D     		ldr	r3, [r0, #80]
 4032 0038 9847     		blx	r3
 4033              	.LVL369:
 4034 003a F9E7     		b	.L316
 4035              	.LVL370:
 4036              	.L315:
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4037              		.loc 1 1427 0
 4038 003c 0023     		movs	r3, #0
 4039 003e C384     		strh	r3, [r0, #38]	@ movhi
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4040              		.loc 1 1430 0
 4041 0040 2023     		movs	r3, #32
 4042 0042 80F83930 		strb	r3, [r0, #57]
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4043              		.loc 1 1433 0
 4044 0046 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4045              	.LVL371:
 4046 004a F1E7     		b	.L316
 4047              	.LVL372:
 4048              	.L314:
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4049              		.loc 1 1439 0
 4050 004c 0023     		movs	r3, #0
 4051 004e C384     		strh	r3, [r0, #38]	@ movhi
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4052              		.loc 1 1442 0
 4053 0050 2023     		movs	r3, #32
 4054 0052 80F83930 		strb	r3, [r0, #57]
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 4055              		.loc 1 1445 0
 4056 0056 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4057              	.LVL373:
 4058 005a E9E7     		b	.L316
 4059              	.L320:
 4060              		.align	2
ARM GAS  /tmp/cczJWHrP.s 			page 126


 4061              	.L319:
 4062 005c 00000000 		.word	UART_DMATxOnlyAbortCallback
 4063              		.cfi_endproc
 4064              	.LFE143:
 4066              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 4067              		.align	1
 4068              		.syntax unified
 4069              		.thumb
 4070              		.thumb_func
 4071              		.fpu fpv4-sp-d16
 4073              	UART_DMATxOnlyAbortCallback:
 4074              	.LFB172:
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4075              		.loc 1 2265 0
 4076              		.cfi_startproc
 4077              		@ args = 0, pretend = 0, frame = 0
 4078              		@ frame_needed = 0, uses_anonymous_args = 0
 4079              	.LVL374:
 4080 0000 08B5     		push	{r3, lr}
 4081              	.LCFI44:
 4082              		.cfi_def_cfa_offset 8
 4083              		.cfi_offset 3, -8
 4084              		.cfi_offset 14, -4
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4085              		.loc 1 2266 0
 4086 0002 806B     		ldr	r0, [r0, #56]
 4087              	.LVL375:
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4088              		.loc 1 2268 0
 4089 0004 0023     		movs	r3, #0
 4090 0006 C384     		strh	r3, [r0, #38]	@ movhi
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4091              		.loc 1 2271 0
 4092 0008 2023     		movs	r3, #32
 4093 000a 80F83930 		strb	r3, [r0, #57]
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4094              		.loc 1 2274 0
 4095 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4096              	.LVL376:
 4097 0012 08BD     		pop	{r3, pc}
 4098              		.cfi_endproc
 4099              	.LFE172:
 4101              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4102              		.align	1
 4103              		.weak	HAL_UART_AbortReceiveCpltCallback
 4104              		.syntax unified
 4105              		.thumb
 4106              		.thumb_func
 4107              		.fpu fpv4-sp-d16
 4109              	HAL_UART_AbortReceiveCpltCallback:
 4110              	.LFB153:
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 4111              		.loc 1 1754 0
 4112              		.cfi_startproc
 4113              		@ args = 0, pretend = 0, frame = 0
 4114              		@ frame_needed = 0, uses_anonymous_args = 0
 4115              		@ link register save eliminated.
ARM GAS  /tmp/cczJWHrP.s 			page 127


 4116              	.LVL377:
 4117 0000 7047     		bx	lr
 4118              		.cfi_endproc
 4119              	.LFE153:
 4121              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4122              		.align	1
 4123              		.global	HAL_UART_AbortReceive_IT
 4124              		.syntax unified
 4125              		.thumb
 4126              		.thumb_func
 4127              		.fpu fpv4-sp-d16
 4129              	HAL_UART_AbortReceive_IT:
 4130              	.LFB144:
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 4131              		.loc 1 1466 0
 4132              		.cfi_startproc
 4133              		@ args = 0, pretend = 0, frame = 0
 4134              		@ frame_needed = 0, uses_anonymous_args = 0
 4135              	.LVL378:
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 4136              		.loc 1 1466 0
 4137 0000 10B5     		push	{r4, lr}
 4138              	.LCFI45:
 4139              		.cfi_def_cfa_offset 8
 4140              		.cfi_offset 4, -8
 4141              		.cfi_offset 14, -4
 4142 0002 0446     		mov	r4, r0
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4143              		.loc 1 1468 0
 4144 0004 0268     		ldr	r2, [r0]
 4145 0006 D368     		ldr	r3, [r2, #12]
 4146 0008 23F49073 		bic	r3, r3, #288
 4147 000c D360     		str	r3, [r2, #12]
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4148              		.loc 1 1469 0
 4149 000e 0268     		ldr	r2, [r0]
 4150 0010 5369     		ldr	r3, [r2, #20]
 4151 0012 23F00103 		bic	r3, r3, #1
 4152 0016 5361     		str	r3, [r2, #20]
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 4153              		.loc 1 1472 0
 4154 0018 0368     		ldr	r3, [r0]
 4155 001a 5A69     		ldr	r2, [r3, #20]
 4156 001c 12F0400F 		tst	r2, #64
 4157 0020 19D0     		beq	.L325
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4158              		.loc 1 1474 0
 4159 0022 5A69     		ldr	r2, [r3, #20]
 4160 0024 22F04002 		bic	r2, r2, #64
 4161 0028 5A61     		str	r2, [r3, #20]
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 4162              		.loc 1 1477 0
 4163 002a 436B     		ldr	r3, [r0, #52]
 4164 002c 5BB1     		cbz	r3, .L326
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4165              		.loc 1 1481 0
 4166 002e 0E4A     		ldr	r2, .L330
ARM GAS  /tmp/cczJWHrP.s 			page 128


 4167 0030 1A65     		str	r2, [r3, #80]
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
 4168              		.loc 1 1484 0
 4169 0032 406B     		ldr	r0, [r0, #52]
 4170              	.LVL379:
 4171 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4172              	.LVL380:
 4173 0038 08B9     		cbnz	r0, .L329
 4174              	.L327:
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4175              		.loc 1 1515 0
 4176 003a 0020     		movs	r0, #0
 4177 003c 10BD     		pop	{r4, pc}
 4178              	.LVL381:
 4179              	.L329:
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
 4180              		.loc 1 1487 0
 4181 003e 606B     		ldr	r0, [r4, #52]
 4182 0040 036D     		ldr	r3, [r0, #80]
 4183 0042 9847     		blx	r3
 4184              	.LVL382:
 4185 0044 F9E7     		b	.L327
 4186              	.LVL383:
 4187              	.L326:
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4188              		.loc 1 1493 0
 4189 0046 0023     		movs	r3, #0
 4190 0048 C385     		strh	r3, [r0, #46]	@ movhi
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4191              		.loc 1 1496 0
 4192 004a 2023     		movs	r3, #32
 4193 004c 80F83A30 		strb	r3, [r0, #58]
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 4194              		.loc 1 1499 0
 4195 0050 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4196              	.LVL384:
 4197 0054 F1E7     		b	.L327
 4198              	.LVL385:
 4199              	.L325:
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4200              		.loc 1 1505 0
 4201 0056 0023     		movs	r3, #0
 4202 0058 C385     		strh	r3, [r0, #46]	@ movhi
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4203              		.loc 1 1508 0
 4204 005a 2023     		movs	r3, #32
 4205 005c 80F83A30 		strb	r3, [r0, #58]
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 4206              		.loc 1 1511 0
 4207 0060 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4208              	.LVL386:
 4209 0064 E9E7     		b	.L327
 4210              	.L331:
 4211 0066 00BF     		.align	2
 4212              	.L330:
 4213 0068 00000000 		.word	UART_DMARxOnlyAbortCallback
 4214              		.cfi_endproc
ARM GAS  /tmp/cczJWHrP.s 			page 129


 4215              	.LFE144:
 4217              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 4218              		.align	1
 4219              		.syntax unified
 4220              		.thumb
 4221              		.thumb_func
 4222              		.fpu fpv4-sp-d16
 4224              	UART_DMARxOnlyAbortCallback:
 4225              	.LFB173:
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef* huart = ( UART_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 4226              		.loc 1 2286 0
 4227              		.cfi_startproc
 4228              		@ args = 0, pretend = 0, frame = 0
 4229              		@ frame_needed = 0, uses_anonymous_args = 0
 4230              	.LVL387:
 4231 0000 08B5     		push	{r3, lr}
 4232              	.LCFI46:
 4233              		.cfi_def_cfa_offset 8
 4234              		.cfi_offset 3, -8
 4235              		.cfi_offset 14, -4
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4236              		.loc 1 2287 0
 4237 0002 806B     		ldr	r0, [r0, #56]
 4238              	.LVL388:
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4239              		.loc 1 2289 0
 4240 0004 0023     		movs	r3, #0
 4241 0006 C385     		strh	r3, [r0, #46]	@ movhi
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4242              		.loc 1 2292 0
 4243 0008 2023     		movs	r3, #32
 4244 000a 80F83A30 		strb	r3, [r0, #58]
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4245              		.loc 1 2295 0
 4246 000e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4247              	.LVL389:
 4248 0012 08BD     		pop	{r3, pc}
 4249              		.cfi_endproc
 4250              	.LFE173:
 4252              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4253              		.align	1
 4254              		.global	HAL_LIN_SendBreak
 4255              		.syntax unified
 4256              		.thumb
 4257              		.thumb_func
 4258              		.fpu fpv4-sp-d16
 4260              	HAL_LIN_SendBreak:
 4261              	.LFB154:
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 4262              		.loc 1 1791 0
 4263              		.cfi_startproc
 4264              		@ args = 0, pretend = 0, frame = 0
 4265              		@ frame_needed = 0, uses_anonymous_args = 0
 4266              	.LVL390:
 4267 0000 10B5     		push	{r4, lr}
 4268              	.LCFI47:
 4269              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cczJWHrP.s 			page 130


 4270              		.cfi_offset 4, -8
 4271              		.cfi_offset 14, -4
 4272 0002 0446     		mov	r4, r0
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4273              		.loc 1 1793 0
 4274 0004 0368     		ldr	r3, [r0]
 4275 0006 1A4A     		ldr	r2, .L339
 4276 0008 9342     		cmp	r3, r2
 4277 000a 18D0     		beq	.L335
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4278              		.loc 1 1793 0 is_stmt 0 discriminator 1
 4279 000c A2F54C42 		sub	r2, r2, #52224
 4280 0010 9342     		cmp	r3, r2
 4281 0012 14D0     		beq	.L335
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4282              		.loc 1 1793 0 discriminator 2
 4283 0014 02F58062 		add	r2, r2, #1024
 4284 0018 9342     		cmp	r3, r2
 4285 001a 10D0     		beq	.L335
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4286              		.loc 1 1793 0 discriminator 3
 4287 001c 02F58062 		add	r2, r2, #1024
 4288 0020 9342     		cmp	r3, r2
 4289 0022 0CD0     		beq	.L335
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4290              		.loc 1 1793 0 discriminator 4
 4291 0024 02F58062 		add	r2, r2, #1024
 4292 0028 9342     		cmp	r3, r2
 4293 002a 08D0     		beq	.L335
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4294              		.loc 1 1793 0 discriminator 5
 4295 002c 02F54442 		add	r2, r2, #50176
 4296 0030 9342     		cmp	r3, r2
 4297 0032 04D0     		beq	.L335
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4298              		.loc 1 1793 0 discriminator 6
 4299 0034 40F20171 		movw	r1, #1793
 4300 0038 0E48     		ldr	r0, .L339+4
 4301              	.LVL391:
 4302 003a FFF7FEFF 		bl	assert_failed
 4303              	.LVL392:
 4304              	.L335:
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4305              		.loc 1 1796 0 is_stmt 1
 4306 003e 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 4307 0042 012B     		cmp	r3, #1
 4308 0044 11D0     		beq	.L337
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4309              		.loc 1 1796 0 is_stmt 0 discriminator 2
 4310 0046 0123     		movs	r3, #1
 4311 0048 84F83830 		strb	r3, [r4, #56]
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4312              		.loc 1 1798 0 is_stmt 1 discriminator 2
 4313 004c 2423     		movs	r3, #36
 4314 004e 84F83930 		strb	r3, [r4, #57]
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 4315              		.loc 1 1801 0 discriminator 2
ARM GAS  /tmp/cczJWHrP.s 			page 131


 4316 0052 2268     		ldr	r2, [r4]
 4317 0054 D368     		ldr	r3, [r2, #12]
 4318 0056 43F00103 		orr	r3, r3, #1
 4319 005a D360     		str	r3, [r2, #12]
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4320              		.loc 1 1803 0 discriminator 2
 4321 005c 2023     		movs	r3, #32
 4322 005e 84F83930 		strb	r3, [r4, #57]
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4323              		.loc 1 1806 0 discriminator 2
 4324 0062 0020     		movs	r0, #0
 4325 0064 84F83800 		strb	r0, [r4, #56]
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4326              		.loc 1 1808 0 discriminator 2
 4327 0068 10BD     		pop	{r4, pc}
 4328              	.LVL393:
 4329              	.L337:
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4330              		.loc 1 1796 0
 4331 006a 0220     		movs	r0, #2
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4332              		.loc 1 1809 0
 4333 006c 10BD     		pop	{r4, pc}
 4334              	.LVL394:
 4335              	.L340:
 4336 006e 00BF     		.align	2
 4337              	.L339:
 4338 0070 00100140 		.word	1073811456
 4339 0074 00000000 		.word	.LC0
 4340              		.cfi_endproc
 4341              	.LFE154:
 4343              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4344              		.align	1
 4345              		.global	HAL_MultiProcessor_EnterMuteMode
 4346              		.syntax unified
 4347              		.thumb
 4348              		.thumb_func
 4349              		.fpu fpv4-sp-d16
 4351              	HAL_MultiProcessor_EnterMuteMode:
 4352              	.LFB155:
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 4353              		.loc 1 1818 0
 4354              		.cfi_startproc
 4355              		@ args = 0, pretend = 0, frame = 0
 4356              		@ frame_needed = 0, uses_anonymous_args = 0
 4357              	.LVL395:
 4358 0000 10B5     		push	{r4, lr}
 4359              	.LCFI48:
 4360              		.cfi_def_cfa_offset 8
 4361              		.cfi_offset 4, -8
 4362              		.cfi_offset 14, -4
 4363 0002 0446     		mov	r4, r0
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4364              		.loc 1 1820 0
 4365 0004 0368     		ldr	r3, [r0]
 4366 0006 1A4A     		ldr	r2, .L346
 4367 0008 9342     		cmp	r3, r2
ARM GAS  /tmp/cczJWHrP.s 			page 132


 4368 000a 18D0     		beq	.L342
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4369              		.loc 1 1820 0 is_stmt 0 discriminator 1
 4370 000c A2F54C42 		sub	r2, r2, #52224
 4371 0010 9342     		cmp	r3, r2
 4372 0012 14D0     		beq	.L342
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4373              		.loc 1 1820 0 discriminator 2
 4374 0014 02F58062 		add	r2, r2, #1024
 4375 0018 9342     		cmp	r3, r2
 4376 001a 10D0     		beq	.L342
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4377              		.loc 1 1820 0 discriminator 3
 4378 001c 02F58062 		add	r2, r2, #1024
 4379 0020 9342     		cmp	r3, r2
 4380 0022 0CD0     		beq	.L342
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4381              		.loc 1 1820 0 discriminator 4
 4382 0024 02F58062 		add	r2, r2, #1024
 4383 0028 9342     		cmp	r3, r2
 4384 002a 08D0     		beq	.L342
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4385              		.loc 1 1820 0 discriminator 5
 4386 002c 02F54442 		add	r2, r2, #50176
 4387 0030 9342     		cmp	r3, r2
 4388 0032 04D0     		beq	.L342
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4389              		.loc 1 1820 0 discriminator 6
 4390 0034 40F21C71 		movw	r1, #1820
 4391 0038 0E48     		ldr	r0, .L346+4
 4392              	.LVL396:
 4393 003a FFF7FEFF 		bl	assert_failed
 4394              	.LVL397:
 4395              	.L342:
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4396              		.loc 1 1823 0 is_stmt 1
 4397 003e 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 4398 0042 012B     		cmp	r3, #1
 4399 0044 11D0     		beq	.L344
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4400              		.loc 1 1823 0 is_stmt 0 discriminator 2
 4401 0046 0123     		movs	r3, #1
 4402 0048 84F83830 		strb	r3, [r4, #56]
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4403              		.loc 1 1825 0 is_stmt 1 discriminator 2
 4404 004c 2423     		movs	r3, #36
 4405 004e 84F83930 		strb	r3, [r4, #57]
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4406              		.loc 1 1828 0 discriminator 2
 4407 0052 2268     		ldr	r2, [r4]
 4408 0054 D368     		ldr	r3, [r2, #12]
 4409 0056 43F00203 		orr	r3, r3, #2
 4410 005a D360     		str	r3, [r2, #12]
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4411              		.loc 1 1830 0 discriminator 2
 4412 005c 2023     		movs	r3, #32
 4413 005e 84F83930 		strb	r3, [r4, #57]
ARM GAS  /tmp/cczJWHrP.s 			page 133


1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4414              		.loc 1 1833 0 discriminator 2
 4415 0062 0020     		movs	r0, #0
 4416 0064 84F83800 		strb	r0, [r4, #56]
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4417              		.loc 1 1835 0 discriminator 2
 4418 0068 10BD     		pop	{r4, pc}
 4419              	.LVL398:
 4420              	.L344:
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4421              		.loc 1 1823 0
 4422 006a 0220     		movs	r0, #2
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4423              		.loc 1 1836 0
 4424 006c 10BD     		pop	{r4, pc}
 4425              	.LVL399:
 4426              	.L347:
 4427 006e 00BF     		.align	2
 4428              	.L346:
 4429 0070 00100140 		.word	1073811456
 4430 0074 00000000 		.word	.LC0
 4431              		.cfi_endproc
 4432              	.LFE155:
 4434              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 4435              		.align	1
 4436              		.global	HAL_MultiProcessor_ExitMuteMode
 4437              		.syntax unified
 4438              		.thumb
 4439              		.thumb_func
 4440              		.fpu fpv4-sp-d16
 4442              	HAL_MultiProcessor_ExitMuteMode:
 4443              	.LFB156:
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 4444              		.loc 1 1845 0
 4445              		.cfi_startproc
 4446              		@ args = 0, pretend = 0, frame = 0
 4447              		@ frame_needed = 0, uses_anonymous_args = 0
 4448              	.LVL400:
 4449 0000 10B5     		push	{r4, lr}
 4450              	.LCFI49:
 4451              		.cfi_def_cfa_offset 8
 4452              		.cfi_offset 4, -8
 4453              		.cfi_offset 14, -4
 4454 0002 0446     		mov	r4, r0
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4455              		.loc 1 1847 0
 4456 0004 0368     		ldr	r3, [r0]
 4457 0006 1A4A     		ldr	r2, .L353
 4458 0008 9342     		cmp	r3, r2
 4459 000a 18D0     		beq	.L349
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4460              		.loc 1 1847 0 is_stmt 0 discriminator 1
 4461 000c A2F54C42 		sub	r2, r2, #52224
 4462 0010 9342     		cmp	r3, r2
 4463 0012 14D0     		beq	.L349
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4464              		.loc 1 1847 0 discriminator 2
ARM GAS  /tmp/cczJWHrP.s 			page 134


 4465 0014 02F58062 		add	r2, r2, #1024
 4466 0018 9342     		cmp	r3, r2
 4467 001a 10D0     		beq	.L349
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4468              		.loc 1 1847 0 discriminator 3
 4469 001c 02F58062 		add	r2, r2, #1024
 4470 0020 9342     		cmp	r3, r2
 4471 0022 0CD0     		beq	.L349
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4472              		.loc 1 1847 0 discriminator 4
 4473 0024 02F58062 		add	r2, r2, #1024
 4474 0028 9342     		cmp	r3, r2
 4475 002a 08D0     		beq	.L349
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4476              		.loc 1 1847 0 discriminator 5
 4477 002c 02F54442 		add	r2, r2, #50176
 4478 0030 9342     		cmp	r3, r2
 4479 0032 04D0     		beq	.L349
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4480              		.loc 1 1847 0 discriminator 6
 4481 0034 40F23771 		movw	r1, #1847
 4482 0038 0E48     		ldr	r0, .L353+4
 4483              	.LVL401:
 4484 003a FFF7FEFF 		bl	assert_failed
 4485              	.LVL402:
 4486              	.L349:
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4487              		.loc 1 1850 0 is_stmt 1
 4488 003e 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 4489 0042 012B     		cmp	r3, #1
 4490 0044 11D0     		beq	.L351
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4491              		.loc 1 1850 0 is_stmt 0 discriminator 2
 4492 0046 0123     		movs	r3, #1
 4493 0048 84F83830 		strb	r3, [r4, #56]
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4494              		.loc 1 1852 0 is_stmt 1 discriminator 2
 4495 004c 2423     		movs	r3, #36
 4496 004e 84F83930 		strb	r3, [r4, #57]
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4497              		.loc 1 1855 0 discriminator 2
 4498 0052 2268     		ldr	r2, [r4]
 4499 0054 D368     		ldr	r3, [r2, #12]
 4500 0056 23F00203 		bic	r3, r3, #2
 4501 005a D360     		str	r3, [r2, #12]
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4502              		.loc 1 1857 0 discriminator 2
 4503 005c 2023     		movs	r3, #32
 4504 005e 84F83930 		strb	r3, [r4, #57]
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4505              		.loc 1 1860 0 discriminator 2
 4506 0062 0020     		movs	r0, #0
 4507 0064 84F83800 		strb	r0, [r4, #56]
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4508              		.loc 1 1862 0 discriminator 2
 4509 0068 10BD     		pop	{r4, pc}
 4510              	.LVL403:
ARM GAS  /tmp/cczJWHrP.s 			page 135


 4511              	.L351:
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4512              		.loc 1 1850 0
 4513 006a 0220     		movs	r0, #2
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4514              		.loc 1 1863 0
 4515 006c 10BD     		pop	{r4, pc}
 4516              	.LVL404:
 4517              	.L354:
 4518 006e 00BF     		.align	2
 4519              	.L353:
 4520 0070 00100140 		.word	1073811456
 4521 0074 00000000 		.word	.LC0
 4522              		.cfi_endproc
 4523              	.LFE156:
 4525              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4526              		.align	1
 4527              		.global	HAL_HalfDuplex_EnableTransmitter
 4528              		.syntax unified
 4529              		.thumb
 4530              		.thumb_func
 4531              		.fpu fpv4-sp-d16
 4533              	HAL_HalfDuplex_EnableTransmitter:
 4534              	.LFB157:
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4535              		.loc 1 1872 0
 4536              		.cfi_startproc
 4537              		@ args = 0, pretend = 0, frame = 0
 4538              		@ frame_needed = 0, uses_anonymous_args = 0
 4539              		@ link register save eliminated.
 4540              	.LVL405:
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4541              		.loc 1 1876 0
 4542 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 4543 0004 012B     		cmp	r3, #1
 4544 0006 14D0     		beq	.L357
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4545              		.loc 1 1876 0 is_stmt 0 discriminator 2
 4546 0008 0123     		movs	r3, #1
 4547 000a 80F83830 		strb	r3, [r0, #56]
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4548              		.loc 1 1878 0 is_stmt 1 discriminator 2
 4549 000e 2423     		movs	r3, #36
 4550 0010 80F83930 		strb	r3, [r0, #57]
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4551              		.loc 1 1881 0 discriminator 2
 4552 0014 0268     		ldr	r2, [r0]
 4553 0016 D368     		ldr	r3, [r2, #12]
 4554              	.LVL406:
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4555              		.loc 1 1884 0 discriminator 2
 4556 0018 23F00C03 		bic	r3, r3, #12
 4557              	.LVL407:
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4558              		.loc 1 1887 0 discriminator 2
 4559 001c 43F00803 		orr	r3, r3, #8
 4560              	.LVL408:
ARM GAS  /tmp/cczJWHrP.s 			page 136


1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  
 4561              		.loc 1 1890 0 discriminator 2
 4562 0020 D360     		str	r3, [r2, #12]
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4563              		.loc 1 1892 0 discriminator 2
 4564 0022 2023     		movs	r3, #32
 4565              	.LVL409:
 4566 0024 80F83930 		strb	r3, [r0, #57]
 4567              	.LVL410:
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4568              		.loc 1 1895 0 discriminator 2
 4569 0028 0023     		movs	r3, #0
 4570 002a 80F83830 		strb	r3, [r0, #56]
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4571              		.loc 1 1897 0 discriminator 2
 4572 002e 1846     		mov	r0, r3
 4573              	.LVL411:
 4574 0030 7047     		bx	lr
 4575              	.LVL412:
 4576              	.L357:
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4577              		.loc 1 1876 0
 4578 0032 0220     		movs	r0, #2
 4579              	.LVL413:
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4580              		.loc 1 1898 0
 4581 0034 7047     		bx	lr
 4582              		.cfi_endproc
 4583              	.LFE157:
 4585              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4586              		.align	1
 4587              		.global	HAL_HalfDuplex_EnableReceiver
 4588              		.syntax unified
 4589              		.thumb
 4590              		.thumb_func
 4591              		.fpu fpv4-sp-d16
 4593              	HAL_HalfDuplex_EnableReceiver:
 4594              	.LFB158:
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 4595              		.loc 1 1907 0
 4596              		.cfi_startproc
 4597              		@ args = 0, pretend = 0, frame = 0
 4598              		@ frame_needed = 0, uses_anonymous_args = 0
 4599              		@ link register save eliminated.
 4600              	.LVL414:
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4601              		.loc 1 1911 0
 4602 0000 90F83830 		ldrb	r3, [r0, #56]	@ zero_extendqisi2
 4603 0004 012B     		cmp	r3, #1
 4604 0006 14D0     		beq	.L360
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4605              		.loc 1 1911 0 is_stmt 0 discriminator 2
 4606 0008 0123     		movs	r3, #1
 4607 000a 80F83830 		strb	r3, [r0, #56]
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4608              		.loc 1 1913 0 is_stmt 1 discriminator 2
 4609 000e 2423     		movs	r3, #36
ARM GAS  /tmp/cczJWHrP.s 			page 137


 4610 0010 80F83930 		strb	r3, [r0, #57]
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4611              		.loc 1 1916 0 discriminator 2
 4612 0014 0268     		ldr	r2, [r0]
 4613 0016 D368     		ldr	r3, [r2, #12]
 4614              	.LVL415:
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4615              		.loc 1 1919 0 discriminator 2
 4616 0018 23F00C03 		bic	r3, r3, #12
 4617              	.LVL416:
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4618              		.loc 1 1922 0 discriminator 2
 4619 001c 43F00403 		orr	r3, r3, #4
 4620              	.LVL417:
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4621              		.loc 1 1925 0 discriminator 2
 4622 0020 D360     		str	r3, [r2, #12]
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4623              		.loc 1 1927 0 discriminator 2
 4624 0022 2023     		movs	r3, #32
 4625              	.LVL418:
 4626 0024 80F83930 		strb	r3, [r0, #57]
 4627              	.LVL419:
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4628              		.loc 1 1930 0 discriminator 2
 4629 0028 0023     		movs	r3, #0
 4630 002a 80F83830 		strb	r3, [r0, #56]
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4631              		.loc 1 1932 0 discriminator 2
 4632 002e 1846     		mov	r0, r3
 4633              	.LVL420:
 4634 0030 7047     		bx	lr
 4635              	.LVL421:
 4636              	.L360:
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4637              		.loc 1 1911 0
 4638 0032 0220     		movs	r0, #2
 4639              	.LVL422:
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4640              		.loc 1 1933 0
 4641 0034 7047     		bx	lr
 4642              		.cfi_endproc
 4643              	.LFE158:
 4645              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4646              		.align	1
 4647              		.global	HAL_UART_GetState
 4648              		.syntax unified
 4649              		.thumb
 4650              		.thumb_func
 4651              		.fpu fpv4-sp-d16
 4653              	HAL_UART_GetState:
 4654              	.LFB159:
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1= 0x00U, temp2 = 0x00U;
 4655              		.loc 1 1964 0
 4656              		.cfi_startproc
 4657              		@ args = 0, pretend = 0, frame = 0
 4658              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cczJWHrP.s 			page 138


 4659              		@ link register save eliminated.
 4660              	.LVL423:
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 4661              		.loc 1 1966 0
 4662 0000 90F83930 		ldrb	r3, [r0, #57]	@ zero_extendqisi2
 4663              	.LVL424:
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   
 4664              		.loc 1 1967 0
 4665 0004 90F83A00 		ldrb	r0, [r0, #58]	@ zero_extendqisi2
 4666              	.LVL425:
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4667              		.loc 1 1970 0
 4668 0008 1843     		orrs	r0, r0, r3
 4669              	.LVL426:
 4670 000a 7047     		bx	lr
 4671              		.cfi_endproc
 4672              	.LFE159:
 4674              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4675              		.align	1
 4676              		.global	HAL_UART_GetError
 4677              		.syntax unified
 4678              		.thumb
 4679              		.thumb_func
 4680              		.fpu fpv4-sp-d16
 4682              	HAL_UART_GetError:
 4683              	.LFB160:
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 4684              		.loc 1 1979 0
 4685              		.cfi_startproc
 4686              		@ args = 0, pretend = 0, frame = 0
 4687              		@ frame_needed = 0, uses_anonymous_args = 0
 4688              		@ link register save eliminated.
 4689              	.LVL427:
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4690              		.loc 1 1980 0
 4691 0000 C06B     		ldr	r0, [r0, #60]
 4692              	.LVL428:
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 4693              		.loc 1 1981 0
 4694 0002 7047     		bx	lr
 4695              		.cfi_endproc
 4696              	.LFE160:
 4698              		.section	.rodata.UART_SetConfig.str1.4,"aMS",%progbits,1
 4699              		.align	2
 4700              	.LC0:
 4701 0000 44726976 		.ascii	"Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart"
 4701      6572732F 
 4701      53544D33 
 4701      32463478 
 4701      785F4841 
 4702 0033 2E6300   		.ascii	".c\000"
 4703              		.text
 4704              	.Letext0:
 4705              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 4706              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 4707              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 4708              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
ARM GAS  /tmp/cczJWHrP.s 			page 139


 4709              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 4710              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 4711              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 4712              		.file 9 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 4713              		.file 10 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 4714              		.file 11 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 4715              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 4716              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 4717              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 4718              		.file 15 "Inc/stm32f4xx_hal_conf.h"
 4719              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 4720              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cczJWHrP.s 			page 140


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal_uart.c
     /tmp/cczJWHrP.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/cczJWHrP.s:24     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/cczJWHrP.s:46     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/cczJWHrP.s:52     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/cczJWHrP.s:78     .text.UART_Transmit_IT:0000000000000000 $t
     /tmp/cczJWHrP.s:84     .text.UART_Transmit_IT:0000000000000000 UART_Transmit_IT
     /tmp/cczJWHrP.s:172    .text.UART_SetConfig:0000000000000000 $t
     /tmp/cczJWHrP.s:178    .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/cczJWHrP.s:516    .text.UART_SetConfig:00000000000002e4 $d
     /tmp/cczJWHrP.s:523    .text.UART_SetConfig:00000000000002f4 $t
     /tmp/cczJWHrP.s:586    .text.UART_SetConfig:00000000000003a4 $d
     /tmp/cczJWHrP.s:591    .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cczJWHrP.s:597    .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cczJWHrP.s:672    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cczJWHrP.s:679    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cczJWHrP.s:692    .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cczJWHrP.s:699    .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cczJWHrP.s:882    .text.HAL_UART_Init:0000000000000118 $d
     /tmp/cczJWHrP.s:888    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cczJWHrP.s:895    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cczJWHrP.s:1036   .text.HAL_HalfDuplex_Init:00000000000000d0 $d
     /tmp/cczJWHrP.s:1042   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cczJWHrP.s:1049   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cczJWHrP.s:1219   .text.HAL_LIN_Init:00000000000000f0 $d
     /tmp/cczJWHrP.s:1225   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cczJWHrP.s:1232   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cczJWHrP.s:1420   .text.HAL_MultiProcessor_Init:0000000000000114 $d
     /tmp/cczJWHrP.s:1426   .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cczJWHrP.s:1433   .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cczJWHrP.s:1446   .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cczJWHrP.s:1453   .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cczJWHrP.s:1532   .text.HAL_UART_DeInit:0000000000000064 $d
     /tmp/cczJWHrP.s:1538   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cczJWHrP.s:1545   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cczJWHrP.s:1731   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cczJWHrP.s:1738   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cczJWHrP.s:1928   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cczJWHrP.s:1935   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cczJWHrP.s:2010   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cczJWHrP.s:2017   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cczJWHrP.s:2097   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cczJWHrP.s:2104   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cczJWHrP.s:2214   .text.HAL_UART_Transmit_DMA:0000000000000080 $d
     /tmp/cczJWHrP.s:2897   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cczJWHrP.s:3007   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cczJWHrP.s:3306   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cczJWHrP.s:2221   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cczJWHrP.s:2228   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cczJWHrP.s:2363   .text.HAL_UART_Receive_DMA:000000000000009c $d
     /tmp/cczJWHrP.s:3057   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cczJWHrP.s:3256   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cczJWHrP.s:2370   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cczJWHrP.s:2377   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cczJWHrP.s:2464   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cczJWHrP.s:2471   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
ARM GAS  /tmp/cczJWHrP.s 			page 141


     /tmp/cczJWHrP.s:2565   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cczJWHrP.s:2572   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cczJWHrP.s:2661   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cczJWHrP.s:2668   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cczJWHrP.s:2750   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cczJWHrP.s:2757   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/cczJWHrP.s:2808   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cczJWHrP.s:2815   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cczJWHrP.s:2871   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:2878   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cczJWHrP.s:2891   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cczJWHrP.s:2945   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cczJWHrP.s:2951   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cczJWHrP.s:2981   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:2988   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cczJWHrP.s:3001   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cczJWHrP.s:3031   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:3038   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/cczJWHrP.s:3051   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cczJWHrP.s:3110   .text.UART_Receive_IT:0000000000000000 $t
     /tmp/cczJWHrP.s:3116   .text.UART_Receive_IT:0000000000000000 UART_Receive_IT
     /tmp/cczJWHrP.s:3230   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:3237   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cczJWHrP.s:3250   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cczJWHrP.s:3280   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:3287   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cczJWHrP.s:3300   .text.UART_DMAError:0000000000000000 $t
     /tmp/cczJWHrP.s:3388   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cczJWHrP.s:3395   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cczJWHrP.s:3615   .text.HAL_UART_IRQHandler:000000000000011c $d
     /tmp/cczJWHrP.s:3626   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cczJWHrP.s:3620   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cczJWHrP.s:3654   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:3661   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cczJWHrP.s:3674   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cczJWHrP.s:3681   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/cczJWHrP.s:3838   .text.HAL_UART_Abort_IT:00000000000000c0 $d
     /tmp/cczJWHrP.s:3906   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cczJWHrP.s:3850   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/cczJWHrP.s:3844   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:3900   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:3956   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:3963   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cczJWHrP.s:3976   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cczJWHrP.s:3983   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cczJWHrP.s:4062   .text.HAL_UART_AbortTransmit_IT:000000000000005c $d
     /tmp/cczJWHrP.s:4073   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cczJWHrP.s:4067   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:4102   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:4109   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cczJWHrP.s:4122   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cczJWHrP.s:4129   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cczJWHrP.s:4213   .text.HAL_UART_AbortReceive_IT:0000000000000068 $d
     /tmp/cczJWHrP.s:4224   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cczJWHrP.s:4218   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/cczJWHrP.s:4253   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cczJWHrP.s:4260   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
ARM GAS  /tmp/cczJWHrP.s 			page 142


     /tmp/cczJWHrP.s:4338   .text.HAL_LIN_SendBreak:0000000000000070 $d
     /tmp/cczJWHrP.s:4344   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cczJWHrP.s:4351   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cczJWHrP.s:4429   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000070 $d
     /tmp/cczJWHrP.s:4435   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 $t
     /tmp/cczJWHrP.s:4442   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000000 HAL_MultiProcessor_ExitMuteMode
     /tmp/cczJWHrP.s:4520   .text.HAL_MultiProcessor_ExitMuteMode:0000000000000070 $d
     /tmp/cczJWHrP.s:4526   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cczJWHrP.s:4533   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cczJWHrP.s:4586   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cczJWHrP.s:4593   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cczJWHrP.s:4646   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cczJWHrP.s:4653   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cczJWHrP.s:4675   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cczJWHrP.s:4682   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cczJWHrP.s:4699   .rodata.UART_SetConfig.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
assert_failed
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_Abort_IT
