ARM GAS  /tmp/ccszwbVJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB125:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccszwbVJ.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE BEGIN Includes */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** static void MX_GPIO_Init(void);
  57:Src/main.c    **** TIM_HandleTypeDef    TimHandle;
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** int main(void)
  68:Src/main.c    **** {
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE END 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Src/main.c    ****   HAL_Init();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE BEGIN Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Configure the system clock */
  84:Src/main.c    ****   SystemClock_Config();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END SysInit */
  89:Src/main.c    **** 
ARM GAS  /tmp/ccszwbVJ.s 			page 3


  90:Src/main.c    ****   /* Initialize all configured peripherals */
  91:Src/main.c    ****   MX_GPIO_Init();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN 2 */
  94:Src/main.c    ****     /* Set TIMx instance */
  95:Src/main.c    ****   TimHandle.Instance = TIM2;
  96:Src/main.c    ****    
  97:Src/main.c    ****   /* Initialize TIM3 peripheral as follows:
  98:Src/main.c    ****        + Period = 10000 - 1
  99:Src/main.c    ****        + Prescaler = ((SystemCoreClock/2)/10000) - 1
 100:Src/main.c    ****        + ClockDivision = 0
 101:Src/main.c    ****        + Counter direction = Up
 102:Src/main.c    ****   */
 103:Src/main.c    ****   TimHandle.Init.Period = 2000 - 1;
 104:Src/main.c    ****   TimHandle.Init.Prescaler = 41999;
 105:Src/main.c    ****   TimHandle.Init.ClockDivision = 0;
 106:Src/main.c    ****   TimHandle.Init.CounterMode = TIM_COUNTERMODE_UP;
 107:Src/main.c    ****   if(HAL_TIM_Base_Init(&TimHandle) != HAL_OK)
 108:Src/main.c    ****   {
 109:Src/main.c    ****     /* Initialization Error */
 110:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 111:Src/main.c    ****   }
 112:Src/main.c    ****   
 113:Src/main.c    ****   /*##-2- Start the TIM Base generation in interrupt mode ####################*/
 114:Src/main.c    ****   /* Start Channel1 */
 115:Src/main.c    ****   if(HAL_TIM_Base_Start_IT(&TimHandle) != HAL_OK)
 116:Src/main.c    ****   {
 117:Src/main.c    ****     /* Starting Error */
 118:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 119:Src/main.c    ****   }
 120:Src/main.c    ****   
 121:Src/main.c    ****    
 122:Src/main.c    ****   
 123:Src/main.c    ****   /* USER CODE END 2 */
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* Infinite loop */
 126:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 127:Src/main.c    ****   while (1)
 128:Src/main.c    ****   {
 129:Src/main.c    ****     
 130:Src/main.c    ****     
 131:Src/main.c    ****   /* USER CODE END WHILE */
 132:Src/main.c    **** 
 133:Src/main.c    ****   /* USER CODE BEGIN 3 */
 134:Src/main.c    **** 
 135:Src/main.c    ****   }
 136:Src/main.c    ****   /* USER CODE END 3 */
 137:Src/main.c    **** 
 138:Src/main.c    **** }
 139:Src/main.c    **** 
 140:Src/main.c    **** /** System Clock Configuration
 141:Src/main.c    **** */
 142:Src/main.c    **** void SystemClock_Config(void)
 143:Src/main.c    **** {
 144:Src/main.c    **** 
 145:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 146:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
ARM GAS  /tmp/ccszwbVJ.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 149:Src/main.c    ****     */
 150:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 151:Src/main.c    **** 
 152:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 153:Src/main.c    **** 
 154:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 155:Src/main.c    ****     */
 156:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 157:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 158:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 164:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 165:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166:Src/main.c    ****   {
 167:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 168:Src/main.c    ****   }
 169:Src/main.c    **** 
 170:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 171:Src/main.c    ****     */
 172:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 173:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 174:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 175:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 176:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 177:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178:Src/main.c    **** 
 179:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 180:Src/main.c    ****   {
 181:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 182:Src/main.c    ****   }
 183:Src/main.c    **** 
 184:Src/main.c    ****     /**Configure the Systick interrupt time 
 185:Src/main.c    ****     */
 186:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 187:Src/main.c    **** 
 188:Src/main.c    ****     /**Configure the Systick 
 189:Src/main.c    ****     */
 190:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 193:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 194:Src/main.c    **** }
 195:Src/main.c    **** 
 196:Src/main.c    **** /** Configure pins as 
 197:Src/main.c    ****         * Analog 
 198:Src/main.c    ****         * Input 
 199:Src/main.c    ****         * Output
 200:Src/main.c    ****         * EVENT_OUT
 201:Src/main.c    ****         * EXTI
 202:Src/main.c    **** */
 203:Src/main.c    **** static void MX_GPIO_Init(void)
ARM GAS  /tmp/ccszwbVJ.s 			page 5


 204:Src/main.c    **** {
  27              		.loc 1 204 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
  40              	.LBB2:
 205:Src/main.c    **** 
 206:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 207:Src/main.c    **** 
 208:Src/main.c    ****   /* GPIO Ports Clock Enable */
 209:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  41              		.loc 1 209 0
  42 0004 0024     		movs	r4, #0
  43 0006 0094     		str	r4, [sp]
  44 0008 0E4B     		ldr	r3, .L3
  45 000a 1A6B     		ldr	r2, [r3, #48]
  46 000c 42F02002 		orr	r2, r2, #32
  47 0010 1A63     		str	r2, [r3, #48]
  48 0012 1B6B     		ldr	r3, [r3, #48]
  49 0014 03F02003 		and	r3, r3, #32
  50 0018 0093     		str	r3, [sp]
  51 001a 009B     		ldr	r3, [sp]
  52              	.LBE2:
 210:Src/main.c    **** 
 211:Src/main.c    ****   /*Configure GPIO pin Output Level */
 212:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, LED_Green_Pin|LED_Yellow_Pin|LED_Red_Pin, GPIO_PIN_RESET);
  53              		.loc 1 212 0
  54 001c 0A4D     		ldr	r5, .L3+4
  55 001e 2246     		mov	r2, r4
  56 0020 3421     		movs	r1, #52
  57 0022 2846     		mov	r0, r5
  58 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
  59              	.LVL0:
 213:Src/main.c    **** 
 214:Src/main.c    ****   /*Configure GPIO pins : LED_Green_Pin LED_Yellow_Pin LED_Red_Pin */
 215:Src/main.c    ****   GPIO_InitStruct.Pin = LED_Green_Pin|LED_Yellow_Pin|LED_Red_Pin;
  60              		.loc 1 215 0
  61 0028 3423     		movs	r3, #52
  62 002a 0193     		str	r3, [sp, #4]
 216:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  63              		.loc 1 216 0
  64 002c 0123     		movs	r3, #1
  65 002e 0293     		str	r3, [sp, #8]
 217:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
  66              		.loc 1 217 0
  67 0030 0223     		movs	r3, #2
  68 0032 0393     		str	r3, [sp, #12]
 218:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
ARM GAS  /tmp/ccszwbVJ.s 			page 6


  69              		.loc 1 218 0
  70 0034 0494     		str	r4, [sp, #16]
 219:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
  71              		.loc 1 219 0
  72 0036 01A9     		add	r1, sp, #4
  73 0038 2846     		mov	r0, r5
  74 003a FFF7FEFF 		bl	HAL_GPIO_Init
  75              	.LVL1:
 220:Src/main.c    **** 
 221:Src/main.c    **** }
  76              		.loc 1 221 0
  77 003e 07B0     		add	sp, sp, #28
  78              	.LCFI2:
  79              		.cfi_def_cfa_offset 12
  80              		@ sp needed
  81 0040 30BD     		pop	{r4, r5, pc}
  82              	.L4:
  83 0042 00BF     		.align	2
  84              	.L3:
  85 0044 00380240 		.word	1073887232
  86 0048 00140240 		.word	1073878016
  87              		.cfi_endproc
  88              	.LFE125:
  90              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  91              		.align	1
  92              		.global	HAL_TIM_PeriodElapsedCallback
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	HAL_TIM_PeriodElapsedCallback:
  99              	.LFB126:
 222:Src/main.c    **** 
 223:Src/main.c    **** /* USER CODE BEGIN 4 */
 224:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 225:Src/main.c    **** {
 100              		.loc 1 225 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              	.LVL2:
 105 0000 08B5     		push	{r3, lr}
 106              	.LCFI3:
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 3, -8
 109              		.cfi_offset 14, -4
 226:Src/main.c    ****   HAL_GPIO_TogglePin(LED_Green_GPIO_Port, LED_Green_Pin);
 110              		.loc 1 226 0
 111 0002 0421     		movs	r1, #4
 112 0004 0148     		ldr	r0, .L7
 113              	.LVL3:
 114 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 115              	.LVL4:
 116 000a 08BD     		pop	{r3, pc}
 117              	.L8:
 118              		.align	2
 119              	.L7:
ARM GAS  /tmp/ccszwbVJ.s 			page 7


 120 000c 00140240 		.word	1073878016
 121              		.cfi_endproc
 122              	.LFE126:
 124              		.section	.text._Error_Handler,"ax",%progbits
 125              		.align	1
 126              		.global	_Error_Handler
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv4-sp-d16
 132              	_Error_Handler:
 133              	.LFB127:
 227:Src/main.c    ****   /* __HAL_TIM_CLEAR_IT(&htim4, TIM_IT_CC3); */
 228:Src/main.c    ****   /* __HAL_TIM_CLEAR_FLAG(&htim4, TIM_FLAG_CC3); */
 229:Src/main.c    **** }
 230:Src/main.c    **** /* USER CODE END 4 */
 231:Src/main.c    **** 
 232:Src/main.c    **** /**
 233:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 234:Src/main.c    ****   * @param  None
 235:Src/main.c    ****   * @retval None
 236:Src/main.c    ****   */
 237:Src/main.c    **** void _Error_Handler(char * file, int line)
 238:Src/main.c    **** {
 134              		.loc 1 238 0
 135              		.cfi_startproc
 136              		@ Volatile: function does not return.
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              	.LVL5:
 140 0000 08B5     		push	{r3, lr}
 141              	.LCFI4:
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 3, -8
 144              		.cfi_offset 14, -4
 239:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 240:Src/main.c    ****   HAL_GPIO_WritePin(LED_Red_GPIO_Port, LED_Red_Pin, GPIO_PIN_SET);
 145              		.loc 1 240 0
 146 0002 0122     		movs	r2, #1
 147 0004 2021     		movs	r1, #32
 148              	.LVL6:
 149 0006 0248     		ldr	r0, .L12
 150              	.LVL7:
 151 0008 FFF7FEFF 		bl	HAL_GPIO_WritePin
 152              	.LVL8:
 153              	.L10:
 154 000c FEE7     		b	.L10
 155              	.L13:
 156 000e 00BF     		.align	2
 157              	.L12:
 158 0010 00140240 		.word	1073878016
 159              		.cfi_endproc
 160              	.LFE127:
 162              		.section	.text.SystemClock_Config,"ax",%progbits
 163              		.align	1
 164              		.global	SystemClock_Config
 165              		.syntax unified
ARM GAS  /tmp/ccszwbVJ.s 			page 8


 166              		.thumb
 167              		.thumb_func
 168              		.fpu fpv4-sp-d16
 170              	SystemClock_Config:
 171              	.LFB124:
 143:Src/main.c    **** 
 172              		.loc 1 143 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 80
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176 0000 00B5     		push	{lr}
 177              	.LCFI5:
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 14, -4
 180 0002 95B0     		sub	sp, sp, #84
 181              	.LCFI6:
 182              		.cfi_def_cfa_offset 88
 183              	.LBB3:
 150:Src/main.c    **** 
 184              		.loc 1 150 0
 185 0004 0023     		movs	r3, #0
 186 0006 0193     		str	r3, [sp, #4]
 187 0008 284A     		ldr	r2, .L20
 188 000a 116C     		ldr	r1, [r2, #64]
 189 000c 41F08051 		orr	r1, r1, #268435456
 190 0010 1164     		str	r1, [r2, #64]
 191 0012 126C     		ldr	r2, [r2, #64]
 192 0014 02F08052 		and	r2, r2, #268435456
 193 0018 0192     		str	r2, [sp, #4]
 194 001a 019A     		ldr	r2, [sp, #4]
 195              	.LBE3:
 196              	.LBB4:
 152:Src/main.c    **** 
 197              		.loc 1 152 0
 198 001c 0293     		str	r3, [sp, #8]
 199 001e 244A     		ldr	r2, .L20+4
 200 0020 1168     		ldr	r1, [r2]
 201 0022 41F48041 		orr	r1, r1, #16384
 202 0026 1160     		str	r1, [r2]
 203 0028 1268     		ldr	r2, [r2]
 204 002a 02F48042 		and	r2, r2, #16384
 205 002e 0292     		str	r2, [sp, #8]
 206 0030 029A     		ldr	r2, [sp, #8]
 207              	.LBE4:
 156:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 208              		.loc 1 156 0
 209 0032 0221     		movs	r1, #2
 210 0034 0891     		str	r1, [sp, #32]
 157:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 211              		.loc 1 157 0
 212 0036 0122     		movs	r2, #1
 213 0038 0B92     		str	r2, [sp, #44]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 214              		.loc 1 158 0
 215 003a 1022     		movs	r2, #16
 216 003c 0C92     		str	r2, [sp, #48]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
ARM GAS  /tmp/ccszwbVJ.s 			page 9


 217              		.loc 1 159 0
 218 003e 0E91     		str	r1, [sp, #56]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 219              		.loc 1 160 0
 220 0040 0F93     		str	r3, [sp, #60]
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 221              		.loc 1 161 0
 222 0042 1092     		str	r2, [sp, #64]
 162:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 223              		.loc 1 162 0
 224 0044 4FF4A873 		mov	r3, #336
 225 0048 1193     		str	r3, [sp, #68]
 163:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 226              		.loc 1 163 0
 227 004a 0423     		movs	r3, #4
 228 004c 1293     		str	r3, [sp, #72]
 164:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 229              		.loc 1 164 0
 230 004e 1393     		str	r3, [sp, #76]
 165:Src/main.c    ****   {
 231              		.loc 1 165 0
 232 0050 08A8     		add	r0, sp, #32
 233 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 234              	.LVL9:
 235 0056 08BB     		cbnz	r0, .L18
 172:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 236              		.loc 1 172 0
 237 0058 0F23     		movs	r3, #15
 238 005a 0393     		str	r3, [sp, #12]
 174:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 239              		.loc 1 174 0
 240 005c 0221     		movs	r1, #2
 241 005e 0491     		str	r1, [sp, #16]
 175:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 242              		.loc 1 175 0
 243 0060 0023     		movs	r3, #0
 244 0062 0593     		str	r3, [sp, #20]
 176:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 245              		.loc 1 176 0
 246 0064 4FF48052 		mov	r2, #4096
 247 0068 0692     		str	r2, [sp, #24]
 177:Src/main.c    **** 
 248              		.loc 1 177 0
 249 006a 0793     		str	r3, [sp, #28]
 179:Src/main.c    ****   {
 250              		.loc 1 179 0
 251 006c 03A8     		add	r0, sp, #12
 252 006e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 253              	.LVL10:
 254 0072 B8B9     		cbnz	r0, .L19
 186:Src/main.c    **** 
 255              		.loc 1 186 0
 256 0074 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 257              	.LVL11:
 258 0078 0E4B     		ldr	r3, .L20+8
 259 007a A3FB0030 		umull	r3, r0, r3, r0
 260 007e 8009     		lsrs	r0, r0, #6
ARM GAS  /tmp/ccszwbVJ.s 			page 10


 261 0080 FFF7FEFF 		bl	HAL_SYSTICK_Config
 262              	.LVL12:
 190:Src/main.c    **** 
 263              		.loc 1 190 0
 264 0084 0420     		movs	r0, #4
 265 0086 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 266              	.LVL13:
 193:Src/main.c    **** }
 267              		.loc 1 193 0
 268 008a 0022     		movs	r2, #0
 269 008c 1146     		mov	r1, r2
 270 008e 4FF0FF30 		mov	r0, #-1
 271 0092 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 272              	.LVL14:
 194:Src/main.c    **** 
 273              		.loc 1 194 0
 274 0096 15B0     		add	sp, sp, #84
 275              	.LCFI7:
 276              		.cfi_remember_state
 277              		.cfi_def_cfa_offset 4
 278              		@ sp needed
 279 0098 5DF804FB 		ldr	pc, [sp], #4
 280              	.L18:
 281              	.LCFI8:
 282              		.cfi_restore_state
 167:Src/main.c    ****   }
 283              		.loc 1 167 0
 284 009c A721     		movs	r1, #167
 285 009e 0648     		ldr	r0, .L20+12
 286 00a0 FFF7FEFF 		bl	_Error_Handler
 287              	.LVL15:
 288              	.L19:
 181:Src/main.c    ****   }
 289              		.loc 1 181 0
 290 00a4 B521     		movs	r1, #181
 291 00a6 0448     		ldr	r0, .L20+12
 292 00a8 FFF7FEFF 		bl	_Error_Handler
 293              	.LVL16:
 294              	.L21:
 295              		.align	2
 296              	.L20:
 297 00ac 00380240 		.word	1073887232
 298 00b0 00700040 		.word	1073770496
 299 00b4 D34D6210 		.word	274877907
 300 00b8 00000000 		.word	.LC0
 301              		.cfi_endproc
 302              	.LFE124:
 304              		.section	.text.main,"ax",%progbits
 305              		.align	1
 306              		.global	main
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv4-sp-d16
 312              	main:
 313              	.LFB123:
  68:Src/main.c    **** 
ARM GAS  /tmp/ccszwbVJ.s 			page 11


 314              		.loc 1 68 0
 315              		.cfi_startproc
 316              		@ Volatile: function does not return.
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 08B5     		push	{r3, lr}
 320              	.LCFI9:
 321              		.cfi_def_cfa_offset 8
 322              		.cfi_offset 3, -8
 323              		.cfi_offset 14, -4
  77:Src/main.c    **** 
 324              		.loc 1 77 0
 325 0002 FFF7FEFF 		bl	HAL_Init
 326              	.LVL17:
  84:Src/main.c    **** 
 327              		.loc 1 84 0
 328 0006 FFF7FEFF 		bl	SystemClock_Config
 329              	.LVL18:
  91:Src/main.c    **** 
 330              		.loc 1 91 0
 331 000a FFF7FEFF 		bl	MX_GPIO_Init
 332              	.LVL19:
  95:Src/main.c    ****    
 333              		.loc 1 95 0
 334 000e 0E48     		ldr	r0, .L27
 335 0010 4FF08043 		mov	r3, #1073741824
 336 0014 0360     		str	r3, [r0]
 103:Src/main.c    ****   TimHandle.Init.Prescaler = 41999;
 337              		.loc 1 103 0
 338 0016 40F2CF73 		movw	r3, #1999
 339 001a C360     		str	r3, [r0, #12]
 104:Src/main.c    ****   TimHandle.Init.ClockDivision = 0;
 340              		.loc 1 104 0
 341 001c 4AF20F43 		movw	r3, #41999
 342 0020 4360     		str	r3, [r0, #4]
 105:Src/main.c    ****   TimHandle.Init.CounterMode = TIM_COUNTERMODE_UP;
 343              		.loc 1 105 0
 344 0022 0023     		movs	r3, #0
 345 0024 0361     		str	r3, [r0, #16]
 106:Src/main.c    ****   if(HAL_TIM_Base_Init(&TimHandle) != HAL_OK)
 346              		.loc 1 106 0
 347 0026 8360     		str	r3, [r0, #8]
 107:Src/main.c    ****   {
 348              		.loc 1 107 0
 349 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 350              	.LVL20:
 351 002c 18B1     		cbz	r0, .L23
 110:Src/main.c    ****   }
 352              		.loc 1 110 0
 353 002e 6E21     		movs	r1, #110
 354 0030 0648     		ldr	r0, .L27+4
 355 0032 FFF7FEFF 		bl	_Error_Handler
 356              	.LVL21:
 357              	.L23:
 115:Src/main.c    ****   {
 358              		.loc 1 115 0
 359 0036 0448     		ldr	r0, .L27
ARM GAS  /tmp/ccszwbVJ.s 			page 12


 360 0038 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 361              	.LVL22:
 362 003c 00B9     		cbnz	r0, .L26
 363              	.L24:
 364 003e FEE7     		b	.L24
 365              	.L26:
 118:Src/main.c    ****   }
 366              		.loc 1 118 0
 367 0040 7621     		movs	r1, #118
 368 0042 0248     		ldr	r0, .L27+4
 369 0044 FFF7FEFF 		bl	_Error_Handler
 370              	.LVL23:
 371              	.L28:
 372              		.align	2
 373              	.L27:
 374 0048 00000000 		.word	TimHandle
 375 004c 00000000 		.word	.LC0
 376              		.cfi_endproc
 377              	.LFE123:
 379              		.comm	TimHandle,60,4
 380              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 381              		.align	2
 382              	.LC0:
 383 0000 5372632F 		.ascii	"Src/main.c\000"
 383      6D61696E 
 383      2E6300
 384              		.text
 385              	.Letext0:
 386              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 387              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 388              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 389              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 390              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 391              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 392              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 393              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 394              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 395              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 396              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 397              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 398              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 399              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 400              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 401              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 402              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccszwbVJ.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccszwbVJ.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccszwbVJ.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccszwbVJ.s:85     .text.MX_GPIO_Init:0000000000000044 $d
     /tmp/ccszwbVJ.s:91     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccszwbVJ.s:98     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccszwbVJ.s:120    .text.HAL_TIM_PeriodElapsedCallback:000000000000000c $d
     /tmp/ccszwbVJ.s:125    .text._Error_Handler:0000000000000000 $t
     /tmp/ccszwbVJ.s:132    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccszwbVJ.s:158    .text._Error_Handler:0000000000000010 $d
     /tmp/ccszwbVJ.s:163    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccszwbVJ.s:170    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccszwbVJ.s:297    .text.SystemClock_Config:00000000000000ac $d
     /tmp/ccszwbVJ.s:305    .text.main:0000000000000000 $t
     /tmp/ccszwbVJ.s:312    .text.main:0000000000000000 main
     /tmp/ccszwbVJ.s:374    .text.main:0000000000000048 $d
                            *COM*:000000000000003c TimHandle
     /tmp/ccszwbVJ.s:381    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_TogglePin
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
