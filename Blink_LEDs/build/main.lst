ARM GAS  /tmp/ccrSD5Ol.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB125:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  /tmp/ccrSD5Ol.s 			page 2


  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f4xx_hal.h"
  41:Src/main.c    **** 
  42:Src/main.c    **** /* USER CODE BEGIN Includes */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END Includes */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN PV */
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  54:Src/main.c    **** void SystemClock_Config(void);
  55:Src/main.c    **** static void MX_GPIO_Init(void);
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN PFP */
  58:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PFP */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** int main(void)
  67:Src/main.c    **** {
  68:Src/main.c    **** 
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* USER CODE END 1 */
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Src/main.c    ****   HAL_Init();
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE BEGIN Init */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END Init */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Configure the system clock */
  83:Src/main.c    ****   SystemClock_Config();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END SysInit */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccrSD5Ol.s 			page 3


  90:Src/main.c    ****   MX_GPIO_Init();
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE BEGIN 2 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 2 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Infinite loop */
  97:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  98:Src/main.c    ****   while (1)
  99:Src/main.c    ****   {
 100:Src/main.c    ****   /* USER CODE END WHILE */
 101:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOF, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_2);
 102:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 103:Src/main.c    ****     HAL_Delay(500);
 104:Src/main.c    ****       
 105:Src/main.c    ****   /* USER CODE BEGIN 3 */
 106:Src/main.c    **** 
 107:Src/main.c    ****   }
 108:Src/main.c    ****   /* USER CODE END 3 */
 109:Src/main.c    **** 
 110:Src/main.c    **** }
 111:Src/main.c    **** 
 112:Src/main.c    **** /** System Clock Configuration
 113:Src/main.c    **** */
 114:Src/main.c    **** void SystemClock_Config(void)
 115:Src/main.c    **** {
 116:Src/main.c    **** 
 117:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 118:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 119:Src/main.c    **** 
 120:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 121:Src/main.c    ****     */
 122:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 123:Src/main.c    **** 
 124:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 125:Src/main.c    **** 
 126:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 127:Src/main.c    ****     */
 128:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 129:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 130:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 132:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133:Src/main.c    ****   {
 134:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 135:Src/main.c    ****   }
 136:Src/main.c    **** 
 137:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 138:Src/main.c    ****     */
 139:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 140:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 141:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 142:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 144:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 145:Src/main.c    **** 
 146:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
ARM GAS  /tmp/ccrSD5Ol.s 			page 4


 147:Src/main.c    ****   {
 148:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 149:Src/main.c    ****   }
 150:Src/main.c    **** 
 151:Src/main.c    ****     /**Configure the Systick interrupt time 
 152:Src/main.c    ****     */
 153:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 154:Src/main.c    **** 
 155:Src/main.c    ****     /**Configure the Systick 
 156:Src/main.c    ****     */
 157:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 158:Src/main.c    **** 
 159:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 160:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 161:Src/main.c    **** }
 162:Src/main.c    **** 
 163:Src/main.c    **** /** Configure pins as 
 164:Src/main.c    ****         * Analog 
 165:Src/main.c    ****         * Input 
 166:Src/main.c    ****         * Output
 167:Src/main.c    ****         * EVENT_OUT
 168:Src/main.c    ****         * EXTI
 169:Src/main.c    **** */
 170:Src/main.c    **** static void MX_GPIO_Init(void)
 171:Src/main.c    **** {
  27              		.loc 1 171 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
  42              	.LBB2:
 172:Src/main.c    **** 
 173:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 174:Src/main.c    **** 
 175:Src/main.c    ****   /* GPIO Ports Clock Enable */
 176:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  43              		.loc 1 176 0
  44 0004 0024     		movs	r4, #0
  45 0006 0194     		str	r4, [sp, #4]
  46 0008 1F4B     		ldr	r3, .L3
  47 000a 1A6B     		ldr	r2, [r3, #48]
  48 000c 42F02002 		orr	r2, r2, #32
  49 0010 1A63     		str	r2, [r3, #48]
  50 0012 1A6B     		ldr	r2, [r3, #48]
  51 0014 02F02002 		and	r2, r2, #32
  52 0018 0192     		str	r2, [sp, #4]
  53 001a 019A     		ldr	r2, [sp, #4]
ARM GAS  /tmp/ccrSD5Ol.s 			page 5


  54              	.LBE2:
  55              	.LBB3:
 177:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  56              		.loc 1 177 0
  57 001c 0294     		str	r4, [sp, #8]
  58 001e 1A6B     		ldr	r2, [r3, #48]
  59 0020 42F00402 		orr	r2, r2, #4
  60 0024 1A63     		str	r2, [r3, #48]
  61 0026 1B6B     		ldr	r3, [r3, #48]
  62 0028 03F00403 		and	r3, r3, #4
  63 002c 0293     		str	r3, [sp, #8]
  64 002e 029B     		ldr	r3, [sp, #8]
  65              	.LBE3:
 178:Src/main.c    ****   /*Configure GPIO pin Output Level */
 179:Src/main.c    ****   HAL_GPIO_WritePin(GPIOF, GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_2, GPIO_PIN_RESET);
  66              		.loc 1 179 0
  67 0030 164D     		ldr	r5, .L3+4
  68 0032 2246     		mov	r2, r4
  69 0034 3C21     		movs	r1, #60
  70 0036 2846     		mov	r0, r5
  71 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
  72              	.LVL0:
 180:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  73              		.loc 1 180 0
  74 003c 144E     		ldr	r6, .L3+8
  75 003e 2246     		mov	r2, r4
  76 0040 4FF40051 		mov	r1, #8192
  77 0044 3046     		mov	r0, r6
  78 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
  79              	.LVL1:
 181:Src/main.c    ****   /*Configure GPIO pins : PD0 PD1 */
 182:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  80              		.loc 1 182 0
  81 004a 0323     		movs	r3, #3
  82 004c 0393     		str	r3, [sp, #12]
 183:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  83              		.loc 1 183 0
  84 004e 114B     		ldr	r3, .L3+12
  85 0050 0493     		str	r3, [sp, #16]
 184:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  86              		.loc 1 184 0
  87 0052 0594     		str	r4, [sp, #20]
 185:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
  88              		.loc 1 185 0
  89 0054 03A9     		add	r1, sp, #12
  90 0056 2846     		mov	r0, r5
  91 0058 FFF7FEFF 		bl	HAL_GPIO_Init
  92              	.LVL2:
 186:Src/main.c    **** 
 187:Src/main.c    ****   /*Configure GPIO pins : PD3 PD4 PD5 PD6 */
 188:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_2;
  93              		.loc 1 188 0
  94 005c 3C23     		movs	r3, #60
  95 005e 0393     		str	r3, [sp, #12]
 189:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  96              		.loc 1 189 0
  97 0060 0127     		movs	r7, #1
ARM GAS  /tmp/ccrSD5Ol.s 			page 6


  98 0062 0497     		str	r7, [sp, #16]
 190:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  99              		.loc 1 190 0
 100 0064 0594     		str	r4, [sp, #20]
 191:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 101              		.loc 1 191 0
 102 0066 0694     		str	r4, [sp, #24]
 192:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 103              		.loc 1 192 0
 104 0068 03A9     		add	r1, sp, #12
 105 006a 2846     		mov	r0, r5
 106 006c FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL3:
 193:Src/main.c    ****   
 194:Src/main.c    ****   /* Configure GPIO pin: C13*/
 195:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 108              		.loc 1 195 0
 109 0070 4FF40053 		mov	r3, #8192
 110 0074 0393     		str	r3, [sp, #12]
 196:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 111              		.loc 1 196 0
 112 0076 0497     		str	r7, [sp, #16]
 197:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 197 0
 114 0078 0594     		str	r4, [sp, #20]
 198:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 115              		.loc 1 198 0
 116 007a 0694     		str	r4, [sp, #24]
 199:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 117              		.loc 1 199 0
 118 007c 03A9     		add	r1, sp, #12
 119 007e 3046     		mov	r0, r6
 120 0080 FFF7FEFF 		bl	HAL_GPIO_Init
 121              	.LVL4:
 200:Src/main.c    **** 
 201:Src/main.c    **** 
 202:Src/main.c    **** }
 122              		.loc 1 202 0
 123 0084 09B0     		add	sp, sp, #36
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 20
 126              		@ sp needed
 127 0086 F0BD     		pop	{r4, r5, r6, r7, pc}
 128              	.L4:
 129              		.align	2
 130              	.L3:
 131 0088 00380240 		.word	1073887232
 132 008c 00140240 		.word	1073878016
 133 0090 00080240 		.word	1073874944
 134 0094 00001110 		.word	269549568
 135              		.cfi_endproc
 136              	.LFE125:
 138              		.section	.text._Error_Handler,"ax",%progbits
 139              		.align	1
 140              		.global	_Error_Handler
 141              		.syntax unified
 142              		.thumb
ARM GAS  /tmp/ccrSD5Ol.s 			page 7


 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	_Error_Handler:
 147              	.LFB126:
 203:Src/main.c    **** 
 204:Src/main.c    **** /* USER CODE BEGIN 4 */
 205:Src/main.c    **** 
 206:Src/main.c    **** /* USER CODE END 4 */
 207:Src/main.c    **** 
 208:Src/main.c    **** /**
 209:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 210:Src/main.c    ****   * @param  None
 211:Src/main.c    ****   * @retval None
 212:Src/main.c    ****   */
 213:Src/main.c    **** void _Error_Handler(char * file, int line)
 214:Src/main.c    **** {
 148              		.loc 1 214 0
 149              		.cfi_startproc
 150              		@ Volatile: function does not return.
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154              	.LVL5:
 155              	.L6:
 156 0000 FEE7     		b	.L6
 157              		.cfi_endproc
 158              	.LFE126:
 160              		.section	.text.SystemClock_Config,"ax",%progbits
 161              		.align	1
 162              		.global	SystemClock_Config
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv4-sp-d16
 168              	SystemClock_Config:
 169              	.LFB124:
 115:Src/main.c    **** 
 170              		.loc 1 115 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 80
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 115:Src/main.c    **** 
 174              		.loc 1 115 0
 175 0000 00B5     		push	{lr}
 176              	.LCFI3:
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 14, -4
 179 0002 95B0     		sub	sp, sp, #84
 180              	.LCFI4:
 181              		.cfi_def_cfa_offset 88
 182              	.LBB4:
 122:Src/main.c    **** 
 183              		.loc 1 122 0
 184 0004 0023     		movs	r3, #0
 185 0006 0193     		str	r3, [sp, #4]
 186 0008 234A     		ldr	r2, .L13
 187 000a 116C     		ldr	r1, [r2, #64]
ARM GAS  /tmp/ccrSD5Ol.s 			page 8


 188 000c 41F08051 		orr	r1, r1, #268435456
 189 0010 1164     		str	r1, [r2, #64]
 190 0012 126C     		ldr	r2, [r2, #64]
 191 0014 02F08052 		and	r2, r2, #268435456
 192 0018 0192     		str	r2, [sp, #4]
 193 001a 019A     		ldr	r2, [sp, #4]
 194              	.LBE4:
 195              	.LBB5:
 124:Src/main.c    **** 
 196              		.loc 1 124 0
 197 001c 0293     		str	r3, [sp, #8]
 198 001e 1F4A     		ldr	r2, .L13+4
 199 0020 1168     		ldr	r1, [r2]
 200 0022 41F48041 		orr	r1, r1, #16384
 201 0026 1160     		str	r1, [r2]
 202 0028 1268     		ldr	r2, [r2]
 203 002a 02F48042 		and	r2, r2, #16384
 204 002e 0292     		str	r2, [sp, #8]
 205 0030 029A     		ldr	r2, [sp, #8]
 206              	.LBE5:
 128:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 207              		.loc 1 128 0
 208 0032 0222     		movs	r2, #2
 209 0034 0892     		str	r2, [sp, #32]
 129:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 210              		.loc 1 129 0
 211 0036 0122     		movs	r2, #1
 212 0038 0B92     		str	r2, [sp, #44]
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 213              		.loc 1 130 0
 214 003a 1022     		movs	r2, #16
 215 003c 0C92     		str	r2, [sp, #48]
 131:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 216              		.loc 1 131 0
 217 003e 0E93     		str	r3, [sp, #56]
 132:Src/main.c    ****   {
 218              		.loc 1 132 0
 219 0040 08A8     		add	r0, sp, #32
 220 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 221              	.LVL6:
 222 0046 F0B9     		cbnz	r0, .L11
 139:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 223              		.loc 1 139 0
 224 0048 0F23     		movs	r3, #15
 225 004a 0393     		str	r3, [sp, #12]
 141:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 226              		.loc 1 141 0
 227 004c 0021     		movs	r1, #0
 228 004e 0491     		str	r1, [sp, #16]
 142:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 229              		.loc 1 142 0
 230 0050 0591     		str	r1, [sp, #20]
 143:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 231              		.loc 1 143 0
 232 0052 0691     		str	r1, [sp, #24]
 144:Src/main.c    **** 
 233              		.loc 1 144 0
ARM GAS  /tmp/ccrSD5Ol.s 			page 9


 234 0054 0791     		str	r1, [sp, #28]
 146:Src/main.c    ****   {
 235              		.loc 1 146 0
 236 0056 03A8     		add	r0, sp, #12
 237 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 238              	.LVL7:
 239 005c B8B9     		cbnz	r0, .L12
 153:Src/main.c    **** 
 240              		.loc 1 153 0
 241 005e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 242              	.LVL8:
 243 0062 0F4B     		ldr	r3, .L13+8
 244 0064 A3FB0030 		umull	r3, r0, r3, r0
 245 0068 8009     		lsrs	r0, r0, #6
 246 006a FFF7FEFF 		bl	HAL_SYSTICK_Config
 247              	.LVL9:
 157:Src/main.c    **** 
 248              		.loc 1 157 0
 249 006e 0420     		movs	r0, #4
 250 0070 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 251              	.LVL10:
 160:Src/main.c    **** }
 252              		.loc 1 160 0
 253 0074 0022     		movs	r2, #0
 254 0076 1146     		mov	r1, r2
 255 0078 4FF0FF30 		mov	r0, #-1
 256 007c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 257              	.LVL11:
 161:Src/main.c    **** 
 258              		.loc 1 161 0
 259 0080 15B0     		add	sp, sp, #84
 260              	.LCFI5:
 261              		.cfi_remember_state
 262              		.cfi_def_cfa_offset 4
 263              		@ sp needed
 264 0082 5DF804FB 		ldr	pc, [sp], #4
 265              	.L11:
 266              	.LCFI6:
 267              		.cfi_restore_state
 134:Src/main.c    ****   }
 268              		.loc 1 134 0
 269 0086 8621     		movs	r1, #134
 270 0088 0648     		ldr	r0, .L13+12
 271 008a FFF7FEFF 		bl	_Error_Handler
 272              	.LVL12:
 273              	.L12:
 148:Src/main.c    ****   }
 274              		.loc 1 148 0
 275 008e 9421     		movs	r1, #148
 276 0090 0448     		ldr	r0, .L13+12
 277 0092 FFF7FEFF 		bl	_Error_Handler
 278              	.LVL13:
 279              	.L14:
 280 0096 00BF     		.align	2
 281              	.L13:
 282 0098 00380240 		.word	1073887232
 283 009c 00700040 		.word	1073770496
ARM GAS  /tmp/ccrSD5Ol.s 			page 10


 284 00a0 D34D6210 		.word	274877907
 285 00a4 00000000 		.word	.LC0
 286              		.cfi_endproc
 287              	.LFE124:
 289              		.section	.text.main,"ax",%progbits
 290              		.align	1
 291              		.global	main
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu fpv4-sp-d16
 297              	main:
 298              	.LFB123:
  67:Src/main.c    **** 
 299              		.loc 1 67 0
 300              		.cfi_startproc
 301              		@ Volatile: function does not return.
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 08B5     		push	{r3, lr}
 305              	.LCFI7:
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 3, -8
 308              		.cfi_offset 14, -4
  76:Src/main.c    **** 
 309              		.loc 1 76 0
 310 0002 FFF7FEFF 		bl	HAL_Init
 311              	.LVL14:
  83:Src/main.c    **** 
 312              		.loc 1 83 0
 313 0006 FFF7FEFF 		bl	SystemClock_Config
 314              	.LVL15:
  90:Src/main.c    **** 
 315              		.loc 1 90 0
 316 000a FFF7FEFF 		bl	MX_GPIO_Init
 317              	.LVL16:
 318              	.L16:
 101:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 319              		.loc 1 101 0 discriminator 1
 320 000e 3C21     		movs	r1, #60
 321 0010 0648     		ldr	r0, .L18
 322 0012 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 323              	.LVL17:
 102:Src/main.c    ****     HAL_Delay(500);
 324              		.loc 1 102 0 discriminator 1
 325 0016 4FF40051 		mov	r1, #8192
 326 001a 0548     		ldr	r0, .L18+4
 327 001c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 328              	.LVL18:
 103:Src/main.c    ****       
 329              		.loc 1 103 0 discriminator 1
 330 0020 4FF4FA70 		mov	r0, #500
 331 0024 FFF7FEFF 		bl	HAL_Delay
 332              	.LVL19:
 333 0028 F1E7     		b	.L16
 334              	.L19:
 335 002a 00BF     		.align	2
ARM GAS  /tmp/ccrSD5Ol.s 			page 11


 336              	.L18:
 337 002c 00140240 		.word	1073878016
 338 0030 00080240 		.word	1073874944
 339              		.cfi_endproc
 340              	.LFE123:
 342              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 343              		.align	2
 344              	.LC0:
 345 0000 5372632F 		.ascii	"Src/main.c\000"
 345      6D61696E 
 345      2E6300
 346              		.text
 347              	.Letext0:
 348              		.file 2 "/home/saicharan/arm/arm-none-eabi/include/machine/_default_types.h"
 349              		.file 3 "/home/saicharan/arm/arm-none-eabi/include/stdint.h"
 350              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 351              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 352              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 353              		.file 7 "/home/saicharan/arm/arm-none-eabi/include/sys/lock.h"
 354              		.file 8 "/home/saicharan/arm/arm-none-eabi/include/sys/_types.h"
 355              		.file 9 "/home/saicharan/arm/lib/gcc/arm-none-eabi/6.3.0/include/stddef.h"
 356              		.file 10 "/home/saicharan/arm/arm-none-eabi/include/sys/reent.h"
 357              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 358              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 359              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 360              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 361              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 362              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccrSD5Ol.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccrSD5Ol.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccrSD5Ol.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccrSD5Ol.s:131    .text.MX_GPIO_Init:0000000000000088 $d
     /tmp/ccrSD5Ol.s:139    .text._Error_Handler:0000000000000000 $t
     /tmp/ccrSD5Ol.s:146    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccrSD5Ol.s:161    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccrSD5Ol.s:168    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccrSD5Ol.s:282    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccrSD5Ol.s:290    .text.main:0000000000000000 $t
     /tmp/ccrSD5Ol.s:297    .text.main:0000000000000000 main
     /tmp/ccrSD5Ol.s:337    .text.main:000000000000002c $d
     /tmp/ccrSD5Ol.s:343    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
